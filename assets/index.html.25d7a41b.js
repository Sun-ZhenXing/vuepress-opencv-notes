import{_ as t,r as p,o,c as e,a as n,b as s,d as c,e as u}from"./app.f9663942.js";const i={},l=u(`<h1 id="opencv-使用-dnn-部署-yolov7" tabindex="-1"><a class="header-anchor" href="#opencv-使用-dnn-部署-yolov7" aria-hidden="true">#</a> OpenCV 使用 DNN 部署 YOLOv7</h1><p>参考项目<sup class="footnote-ref"><a href="#footnote1">[1]</a><a class="footnote-anchor" id="footnote-ref1"></a></sup></p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> argparse
<span class="token keyword">import</span> os

<span class="token keyword">import</span> cv2
<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np


<span class="token keyword">class</span> <span class="token class-name">YOLOv7</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> path<span class="token punctuation">,</span> conf_thres<span class="token operator">=</span><span class="token number">0.7</span><span class="token punctuation">,</span> iou_thres<span class="token operator">=</span><span class="token number">0.5</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>conf_threshold <span class="token operator">=</span> conf_thres
        self<span class="token punctuation">.</span>iou_threshold <span class="token operator">=</span> iou_thres
        self<span class="token punctuation">.</span>class_names <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span>
            <span class="token builtin">map</span><span class="token punctuation">(</span><span class="token keyword">lambda</span> x<span class="token punctuation">:</span> x<span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&#39;coco.names&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;r&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>readlines<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token comment"># Initialize model</span>
        self<span class="token punctuation">.</span>net <span class="token operator">=</span> cv2<span class="token punctuation">.</span>dnn<span class="token punctuation">.</span>readNet<span class="token punctuation">(</span>path<span class="token punctuation">)</span>
        input_shape <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>splitext<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>basename<span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">[</span>
            <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">&#39;_&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">&#39;x&#39;</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>input_height <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>input_shape<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>input_width <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>input_shape<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

        self<span class="token punctuation">.</span>output_names <span class="token operator">=</span> self<span class="token punctuation">.</span>net<span class="token punctuation">.</span>getUnconnectedOutLayersNames<span class="token punctuation">(</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>has_postprocess <span class="token operator">=</span> <span class="token string">&#39;score&#39;</span> <span class="token keyword">in</span> self<span class="token punctuation">.</span>output_names

    <span class="token keyword">def</span> <span class="token function">detect</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> image<span class="token punctuation">)</span><span class="token punctuation">:</span>
        input_img <span class="token operator">=</span> self<span class="token punctuation">.</span>prepare_input<span class="token punctuation">(</span>image<span class="token punctuation">)</span>
        blob <span class="token operator">=</span> cv2<span class="token punctuation">.</span>dnn<span class="token punctuation">.</span>blobFromImage<span class="token punctuation">(</span>input_img<span class="token punctuation">,</span> <span class="token number">1</span> <span class="token operator">/</span> <span class="token number">255.0</span><span class="token punctuation">)</span>
        <span class="token comment"># Perform inference on the image</span>
        self<span class="token punctuation">.</span>net<span class="token punctuation">.</span>setInput<span class="token punctuation">(</span>blob<span class="token punctuation">)</span>
        <span class="token comment"># Runs the forward pass to get output of the output layers</span>
        outputs <span class="token operator">=</span> self<span class="token punctuation">.</span>net<span class="token punctuation">.</span>forward<span class="token punctuation">(</span>self<span class="token punctuation">.</span>output_names<span class="token punctuation">)</span>

        <span class="token keyword">if</span> self<span class="token punctuation">.</span>has_postprocess<span class="token punctuation">:</span>
            boxes<span class="token punctuation">,</span> scores<span class="token punctuation">,</span> class_ids <span class="token operator">=</span> self<span class="token punctuation">.</span>parse_processed_output<span class="token punctuation">(</span>outputs<span class="token punctuation">)</span>

        <span class="token keyword">else</span><span class="token punctuation">:</span>
            <span class="token comment"># Process output data</span>
            boxes<span class="token punctuation">,</span> scores<span class="token punctuation">,</span> class_ids <span class="token operator">=</span> self<span class="token punctuation">.</span>process_output<span class="token punctuation">(</span>outputs<span class="token punctuation">)</span>

        <span class="token keyword">return</span> boxes<span class="token punctuation">,</span> scores<span class="token punctuation">,</span> class_ids

    <span class="token keyword">def</span> <span class="token function">prepare_input</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> image<span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>img_height<span class="token punctuation">,</span> self<span class="token punctuation">.</span>img_width <span class="token operator">=</span> image<span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span>

        input_img <span class="token operator">=</span> cv2<span class="token punctuation">.</span>cvtColor<span class="token punctuation">(</span>image<span class="token punctuation">,</span> cv2<span class="token punctuation">.</span>COLOR_BGR2RGB<span class="token punctuation">)</span>

        <span class="token comment"># Resize input image</span>
        input_img <span class="token operator">=</span> cv2<span class="token punctuation">.</span>resize<span class="token punctuation">(</span>
            input_img<span class="token punctuation">,</span> <span class="token punctuation">(</span>self<span class="token punctuation">.</span>input_width<span class="token punctuation">,</span> self<span class="token punctuation">.</span>input_height<span class="token punctuation">)</span><span class="token punctuation">)</span>

        <span class="token comment"># Scale input pixel values to 0 to 1</span>
        <span class="token keyword">return</span> input_img

    <span class="token keyword">def</span> <span class="token function">process_output</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> output<span class="token punctuation">)</span><span class="token punctuation">:</span>
        predictions <span class="token operator">=</span> np<span class="token punctuation">.</span>squeeze<span class="token punctuation">(</span>output<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

        <span class="token comment"># Filter out object confidence scores below threshold</span>
        obj_conf <span class="token operator">=</span> predictions<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span>
        predictions <span class="token operator">=</span> predictions<span class="token punctuation">[</span>obj_conf <span class="token operator">&gt;</span> self<span class="token punctuation">.</span>conf_threshold<span class="token punctuation">]</span>
        obj_conf <span class="token operator">=</span> obj_conf<span class="token punctuation">[</span>obj_conf <span class="token operator">&gt;</span> self<span class="token punctuation">.</span>conf_threshold<span class="token punctuation">]</span>

        <span class="token comment"># Multiply class confidence with bounding box confidence</span>
        predictions<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">:</span><span class="token punctuation">]</span> <span class="token operator">*=</span> obj_conf<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> np<span class="token punctuation">.</span>newaxis<span class="token punctuation">]</span>

        <span class="token comment"># Get the scores</span>
        scores <span class="token operator">=</span> np<span class="token punctuation">.</span><span class="token builtin">max</span><span class="token punctuation">(</span>predictions<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">,</span> axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>

        <span class="token comment"># Filter out the objects with a low score</span>
        valid_scores <span class="token operator">=</span> scores <span class="token operator">&gt;</span> self<span class="token punctuation">.</span>conf_threshold
        predictions <span class="token operator">=</span> predictions<span class="token punctuation">[</span>valid_scores<span class="token punctuation">]</span>
        scores <span class="token operator">=</span> scores<span class="token punctuation">[</span>valid_scores<span class="token punctuation">]</span>

        <span class="token comment"># Get the class with the highest confidence</span>
        class_ids <span class="token operator">=</span> np<span class="token punctuation">.</span>argmax<span class="token punctuation">(</span>predictions<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">,</span> axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>

        <span class="token comment"># Get bounding boxes for each object</span>
        boxes <span class="token operator">=</span> self<span class="token punctuation">.</span>extract_boxes<span class="token punctuation">(</span>predictions<span class="token punctuation">)</span>

        <span class="token comment"># Apply non-maxima suppression to suppress weak, overlapping bounding boxes</span>
        <span class="token comment"># indices = nms(boxes, scores, self.iou_threshold)</span>
        indices <span class="token operator">=</span> cv2<span class="token punctuation">.</span>dnn<span class="token punctuation">.</span>NMSBoxes<span class="token punctuation">(</span>boxes<span class="token punctuation">.</span>tolist<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> scores<span class="token punctuation">.</span>tolist<span class="token punctuation">(</span>
        <span class="token punctuation">)</span><span class="token punctuation">,</span> self<span class="token punctuation">.</span>conf_threshold<span class="token punctuation">,</span> self<span class="token punctuation">.</span>iou_threshold<span class="token punctuation">)</span><span class="token punctuation">.</span>flatten<span class="token punctuation">(</span><span class="token punctuation">)</span>

        <span class="token keyword">return</span> boxes<span class="token punctuation">[</span>indices<span class="token punctuation">]</span><span class="token punctuation">,</span> scores<span class="token punctuation">[</span>indices<span class="token punctuation">]</span><span class="token punctuation">,</span> class_ids<span class="token punctuation">[</span>indices<span class="token punctuation">]</span>

    <span class="token keyword">def</span> <span class="token function">parse_processed_output</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> outputs<span class="token punctuation">)</span><span class="token punctuation">:</span>

        scores <span class="token operator">=</span> np<span class="token punctuation">.</span>squeeze<span class="token punctuation">(</span>outputs<span class="token punctuation">[</span>self<span class="token punctuation">.</span>output_names<span class="token punctuation">.</span>index<span class="token punctuation">(</span><span class="token string">&#39;score&#39;</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
        predictions <span class="token operator">=</span> outputs<span class="token punctuation">[</span>self<span class="token punctuation">.</span>output_names<span class="token punctuation">.</span>index<span class="token punctuation">(</span>
            <span class="token string">&#39;batchno_classid_x1y1x2y2&#39;</span><span class="token punctuation">)</span><span class="token punctuation">]</span>

        <span class="token comment"># Filter out object scores below threshold</span>
        valid_scores <span class="token operator">=</span> scores <span class="token operator">&gt;</span> self<span class="token punctuation">.</span>conf_threshold
        predictions <span class="token operator">=</span> predictions<span class="token punctuation">[</span>valid_scores<span class="token punctuation">,</span> <span class="token punctuation">:</span><span class="token punctuation">]</span>
        scores <span class="token operator">=</span> scores<span class="token punctuation">[</span>valid_scores<span class="token punctuation">]</span>

        <span class="token comment"># Extract the boxes and class ids</span>
        <span class="token comment"># TODO: Separate based on batch number</span>
        batch_number <span class="token operator">=</span> predictions<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span>
        class_ids <span class="token operator">=</span> predictions<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span>
        boxes <span class="token operator">=</span> predictions<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">:</span><span class="token punctuation">]</span>

        <span class="token comment"># In postprocess, the x,y are the y,x</span>
        boxes <span class="token operator">=</span> boxes<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">]</span>

        <span class="token comment"># Rescale boxes to original image dimensions</span>
        boxes <span class="token operator">=</span> self<span class="token punctuation">.</span>rescale_boxes<span class="token punctuation">(</span>boxes<span class="token punctuation">)</span>

        <span class="token keyword">return</span> boxes<span class="token punctuation">,</span> scores<span class="token punctuation">,</span> class_ids

    <span class="token keyword">def</span> <span class="token function">extract_boxes</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> predictions<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token comment"># Extract boxes from predictions</span>
        boxes <span class="token operator">=</span> predictions<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token punctuation">:</span><span class="token number">4</span><span class="token punctuation">]</span>

        <span class="token comment"># Scale boxes to original image dimensions</span>
        boxes <span class="token operator">=</span> self<span class="token punctuation">.</span>rescale_boxes<span class="token punctuation">(</span>boxes<span class="token punctuation">)</span>

        <span class="token comment"># Convert boxes to xyxy format</span>
        boxes_ <span class="token operator">=</span> np<span class="token punctuation">.</span>copy<span class="token punctuation">(</span>boxes<span class="token punctuation">)</span>
        boxes_<span class="token punctuation">[</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> boxes<span class="token punctuation">[</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">-</span> boxes<span class="token punctuation">[</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0.5</span>
        boxes_<span class="token punctuation">[</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> boxes<span class="token punctuation">[</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">-</span> boxes<span class="token punctuation">[</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0.5</span>
        boxes_<span class="token punctuation">[</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> boxes<span class="token punctuation">[</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">+</span> boxes<span class="token punctuation">[</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0.5</span>
        boxes_<span class="token punctuation">[</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">=</span> boxes<span class="token punctuation">[</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span> boxes<span class="token punctuation">[</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0.5</span>

        <span class="token keyword">return</span> boxes_

    <span class="token keyword">def</span> <span class="token function">rescale_boxes</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> boxes<span class="token punctuation">)</span><span class="token punctuation">:</span>

        <span class="token comment"># Rescale boxes to original image dimensions</span>
        input_shape <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>
            <span class="token punctuation">[</span>self<span class="token punctuation">.</span>input_width<span class="token punctuation">,</span> self<span class="token punctuation">.</span>input_height<span class="token punctuation">,</span> self<span class="token punctuation">.</span>input_width<span class="token punctuation">,</span> self<span class="token punctuation">.</span>input_height<span class="token punctuation">]</span><span class="token punctuation">)</span>
        boxes <span class="token operator">=</span> np<span class="token punctuation">.</span>divide<span class="token punctuation">(</span>boxes<span class="token punctuation">,</span> input_shape<span class="token punctuation">,</span> dtype<span class="token operator">=</span>np<span class="token punctuation">.</span>float32<span class="token punctuation">)</span>
        boxes <span class="token operator">*=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span>self<span class="token punctuation">.</span>img_width<span class="token punctuation">,</span> self<span class="token punctuation">.</span>img_height<span class="token punctuation">,</span>
                           self<span class="token punctuation">.</span>img_width<span class="token punctuation">,</span> self<span class="token punctuation">.</span>img_height<span class="token punctuation">]</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> boxes

    <span class="token keyword">def</span> <span class="token function">draw_detections</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> image<span class="token punctuation">,</span> boxes<span class="token punctuation">,</span> scores<span class="token punctuation">,</span> class_ids<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">for</span> box<span class="token punctuation">,</span> score<span class="token punctuation">,</span> class_id <span class="token keyword">in</span> <span class="token builtin">zip</span><span class="token punctuation">(</span>boxes<span class="token punctuation">,</span> scores<span class="token punctuation">,</span> class_ids<span class="token punctuation">)</span><span class="token punctuation">:</span>
            x1<span class="token punctuation">,</span> y1<span class="token punctuation">,</span> x2<span class="token punctuation">,</span> y2 <span class="token operator">=</span> box<span class="token punctuation">.</span>astype<span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">)</span>

            <span class="token comment"># Draw rectangle</span>
            cv2<span class="token punctuation">.</span>rectangle<span class="token punctuation">(</span>image<span class="token punctuation">,</span> <span class="token punctuation">(</span>x1<span class="token punctuation">,</span> y1<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>x2<span class="token punctuation">,</span> y2<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">,</span> thickness<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span>
            label <span class="token operator">=</span> self<span class="token punctuation">.</span>class_names<span class="token punctuation">[</span>class_id<span class="token punctuation">]</span>
            label <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f&#39;</span><span class="token interpolation"><span class="token punctuation">{</span>label<span class="token punctuation">}</span></span><span class="token string"> </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token builtin">int</span><span class="token punctuation">(</span>score <span class="token operator">*</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string">%&#39;</span></span>
            labelSize<span class="token punctuation">,</span> baseLine <span class="token operator">=</span> cv2<span class="token punctuation">.</span>getTextSize<span class="token punctuation">(</span>
                label<span class="token punctuation">,</span> cv2<span class="token punctuation">.</span>FONT_HERSHEY_SIMPLEX<span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>
            <span class="token comment"># top = max(y1, labelSize[1])</span>
            <span class="token comment"># cv.rectangle(frame, (left, top - round(1.5 * labelSize[1])), (left + round(1.5 * labelSize[0]), top + baseLine), (255,255,255), cv.FILLED)</span>
            cv2<span class="token punctuation">.</span>putText<span class="token punctuation">(</span>image<span class="token punctuation">,</span> label<span class="token punctuation">,</span> <span class="token punctuation">(</span>x1<span class="token punctuation">,</span> y1 <span class="token operator">-</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                        cv2<span class="token punctuation">.</span>FONT_HERSHEY_SIMPLEX<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> thickness<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> image

<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&#39;__main__&#39;</span><span class="token punctuation">:</span>
    parser <span class="token operator">=</span> argparse<span class="token punctuation">.</span>ArgumentParser<span class="token punctuation">(</span><span class="token punctuation">)</span>
    parser<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">&#39;--imgpath&#39;</span><span class="token punctuation">,</span> <span class="token builtin">type</span><span class="token operator">=</span><span class="token builtin">str</span><span class="token punctuation">,</span>
                        default<span class="token operator">=</span><span class="token string">&#39;images/person.jpg&#39;</span><span class="token punctuation">,</span> <span class="token builtin">help</span><span class="token operator">=</span><span class="token string">&quot;image path&quot;</span><span class="token punctuation">)</span>
    parser<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">&#39;--modelpath&#39;</span><span class="token punctuation">,</span> <span class="token builtin">type</span><span class="token operator">=</span><span class="token builtin">str</span><span class="token punctuation">,</span> default<span class="token operator">=</span><span class="token string">&#39;models/yolov7_640x640.onnx&#39;</span><span class="token punctuation">,</span>
                        choices<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&quot;models/yolov7_640x640.onnx&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;models/yolov7-tiny_640x640.onnx&quot;</span><span class="token punctuation">,</span>
                                 <span class="token string">&quot;models/yolov7_736x1280.onnx&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;models/yolov7-tiny_384x640.onnx&quot;</span><span class="token punctuation">,</span>
                                 <span class="token string">&quot;models/yolov7_480x640.onnx&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;models/yolov7_384x640.onnx&quot;</span><span class="token punctuation">,</span>
                                 <span class="token string">&quot;models/yolov7-tiny_256x480.onnx&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;models/yolov7-tiny_256x320.onnx&quot;</span><span class="token punctuation">,</span>
                                 <span class="token string">&quot;models/yolov7_256x320.onnx&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;models/yolov7-tiny_256x640.onnx&quot;</span><span class="token punctuation">,</span>
                                 <span class="token string">&quot;models/yolov7_256x640.onnx&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;models/yolov7-tiny_480x640.onnx&quot;</span><span class="token punctuation">,</span>
                                 <span class="token string">&quot;models/yolov7-tiny_736x1280.onnx&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;models/yolov7_256x480.onnx&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
                        <span class="token builtin">help</span><span class="token operator">=</span><span class="token string">&quot;onnx filepath&quot;</span><span class="token punctuation">)</span>
    parser<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">&#39;--confThreshold&#39;</span><span class="token punctuation">,</span> default<span class="token operator">=</span><span class="token number">0.3</span><span class="token punctuation">,</span>
                        <span class="token builtin">type</span><span class="token operator">=</span><span class="token builtin">float</span><span class="token punctuation">,</span> <span class="token builtin">help</span><span class="token operator">=</span><span class="token string">&#39;class confidence&#39;</span><span class="token punctuation">)</span>
    parser<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">&#39;--nmsThreshold&#39;</span><span class="token punctuation">,</span> default<span class="token operator">=</span><span class="token number">0.5</span><span class="token punctuation">,</span>
                        <span class="token builtin">type</span><span class="token operator">=</span><span class="token builtin">float</span><span class="token punctuation">,</span> <span class="token builtin">help</span><span class="token operator">=</span><span class="token string">&#39;nms iou thresh&#39;</span><span class="token punctuation">)</span>
    args <span class="token operator">=</span> parser<span class="token punctuation">.</span>parse_args<span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token comment"># Initialize YOLOv7 object detector</span>
    yolov7_detector <span class="token operator">=</span> YOLOv7<span class="token punctuation">(</span>
        args<span class="token punctuation">.</span>modelpath<span class="token punctuation">,</span> conf_thres<span class="token operator">=</span>args<span class="token punctuation">.</span>confThreshold<span class="token punctuation">,</span> iou_thres<span class="token operator">=</span>args<span class="token punctuation">.</span>nmsThreshold<span class="token punctuation">)</span>
    srcimg <span class="token operator">=</span> cv2<span class="token punctuation">.</span>imread<span class="token punctuation">(</span>args<span class="token punctuation">.</span>imgpath<span class="token punctuation">)</span>

    <span class="token comment"># Detect Objects</span>
    boxes<span class="token punctuation">,</span> scores<span class="token punctuation">,</span> class_ids <span class="token operator">=</span> yolov7_detector<span class="token punctuation">.</span>detect<span class="token punctuation">(</span>srcimg<span class="token punctuation">)</span>

    <span class="token comment"># Draw detections</span>
    dstimg <span class="token operator">=</span> yolov7_detector<span class="token punctuation">.</span>draw_detections<span class="token punctuation">(</span>srcimg<span class="token punctuation">,</span> boxes<span class="token punctuation">,</span> scores<span class="token punctuation">,</span> class_ids<span class="token punctuation">)</span>
    winName <span class="token operator">=</span> <span class="token string">&#39;Deep learning object detection in OpenCV&#39;</span>
    cv2<span class="token punctuation">.</span>namedWindow<span class="token punctuation">(</span>winName<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
    cv2<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>winName<span class="token punctuation">,</span> dstimg<span class="token punctuation">)</span>
    cv2<span class="token punctuation">.</span>waitKey<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
    cv2<span class="token punctuation">.</span>destroyAllWindows<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr class="footnotes-sep">`,4),k={class:"footnotes"},r={class:"footnotes-list"},d={id:"footnote1",class:"footnote-item"},v={href:"https://github.com/hpc203/yolov7-opencv-onnxrun-cpp-py",target:"_blank",rel:"noopener noreferrer"},m=n("a",{href:"#footnote-ref1",class:"footnote-backref"},"↩︎",-1);function b(_,f){const a=p("ExternalLinkIcon");return o(),e("div",null,[l,n("section",k,[n("ol",r,[n("li",d,[n("p",null,[n("a",v,[s("https://github.com/hpc203/yolov7-opencv-onnxrun-cpp-py"),c(a)]),s(),m])])])])])}const x=t(i,[["render",b],["__file","index.html.vue"]]);export{x as default};
