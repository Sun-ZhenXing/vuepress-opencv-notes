import{_ as o,M as p,p as c,q as l,R as n,N as a,V as i,t as s,a1 as u}from"./framework-546207d5.js";const r="/vuepress-opencv-notes/assets/rugby-a70337bd.jpg",k="/vuepress-opencv-notes/assets/basket-5fa6e6da.jpg",d="/vuepress-opencv-notes/assets/res-3e38cb40.jpg",m={},v=n("h1",{id:"opencv-和-yolov8-进行实例分割",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#opencv-和-yolov8-进行实例分割","aria-hidden":"true"},"#"),s(" OpenCV 和 YOLOv8 进行实例分割")],-1),b={class:"table-of-contents"},g={class:"hint-container info"},_=n("p",{class:"hint-container-title"},"源代码",-1),y={href:"https://pysource.com/2023/02/21/yolo-v8-segmentation",target:"_blank",rel:"noopener noreferrer"},h=u(`<h2 id="_1-yolov8-环境" tabindex="-1"><a class="header-anchor" href="#_1-yolov8-环境" aria-hidden="true">#</a> 1. YOLOv8 环境</h2><div class="language-bash" data-ext="sh"><pre class="language-bash"><code>pip <span class="token function">install</span> ultralytics
pip <span class="token function">install</span> opencv-python
</code></pre></div><p>我们先创建 <code>yolo_segmentation.py</code>：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># https://pysource.com/2023/02/21/yolo-v8-segmentation</span>
<span class="token keyword">from</span> ultralytics <span class="token keyword">import</span> YOLO
<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np

<span class="token keyword">class</span> <span class="token class-name">YOLOSegmentation</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> model_path<span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>model <span class="token operator">=</span> YOLO<span class="token punctuation">(</span>model_path<span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">detect</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> img<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token comment"># Get img shape</span>

        height<span class="token punctuation">,</span> width<span class="token punctuation">,</span> channels <span class="token operator">=</span> img<span class="token punctuation">.</span>shape

        results <span class="token operator">=</span> self<span class="token punctuation">.</span>model<span class="token punctuation">.</span>predict<span class="token punctuation">(</span>
            source<span class="token operator">=</span>img<span class="token punctuation">.</span>copy<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> save<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> save_txt<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>
        result <span class="token operator">=</span> results<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
        segmentation_contours_idx <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
        <span class="token keyword">for</span> seg <span class="token keyword">in</span> result<span class="token punctuation">.</span>masks<span class="token punctuation">.</span>segments<span class="token punctuation">:</span>
            <span class="token comment"># contours</span>
            seg<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">*=</span> width
            seg<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">*=</span> height
            segment <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>seg<span class="token punctuation">,</span> dtype<span class="token operator">=</span>np<span class="token punctuation">.</span>int32<span class="token punctuation">)</span>
            segmentation_contours_idx<span class="token punctuation">.</span>append<span class="token punctuation">(</span>segment<span class="token punctuation">)</span>

        bboxes <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>result<span class="token punctuation">.</span>boxes<span class="token punctuation">.</span>xyxy<span class="token punctuation">.</span>cpu<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> dtype<span class="token operator">=</span><span class="token string">&#39;int&#39;</span><span class="token punctuation">)</span>
        <span class="token comment"># Get class ids</span>
        class_ids <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>result<span class="token punctuation">.</span>boxes<span class="token punctuation">.</span>cls<span class="token punctuation">.</span>cpu<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> dtype<span class="token operator">=</span><span class="token string">&#39;int&#39;</span><span class="token punctuation">)</span>
        <span class="token comment"># Get scores</span>
        scores <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>result<span class="token punctuation">.</span>boxes<span class="token punctuation">.</span>conf<span class="token punctuation">.</span>cpu<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> dtype<span class="token operator">=</span><span class="token string">&#39;float&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">round</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> bboxes<span class="token punctuation">,</span> class_ids<span class="token punctuation">,</span> segmentation_contours_idx<span class="token punctuation">,</span> scores
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后创建 <code>main.py</code>：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> cv2

<span class="token keyword">from</span> yolo_segmentation <span class="token keyword">import</span> YOLOSegmentation

img <span class="token operator">=</span> cv2<span class="token punctuation">.</span>imread<span class="token punctuation">(</span><span class="token string">&#39;images/rugby.jpg&#39;</span><span class="token punctuation">)</span>
img <span class="token operator">=</span> cv2<span class="token punctuation">.</span>resize<span class="token punctuation">(</span>img<span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">,</span> fx<span class="token operator">=</span><span class="token number">0.7</span><span class="token punctuation">,</span> fy<span class="token operator">=</span><span class="token number">0.7</span><span class="token punctuation">)</span>

ys <span class="token operator">=</span> YOLOSegmentation<span class="token punctuation">(</span><span class="token string">&#39;yolov8m-seg.pt&#39;</span><span class="token punctuation">)</span>

bboxes<span class="token punctuation">,</span> classes<span class="token punctuation">,</span> segmentations<span class="token punctuation">,</span> scores <span class="token operator">=</span> ys<span class="token punctuation">.</span>detect<span class="token punctuation">(</span>img<span class="token punctuation">)</span>
<span class="token keyword">for</span> bbox<span class="token punctuation">,</span> class_id<span class="token punctuation">,</span> seg<span class="token punctuation">,</span> score <span class="token keyword">in</span> <span class="token builtin">zip</span><span class="token punctuation">(</span>bboxes<span class="token punctuation">,</span> classes<span class="token punctuation">,</span> segmentations<span class="token punctuation">,</span> scores<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;bbox:&#39;</span><span class="token punctuation">,</span> bbox<span class="token punctuation">,</span> <span class="token string">&#39;class id:&#39;</span><span class="token punctuation">,</span> class_id<span class="token punctuation">,</span> <span class="token string">&#39;seg:&#39;</span><span class="token punctuation">,</span> seg<span class="token punctuation">,</span> <span class="token string">&#39;score:&#39;</span><span class="token punctuation">,</span> score<span class="token punctuation">)</span>
    x1<span class="token punctuation">,</span> y1<span class="token punctuation">,</span> x2<span class="token punctuation">,</span> y2 <span class="token operator">=</span> bbox
    cv2<span class="token punctuation">.</span>rectangle<span class="token punctuation">(</span>img<span class="token punctuation">,</span> <span class="token punctuation">(</span>x1<span class="token punctuation">,</span> y1<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>x2<span class="token punctuation">,</span> y2<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>
    cv2<span class="token punctuation">.</span>polylines<span class="token punctuation">(</span>img<span class="token punctuation">,</span> <span class="token punctuation">[</span>seg<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span>

cv2<span class="token punctuation">.</span>imwrite<span class="token punctuation">(</span><span class="token string">&#39;res.jpg&#39;</span><span class="token punctuation">,</span> img<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>下面分别是实验用到的 <code>rugby.jpg</code> 和 <code>basket.jpg</code>，</p><p><img src="`+r+'" alt="rugby.jpg" loading="lazy"></p><p><img src="'+k+'" alt="basket.jpg" loading="lazy"></p>',9),f={class:"hint-container info"},x=n("p",{class:"hint-container-title"},"版权图片",-1),w=n("p",null,"如果您需要图片的版权请访问他们的版权商：",-1),O={href:"https://www.pexels.com/it-it/foto/kigoa-football-su-erba-verde-durante-il-giorno-209956/",target:"_blank",rel:"noopener noreferrer"},j={href:"https://www.pexels.com/it-it/foto/uomo-che-gioca-a-basket-267761/",target:"_blank",rel:"noopener noreferrer"},L=n("p",null,"生成结果：",-1),Y=n("p",null,[n("img",{src:d,alt:"",loading:"lazy"})],-1);function N(V,z){const e=p("router-link"),t=p("ExternalLinkIcon");return c(),l("div",null,[v,n("nav",b,[n("ul",null,[n("li",null,[a(e,{to:"#_1-yolov8-环境"},{default:i(()=>[s("1. YOLOv8 环境")]),_:1})])])]),n("div",g,[_,n("p",null,[s("您如果需要下载源代码，应该到 "),n("a",y,[s("Pysource"),a(t)]),s(" 下载，本文只是引用其博客的内容。")])]),h,n("div",f,[x,w,n("ul",null,[n("li",null,[n("a",O,[s("rugby.jpg"),a(t)])]),n("li",null,[n("a",j,[s("basket.jpg"),a(t)])])])]),L,Y])}const B=o(m,[["render",N],["__file","index.html.vue"]]);export{B as default};
