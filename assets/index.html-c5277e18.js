import{_ as i,r as c,o as r,c as D,b as s,a,w as p,d as n,e}from"./app-e045e1fd.js";const t={},d=s("h1",{id:"_2-opencv-中的-gui-特性",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#_2-opencv-中的-gui-特性","aria-hidden":"true"},"#"),n(" 2. OpenCV 中的 GUI 特性")],-1),y={class:"table-of-contents"},v=e(`<h2 id="_2-1-图片" tabindex="-1"><a class="header-anchor" href="#_2-1-图片" aria-hidden="true">#</a> 2.1 图片</h2><details class="hint-container details"><summary>学习目标</summary><ul><li>读取、显示和保存图像</li><li>函数 <ul><li><code>cv2.imread()</code> 读取图像</li><li><code>cv2.imshow()</code> 显示图像</li><li><code>cv2.imwrite()</code> 保存图像</li><li><code>cv2.waitKey()</code> 等待读入一个键盘值</li><li><code>cv2.destroyAllWindows()</code> 关闭所有窗体</li><li><code>cv2.namedWindow()</code> 创建命名窗体</li></ul></li><li>如何使用 Matplotlib 显示图片，并解决颜色错乱的问题</li></ul></details><h3 id="_2-1-1-读取一张图片" tabindex="-1"><a class="header-anchor" href="#_2-1-1-读取一张图片" aria-hidden="true">#</a> 2.1.1 读取一张图片</h3><div class="language-python" data-ext="py"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> numpy </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> np</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> cv2</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">img = cv2.imread(</span><span style="color:#CE9178;">&#39;messi5.jpg&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"></span></code></pre></div><div class="hint-container warning"><p class="hint-container-title">读取错误</p><p>即使图像的路径是错的，OpenCV 也不会提醒你的，结果是 <code>None</code>。</p></div><table><thead><tr><th>参数</th><th>含义</th></tr></thead><tbody><tr><td><code>cv2.IMREAD_COLOR = 1</code></td><td>读入一副彩色图像。图像的透明度会被忽略，这是默认参数</td></tr><tr><td><code>cv2.IMREAD_UNCHANGED = -1</code></td><td>读入一幅图像，并且包括图像的 Alpha 通道</td></tr><tr><td><code>cv2.IMREAD_GRAYSCALE = 0</code></td><td>以灰度模式读入图像</td></tr></tbody></table><h3 id="_2-1-2-显示图像" tabindex="-1"><a class="header-anchor" href="#_2-1-2-显示图像" aria-hidden="true">#</a> 2.1.2 显示图像</h3><div class="language-python" data-ext="py"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#D4D4D4;">cv2.imshow(</span><span style="color:#CE9178;">&#39;image&#39;</span><span style="color:#D4D4D4;">, img)</span></span>
<span class="line"><span style="color:#D4D4D4;">cv2.waitKey(</span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">cv2.destroyAllWindows()</span></span>
<span class="line"></span></code></pre></div><div class="hint-container tip"><p class="hint-container-title">建议</p><p>你也可以先创建一个窗口，之后再加载图像。这种情况下，你可以决定窗口是否可以调整大小。使用到的函数是 <code>cv2.namedWindow()</code>，此时默认值为 <code>cv2.WINDOW_AUTOSIZE = 1</code>，可以设置为 <code>cv2.WINDOW_NORMAL = 0</code>。</p></div><p>命名窗口的使用方式如下：</p><div class="language-python" data-ext="py"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#D4D4D4;">cv2.namedWindow(</span><span style="color:#CE9178;">&#39;image&#39;</span><span style="color:#D4D4D4;">, cv2.WINDOW_NORMAL)</span></span>
<span class="line"><span style="color:#D4D4D4;">cv2.imshow(</span><span style="color:#CE9178;">&#39;image&#39;</span><span style="color:#D4D4D4;">, img)</span></span>
<span class="line"></span></code></pre></div><h3 id="_2-1-3-保存图像" tabindex="-1"><a class="header-anchor" href="#_2-1-3-保存图像" aria-hidden="true">#</a> 2.1.3 保存图像</h3><div class="language-python" data-ext="py"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#D4D4D4;">cv2.imwrite(</span><span style="color:#CE9178;">&#39;messigray.png&#39;</span><span style="color:#D4D4D4;">, img)</span></span>
<span class="line"></span></code></pre></div><h3 id="_2-1-4-综合示例" tabindex="-1"><a class="header-anchor" href="#_2-1-4-综合示例" aria-hidden="true">#</a> 2.1.4 综合示例</h3><p>以灰度模式打开图像，按 <code>s</code> 保存，<code>ESC</code> 退出则不保存。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> cv2</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">img = cv2.imread(</span><span style="color:#CE9178;">&#39;messi5.jpg&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">cv2.imshow(</span><span style="color:#CE9178;">&#39;image&#39;</span><span style="color:#D4D4D4;">, img)</span></span>
<span class="line"><span style="color:#D4D4D4;">k = cv2.waitKey(</span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">) &amp; </span><span style="color:#569CD6;">0x</span><span style="color:#B5CEA8;">ff</span></span>
<span class="line"><span style="color:#C586C0;">if</span><span style="color:#D4D4D4;"> k == </span><span style="color:#B5CEA8;">27</span><span style="color:#D4D4D4;">:</span></span>
<span class="line"><span style="color:#D4D4D4;">    cv2.destroyAllWindows()</span></span>
<span class="line"><span style="color:#C586C0;">elif</span><span style="color:#D4D4D4;"> k == </span><span style="color:#DCDCAA;">ord</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;s&#39;</span><span style="color:#D4D4D4;">):</span></span>
<span class="line"><span style="color:#D4D4D4;">    cv2.imwrite(</span><span style="color:#CE9178;">&#39;messigray.png&#39;</span><span style="color:#D4D4D4;">, img)</span></span>
<span class="line"><span style="color:#D4D4D4;">    cv2.destroyAllWindows()</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-1-5-使用-matplotlib" tabindex="-1"><a class="header-anchor" href="#_2-1-5-使用-matplotlib" aria-hidden="true">#</a> 2.1.5 使用 Matplotlib</h3><div class="language-python" data-ext="py"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> cv2</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> matplotlib.pyplot </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> plt</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">img = cv2.imread(</span><span style="color:#CE9178;">&#39;cv2test.png&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">plt.imshow(img, </span><span style="color:#9CDCFE;">cmap</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&#39;gray&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">interpolation</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&#39;bicubic&#39;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">plt.xticks([])</span></span>
<span class="line"><span style="color:#D4D4D4;">plt.yticks([])</span></span>
<span class="line"><span style="color:#D4D4D4;">plt.show()</span></span>
<span class="line"></span></code></pre></div>`,18),C={class:"hint-container warning"},u=s("p",{class:"hint-container-title"},"不正确的颜色空间",-1),m=s("p",null,"彩色图像使用 OpenCV 加载时是 BGR 模式。但是 Matplotib 是 RGB 模式。所以彩色图像如果已经被 OpenCV 读取，那它将不会被 Matplotib 正确显示。",-1),b={href:"https://stackoverflow.com/questions/15072736/extracting-a-region-from-an-image-using-slicing-in-python-opencv/15074748#15074748",target:"_blank",rel:"noopener noreferrer"},E=s("code",null,"img = img[..., ::-1]",-1),h=e(`<div class="language-python line-numbers-mode" data-ext="py"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> cv2</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> matplotlib.pyplot </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> plt</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">img = cv2.imread(</span><span style="color:#CE9178;">&#39;cv2test.png&#39;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">b, g, r = cv2.split(img)</span></span>
<span class="line"><span style="color:#D4D4D4;">img2 = cv2.merge([r, g, b])</span></span>
<span class="line"><span style="color:#D4D4D4;">plt.subplot(</span><span style="color:#B5CEA8;">121</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;"># 错误的颜色</span></span>
<span class="line"><span style="color:#D4D4D4;">plt.imshow(img)</span></span>
<span class="line"><span style="color:#D4D4D4;">plt.subplot(</span><span style="color:#B5CEA8;">122</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;"># 正确的颜色</span></span>
<span class="line"><span style="color:#D4D4D4;">plt.imshow(img2)</span></span>
<span class="line"><span style="color:#D4D4D4;">plt.show()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;"># 正确的颜色</span></span>
<span class="line"><span style="color:#D4D4D4;">cv2.imshow(</span><span style="color:#CE9178;">&#39;bgr image&#39;</span><span style="color:#D4D4D4;">, img)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;"># 错误的颜色</span></span>
<span class="line"><span style="color:#D4D4D4;">cv2.imshow(</span><span style="color:#CE9178;">&#39;rgb image&#39;</span><span style="color:#D4D4D4;">, img2)</span></span>
<span class="line"><span style="color:#D4D4D4;">cv2.waitKey(</span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">cv2.destroyAllWindows()</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-2-视频" tabindex="-1"><a class="header-anchor" href="#_2-2-视频" aria-hidden="true">#</a> 2.2 视频</h2><details class="hint-container details"><summary>学习目标</summary><ul><li>读取、显示和保存视频</li><li>从摄像头读取并显示视频</li><li>函数 <ul><li><code>cv2.VideoCapture()</code> 读取摄像头</li><li><code>cv2.VideoWrite()</code> 写入视频</li><li><code>cv2.cvtColor()</code> 转换颜色空间</li><li><code>cv2.flip()</code> 翻转图像</li></ul></li></ul></details><h3 id="_2-2-1-捕获摄像头" tabindex="-1"><a class="header-anchor" href="#_2-2-1-捕获摄像头" aria-hidden="true">#</a> 2.2.1 捕获摄像头</h3><p><code>cv2.VideoCapture(0)</code> 捕获第一个摄像头，<code>cap.read()</code> 读取图像。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> cv2</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">cap = cv2.VideoCapture(</span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C586C0;">while</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">True</span><span style="color:#D4D4D4;">:</span></span>
<span class="line"><span style="color:#D4D4D4;">    ret, frame = cap.read()</span></span>
<span class="line"><span style="color:#D4D4D4;">    gray = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)</span></span>
<span class="line"><span style="color:#D4D4D4;">    cv2.imshow(</span><span style="color:#CE9178;">&#39;frame&#39;</span><span style="color:#D4D4D4;">, gray)</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">if</span><span style="color:#D4D4D4;"> cv2.waitKey(</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">) &amp; </span><span style="color:#569CD6;">0x</span><span style="color:#B5CEA8;">ff</span><span style="color:#D4D4D4;"> == </span><span style="color:#DCDCAA;">ord</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;q&#39;</span><span style="color:#D4D4D4;">):</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#C586C0;">break</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">cap.release()</span></span>
<span class="line"><span style="color:#D4D4D4;">cv2.destroyAllWindows()</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果可能打开失败时，使用 <code>cap.isOpened()</code> 判断是否打开成功。</p>`,7),g=s("code",null,"cap.get(propId)",-1),A=s("code",null,"propId",-1),_={href:"https://docs.opencv.org/4.7.0/d4/d15/group__videoio__flags__base.html#gaeb8dd9c89c10a5c63c139bf7c4f5704d",target:"_blank",rel:"noopener noreferrer"},B=s("code",null,"cv::VideoCaptureProperties",-1),f=e(`<p>其中的一些值可以使用 <code>cap.set(propId, value)</code> 来修改，<code>value</code> 就是你想要设置成的新值。例如，可以使用 <code>cap.get(3)</code> 和 <code>cap.get(4)</code> 来查看每一帧的宽和高。</p><h3 id="_2-2-2-从文件中播放视频" tabindex="-1"><a class="header-anchor" href="#_2-2-2-从文件中播放视频" aria-hidden="true">#</a> 2.2.2 从文件中播放视频</h3><p>输入文件名，然后播放视频文件的内容：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> cv2</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">video_path = </span><span style="color:#DCDCAA;">input</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;video path:&#39;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">cap = cv2.VideoCapture(video_path)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C586C0;">while</span><span style="color:#D4D4D4;"> cap.isOpened():</span></span>
<span class="line"><span style="color:#D4D4D4;">    ret, frame = cap.read()</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">if</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">not</span><span style="color:#D4D4D4;"> ret:</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#C586C0;">break</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#6A9955;"># 可以翻转过来播放</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#6A9955;"># frame = cv2.flip(frame, 0)</span></span>
<span class="line"><span style="color:#D4D4D4;">    cv2.imshow(</span><span style="color:#CE9178;">&#39;frame&#39;</span><span style="color:#D4D4D4;">, frame)</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">if</span><span style="color:#D4D4D4;"> cv2.waitKey(</span><span style="color:#B5CEA8;">100</span><span style="color:#D4D4D4;">) &amp; </span><span style="color:#569CD6;">0x</span><span style="color:#B5CEA8;">FF</span><span style="color:#D4D4D4;"> == </span><span style="color:#DCDCAA;">ord</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;q&#39;</span><span style="color:#D4D4D4;">):</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#C586C0;">break</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">cap.release()</span></span>
<span class="line"><span style="color:#D4D4D4;">cv2.destroyAllWindows()</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container warning"><p class="hint-container-title">依赖安装</p><p>默认情况下，OpenCV 安装时就包含了合适的依赖，如 FFmpeg。但是可能和你的电脑驱动不匹配，导致无法打开摄像头、无法保存视频等问题。这时候你需要选择合适的版本或更新你电脑中的驱动。</p></div><h3 id="_2-2-3-保存捕获的视频" tabindex="-1"><a class="header-anchor" href="#_2-2-3-保存捕获的视频" aria-hidden="true">#</a> 2.2.3 保存捕获的视频</h3><p>使用 <code>cv2.cv.FOURCC(*&#39;MJPG&#39;)</code> 保存，<code>cv2.VideoWriter()</code> 用于写入视频。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> cv2</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">cap = cv2.VideoCapture(</span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;"># 定义 codec 并创建 VideoWriter 对象</span></span>
<span class="line"><span style="color:#D4D4D4;">fourcc = cv2.cv.FOURCC(*</span><span style="color:#CE9178;">&#39;XVID&#39;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">out = cv2.VideoWriter(</span><span style="color:#CE9178;">&#39;output.avi&#39;</span><span style="color:#D4D4D4;">, fourcc, </span><span style="color:#B5CEA8;">20.0</span><span style="color:#D4D4D4;">, (</span><span style="color:#B5CEA8;">640</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">480</span><span style="color:#D4D4D4;">))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C586C0;">while</span><span style="color:#D4D4D4;"> cap.isOpened():</span></span>
<span class="line"><span style="color:#D4D4D4;">    ret, frame = cap.read()</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">if</span><span style="color:#D4D4D4;"> ret == </span><span style="color:#569CD6;">True</span><span style="color:#D4D4D4;">:</span></span>
<span class="line"><span style="color:#D4D4D4;">        frame = cv2.flip(frame, </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#6A9955;"># 写入裁剪的帧</span></span>
<span class="line"><span style="color:#D4D4D4;">        out.write(frame)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">        cv2.imshow(</span><span style="color:#CE9178;">&#39;frame&#39;</span><span style="color:#D4D4D4;">, frame)</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#C586C0;">if</span><span style="color:#D4D4D4;"> cv2.waitKey(</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">) &amp; </span><span style="color:#569CD6;">0x</span><span style="color:#B5CEA8;">FF</span><span style="color:#D4D4D4;"> == </span><span style="color:#DCDCAA;">ord</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;q&#39;</span><span style="color:#D4D4D4;">):</span></span>
<span class="line"><span style="color:#D4D4D4;">            </span><span style="color:#C586C0;">break</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">else</span><span style="color:#D4D4D4;">:</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#C586C0;">break</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;"># 释放内存</span></span>
<span class="line"><span style="color:#D4D4D4;">cap.release()</span></span>
<span class="line"><span style="color:#D4D4D4;">out.release()</span></span>
<span class="line"><span style="color:#D4D4D4;">cv2.destroyAllWindows()</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>编码指南：</p><ul><li><code>X264</code> 适合小尺寸视频</li><li><code>MJPG</code> 适合大尺寸视频</li><li><code>XVID</code> 适合自适应</li><li><code>DIVX</code> 适合 Windows 系统</li><li><code>WMV1</code> 微软开发的一种视频格式，属于 WMV</li><li><code>WMV2</code> 微软开发的一种视频格式，属于 WMV</li></ul>`,10),k={class:"hint-container info"},x=s("p",{class:"hint-container-title"},"编码",-1),w={href:"https://www.fourcc.org/codecs.php",target:"_blank",rel:"noopener noreferrer"},T=e(`<h2 id="_2-3-绘图函数" tabindex="-1"><a class="header-anchor" href="#_2-3-绘图函数" aria-hidden="true">#</a> 2.3 绘图函数</h2><details class="hint-container details"><summary>学习目标</summary><ul><li>绘制不同的几何图形</li><li>函数 <ul><li><code>cv2.line()</code> 画线</li><li><code>cv2.circle()</code> 画圈</li><li><code>cv2.rectangle()</code> 矩形</li><li><code>cv2.ellipse()</code> 椭圆形</li><li><code>cv2.putText()</code> 绘制文本</li></ul></li></ul></details><h3 id="_2-3-1-画线" tabindex="-1"><a class="header-anchor" href="#_2-3-1-画线" aria-hidden="true">#</a> 2.3.1 画线</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> numpy </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> np</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> cv2</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;"># 黑色的背景图</span></span>
<span class="line"><span style="color:#D4D4D4;">img = np.zeros((</span><span style="color:#B5CEA8;">512</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">512</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">3</span><span style="color:#D4D4D4;">), np.uint8)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;"># 蓝色的线，5px</span></span>
<span class="line"><span style="color:#D4D4D4;">cv2.line(img, (</span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">), (</span><span style="color:#B5CEA8;">511</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">511</span><span style="color:#D4D4D4;">), (</span><span style="color:#B5CEA8;">255</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">), </span><span style="color:#B5CEA8;">5</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">winname = </span><span style="color:#CE9178;">&#39;example&#39;</span></span>
<span class="line"><span style="color:#D4D4D4;">cv2.namedWindow(winname)</span></span>
<span class="line"><span style="color:#D4D4D4;">cv2.imshow(winname, img)</span></span>
<span class="line"><span style="color:#D4D4D4;">cv2.waitKey(</span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">cv2.destroyWindow(winname)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container info"><p class="hint-container-title">擦除图像</p><p>可以使用 <code>img = cv2.line(img, (0, 0), (511, 511), (255, 0, 0), 5)</code> 来获得新的图像。</p></div><h3 id="_2-3-2-画矩形" tabindex="-1"><a class="header-anchor" href="#_2-3-2-画矩形" aria-hidden="true">#</a> 2.3.2 画矩形</h3><div class="language-python" data-ext="py"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#D4D4D4;">cv2.rectangle(img, (</span><span style="color:#B5CEA8;">384</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">), (</span><span style="color:#B5CEA8;">510</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">128</span><span style="color:#D4D4D4;">), (</span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">255</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">), </span><span style="color:#B5CEA8;">3</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"></span></code></pre></div><h3 id="_2-3-3-画圆" tabindex="-1"><a class="header-anchor" href="#_2-3-3-画圆" aria-hidden="true">#</a> 2.3.3 画圆</h3><div class="language-python" data-ext="py"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#D4D4D4;">cv2.circle(img, (</span><span style="color:#B5CEA8;">447</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">63</span><span style="color:#D4D4D4;">), </span><span style="color:#B5CEA8;">63</span><span style="color:#D4D4D4;">, (</span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">255</span><span style="color:#D4D4D4;">), -</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"></span></code></pre></div><h3 id="_2-3-4-画椭圆" tabindex="-1"><a class="header-anchor" href="#_2-3-4-画椭圆" aria-hidden="true">#</a> 2.3.4 画椭圆</h3><div class="language-python" data-ext="py"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#D4D4D4;">cv2.ellipse(img, (</span><span style="color:#B5CEA8;">256</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">256</span><span style="color:#D4D4D4;">), (</span><span style="color:#B5CEA8;">100</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">50</span><span style="color:#D4D4D4;">), </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">180</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">255</span><span style="color:#D4D4D4;">, -</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"></span></code></pre></div><h3 id="_2-3-5-画多边形" tabindex="-1"><a class="header-anchor" href="#_2-3-5-画多边形" aria-hidden="true">#</a> 2.3.5 画多边形</h3><div class="language-python" data-ext="py"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#D4D4D4;">pts = np.array(</span></span>
<span class="line"><span style="color:#D4D4D4;">    [[</span><span style="color:#B5CEA8;">10</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">5</span><span style="color:#D4D4D4;">],</span></span>
<span class="line"><span style="color:#D4D4D4;">     [</span><span style="color:#B5CEA8;">20</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">30</span><span style="color:#D4D4D4;">],</span></span>
<span class="line"><span style="color:#D4D4D4;">     [</span><span style="color:#B5CEA8;">70</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">20</span><span style="color:#D4D4D4;">],</span></span>
<span class="line"><span style="color:#D4D4D4;">     [</span><span style="color:#B5CEA8;">50</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">10</span><span style="color:#D4D4D4;">]],</span></span>
<span class="line"><span style="color:#D4D4D4;">    np.int32)</span></span>
<span class="line"><span style="color:#D4D4D4;">pts = pts.reshape((-</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">2</span><span style="color:#D4D4D4;">))</span></span>
<span class="line"><span style="color:#D4D4D4;">cv2.polylines(img, [pts], </span><span style="color:#569CD6;">True</span><span style="color:#D4D4D4;">, (</span><span style="color:#B5CEA8;">255</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">255</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">255</span><span style="color:#D4D4D4;">), </span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"></span></code></pre></div><p>如果 <code>cv2.polylines()</code> 第三个参数是 <code>False</code>，我们得到的多边形是不闭合的（首尾不相连）。</p><div class="hint-container tip"><p class="hint-container-title">绘制多条线</p><p><code>cv2.polylines()</code> 可以被用来画很多条线。只需要把想要画的线放在一个列表中，将这个列表传给函数就可以了。每条线都会被独立绘制。这会比用 <code>cv2.line()</code> 一条一条的绘制要快一些。</p></div><h3 id="_2-3-6-在图片上添加文字" tabindex="-1"><a class="header-anchor" href="#_2-3-6-在图片上添加文字" aria-hidden="true">#</a> 2.3.6 在图片上添加文字</h3><p>设置参数：</p><ul><li>你要绘制的文字</li><li>你要绘制的位置</li><li>字体类型（通过查看 <code>cv2.putText()</code> 的文档找到支持的字体）</li><li>字体的大小</li><li>文字的一般属性如颜色，粗细，线条的类型等。为了更好看一点推荐使用 <code>linetype = cv2.LINE_AA</code></li></ul><div class="language-python" data-ext="py"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#D4D4D4;">font = cv2.FONT_HERSHEY_SIMPLEX</span></span>
<span class="line"><span style="color:#D4D4D4;">cv2.putText(img, </span><span style="color:#CE9178;">&#39;OpenCV&#39;</span><span style="color:#D4D4D4;">, (</span><span style="color:#B5CEA8;">10</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">500</span><span style="color:#D4D4D4;">), font, </span><span style="color:#B5CEA8;">4</span><span style="color:#D4D4D4;">, (</span><span style="color:#B5CEA8;">255</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">255</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">255</span><span style="color:#D4D4D4;">), </span><span style="color:#B5CEA8;">2</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">winname = </span><span style="color:#CE9178;">&#39;example&#39;</span></span>
<span class="line"><span style="color:#D4D4D4;">cv2.namedWindow(winname)</span></span>
<span class="line"><span style="color:#D4D4D4;">cv2.imshow(winname, img)</span></span>
<span class="line"><span style="color:#D4D4D4;">cv2.waitKey(</span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">cv2.destroyWindow(winname)</span></span>
<span class="line"></span></code></pre></div>`,19),F={class:"hint-container warning"},O=s("p",{class:"hint-container-title"},"绘制中文",-1),V=s("p",null,[n("OpenCV 目前并不支持在图片上绘制中文，不过 OpenCV Contrib 模块中的 "),s("code",null,"freetype"),n(" 模块提供了字体支持，用于代替 "),s("code",null,"cv2.putText()"),n("。")],-1),N=s("code",null,"opencv-contrib-python",-1),W=s("code",null,"freetype",-1),M=s("code",null,"freetype",-1),I={href:"https://github.com/opencv/opencv-python/issues/243",target:"_blank",rel:"noopener noreferrer"},L=s("code",null,"-DWITH_FREETYPE=ON",-1),R=e(`<p>如果希望获取构建时信息，使用</p><div class="language-python" data-ext="py"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#DCDCAA;">print</span><span style="color:#D4D4D4;">(cv2.getBuildInformation())</span></span>
<span class="line"></span></code></pre></div><p>如果已经有 <code>freetype</code> 模块，可以使用：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> cv2</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> numpy </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> np</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">img = np.zeros((</span><span style="color:#B5CEA8;">300</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">512</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">3</span><span style="color:#D4D4D4;">), </span><span style="color:#9CDCFE;">dtype</span><span style="color:#D4D4D4;">=np.uint8)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">ft = cv2.freetype.createFreeType2()</span></span>
<span class="line"><span style="color:#D4D4D4;">ft.loadFontData(</span><span style="color:#9CDCFE;">fontFileName</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&#39;/path/to/font.ttf&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">id</span><span style="color:#D4D4D4;">=</span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">ft.putText(</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">img</span><span style="color:#D4D4D4;">=img,</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">text</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&#39;这是一段中文&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">org</span><span style="color:#D4D4D4;">=(</span><span style="color:#B5CEA8;">15</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">70</span><span style="color:#D4D4D4;">),</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">fontHeight</span><span style="color:#D4D4D4;">=</span><span style="color:#B5CEA8;">30</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">color</span><span style="color:#D4D4D4;">=(</span><span style="color:#B5CEA8;">255</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">255</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">255</span><span style="color:#D4D4D4;">),</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">thickness</span><span style="color:#D4D4D4;">=-</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">line_type</span><span style="color:#D4D4D4;">=cv2.LINE_AA,</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">bottomLeftOrigin</span><span style="color:#D4D4D4;">=</span><span style="color:#569CD6;">True</span></span>
<span class="line"><span style="color:#D4D4D4;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">cv2.imshow(</span><span style="color:#CE9178;">&#39;img&#39;</span><span style="color:#D4D4D4;">, img)</span></span>
<span class="line"><span style="color:#D4D4D4;">cv2.waitKey(</span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">cv2.imwrite(</span><span style="color:#CE9178;">&#39;image.png&#39;</span><span style="color:#D4D4D4;">, img)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),G=e(`<h3 id="_2-3-7-绘图函数总结" tabindex="-1"><a class="header-anchor" href="#_2-3-7-绘图函数总结" aria-hidden="true">#</a> 2.3.7 绘图函数总结</h3><p>参数列表：</p><ul><li><code>img</code>：你想要绘制图形的那幅图像</li><li><code>color</code>：形状的颜色。以 RGB 为例，需要传入一个元组，例如：<code>(255, 0, 0)</code> 代表蓝色。对于灰度图只需要传入灰度值</li><li><code>thickness</code>：线条的粗细。如果给一个闭合图形设置为 <code>-1</code>，那么这个图形就会被填充。默认值是 <code>1</code></li><li><code>linetype</code>：线条的类型，8 连接，抗锯齿等。默认情况是 8 连接。<code>cv2.LINE_AA</code> 为抗锯齿，这样看起来会非常平滑</li></ul><p>语法总结：</p><ul><li><code>line(img, pt1, pt2, color, thickness=..., lineType=..., shift=...)</code></li><li><code>rectangle(img, pt1, pt2, color, thickness=..., lineType=..., shift=...)</code></li><li><code>circle(img, center, radius, color, thickness=..., lineType=..., shift=...)</code></li><li><code>ellipse(img, center, axes, angle, startAngle, endAngle, color, thickness=..., lineType=..., shift=...)</code></li><li><code>polylines(img, pts, isClosed, color, thickness=..., lineType=..., shift=...)</code></li></ul><h2 id="_2-4-鼠标事件" tabindex="-1"><a class="header-anchor" href="#_2-4-鼠标事件" aria-hidden="true">#</a> 2.4 鼠标事件</h2><details class="hint-container details"><summary>学习目标</summary><ul><li>学习使用 OpenCV 处理鼠标事件</li><li>函数 <ul><li><code>cv2.setMouseCallback()</code> 设置鼠标回调函数</li></ul></li></ul></details><h3 id="_2-4-1-双击的地方绘制圆" tabindex="-1"><a class="header-anchor" href="#_2-4-1-双击的地方绘制圆" aria-hidden="true">#</a> 2.4.1 双击的地方绘制圆</h3><p>查看有哪些事件受支持：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> cv2</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">def</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">print_const</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">prefix</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">str</span><span style="color:#D4D4D4;">) -&gt; </span><span style="color:#569CD6;">None</span><span style="color:#D4D4D4;">:</span></span>
<span class="line"><span style="color:#D4D4D4;">    prefix += </span><span style="color:#CE9178;">&#39;_&#39;</span></span>
<span class="line"><span style="color:#D4D4D4;">    names = (</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#CE9178;">&#39;</span><span style="color:#569CD6;">{:22}</span><span style="color:#CE9178;"> = </span><span style="color:#569CD6;">{:5}</span><span style="color:#CE9178;">&#39;</span><span style="color:#D4D4D4;">.format(key, val)</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#C586C0;">for</span><span style="color:#D4D4D4;"> key, val </span><span style="color:#C586C0;">in</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">vars</span><span style="color:#D4D4D4;">(cv2).items()</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#C586C0;">if</span><span style="color:#D4D4D4;"> key.startswith(prefix)</span></span>
<span class="line"><span style="color:#D4D4D4;">    )</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#DCDCAA;">print</span><span style="color:#D4D4D4;">(*names, </span><span style="color:#9CDCFE;">sep</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&#39;</span><span style="color:#D7BA7D;">\\n</span><span style="color:#CE9178;">&#39;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">print_const(</span><span style="color:#CE9178;">&#39;EVENT&#39;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>ESC</code> 退出，双击的地方绘制圆，不要按 <code>X</code> 关闭窗口，否则会无法绘制：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> cv2</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> numpy </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> np</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;"># 鼠标回调函数</span></span>
<span class="line"><span style="color:#569CD6;">def</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">draw_circle</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">event</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">x</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">y</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">flags</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">param</span><span style="color:#D4D4D4;">):</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">if</span><span style="color:#D4D4D4;"> event == cv2.EVENT_LBUTTONDBLCLK:</span></span>
<span class="line"><span style="color:#D4D4D4;">        cv2.circle(img, (x, y), </span><span style="color:#B5CEA8;">100</span><span style="color:#D4D4D4;">, (</span><span style="color:#B5CEA8;">255</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">), -</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;"># 创建图像与窗口并将窗口与回调函数绑定</span></span>
<span class="line"><span style="color:#D4D4D4;">img = np.zeros((</span><span style="color:#B5CEA8;">512</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">512</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">3</span><span style="color:#D4D4D4;">), np.uint8)</span></span>
<span class="line"><span style="color:#D4D4D4;">cv2.namedWindow(</span><span style="color:#CE9178;">&#39;image&#39;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">cv2.setMouseCallback(</span><span style="color:#CE9178;">&#39;image&#39;</span><span style="color:#D4D4D4;">, draw_circle)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C586C0;">while</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">True</span><span style="color:#D4D4D4;">:</span></span>
<span class="line"><span style="color:#D4D4D4;">    cv2.imshow(</span><span style="color:#CE9178;">&#39;image&#39;</span><span style="color:#D4D4D4;">, img)</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">if</span><span style="color:#D4D4D4;"> cv2.waitKey(</span><span style="color:#B5CEA8;">20</span><span style="color:#D4D4D4;">) &amp; </span><span style="color:#569CD6;">0x</span><span style="color:#B5CEA8;">FF</span><span style="color:#D4D4D4;"> == </span><span style="color:#B5CEA8;">27</span><span style="color:#D4D4D4;">:</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#C586C0;">break</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">cv2.destroyAllWindows()</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>拖动绘制绿色矩形，按 <code>m</code> 切换为绘制红色圆点：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> cv2</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> numpy </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> np</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">drawing = </span><span style="color:#569CD6;">False</span></span>
<span class="line"><span style="color:#D4D4D4;">mode = </span><span style="color:#569CD6;">True</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">ix, iy = -</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">, -</span><span style="color:#B5CEA8;">1</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">def</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">draw_circle</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">event</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">int</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">x</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">int</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">y</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">int</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">flags</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">int</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">                </span><span style="color:#9CDCFE;">param</span><span style="color:#D4D4D4;">) -&gt; </span><span style="color:#569CD6;">None</span><span style="color:#D4D4D4;">:</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#569CD6;">global</span><span style="color:#D4D4D4;"> ix, iy, drawing, mode</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">if</span><span style="color:#D4D4D4;"> event == cv2.EVENT_LBUTTONDOWN:</span></span>
<span class="line"><span style="color:#D4D4D4;">        drawing = </span><span style="color:#569CD6;">True</span></span>
<span class="line"><span style="color:#D4D4D4;">        ix, iy = x, y</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">elif</span><span style="color:#D4D4D4;"> event == cv2.EVENT_MOUSEMOVE </span><span style="color:#569CD6;">and</span><span style="color:#D4D4D4;">\\</span></span>
<span class="line"><span style="color:#D4D4D4;">            flags == cv2.EVENT_FLAG_LBUTTON:</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#C586C0;">if</span><span style="color:#D4D4D4;"> drawing == </span><span style="color:#569CD6;">True</span><span style="color:#D4D4D4;">:</span></span>
<span class="line"><span style="color:#D4D4D4;">            </span><span style="color:#C586C0;">if</span><span style="color:#D4D4D4;"> mode == </span><span style="color:#569CD6;">True</span><span style="color:#D4D4D4;">:</span></span>
<span class="line"><span style="color:#D4D4D4;">                cv2.rectangle(img, (ix, iy), (x, y), (</span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">255</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">), -</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">            </span><span style="color:#C586C0;">else</span><span style="color:#D4D4D4;">:</span></span>
<span class="line"><span style="color:#D4D4D4;">                cv2.circle(img, (x, y), </span><span style="color:#B5CEA8;">3</span><span style="color:#D4D4D4;">, (</span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">255</span><span style="color:#D4D4D4;">), -</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">elif</span><span style="color:#D4D4D4;"> event == cv2.EVENT_LBUTTONUP:</span></span>
<span class="line"><span style="color:#D4D4D4;">        drawing = </span><span style="color:#569CD6;">False</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">img = np.zeros((</span><span style="color:#B5CEA8;">512</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">512</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">3</span><span style="color:#D4D4D4;">), np.uint8)</span></span>
<span class="line"><span style="color:#D4D4D4;">cv2.namedWindow(</span><span style="color:#CE9178;">&#39;image&#39;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">cv2.setMouseCallback(</span><span style="color:#CE9178;">&#39;image&#39;</span><span style="color:#D4D4D4;">, draw_circle)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C586C0;">while</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">True</span><span style="color:#D4D4D4;">:</span></span>
<span class="line"><span style="color:#D4D4D4;">    cv2.imshow(</span><span style="color:#CE9178;">&#39;image&#39;</span><span style="color:#D4D4D4;">, img)</span></span>
<span class="line"><span style="color:#D4D4D4;">    key = cv2.waitKey(</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">) &amp; </span><span style="color:#569CD6;">0x</span><span style="color:#B5CEA8;">ff</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">if</span><span style="color:#D4D4D4;"> key == </span><span style="color:#DCDCAA;">ord</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;m&#39;</span><span style="color:#D4D4D4;">):</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#DCDCAA;">print</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;mode:&#39;</span><span style="color:#D4D4D4;">, mode)</span></span>
<span class="line"><span style="color:#D4D4D4;">        mode = </span><span style="color:#569CD6;">not</span><span style="color:#D4D4D4;"> mode</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">elif</span><span style="color:#D4D4D4;"> key == </span><span style="color:#B5CEA8;">27</span><span style="color:#D4D4D4;">:</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#C586C0;">break</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">cv2.destroyAllWindows()</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-5-调色板" tabindex="-1"><a class="header-anchor" href="#_2-5-调色板" aria-hidden="true">#</a> 2.5 调色板</h2><details class="hint-container details"><summary>学习目标</summary><ul><li>把滑动条绑定到 OpenCV 窗口上</li><li>函数 <ul><li><code>cv2.creatTrackbar()</code> 创建拖动条</li><li><code>cv2.getTrackbarPos()</code> 获取拖动条位置</li></ul></li></ul></details><div class="language-python line-numbers-mode" data-ext="py"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> cv2</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> numpy </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> np</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">def</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">nothing</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">x</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">object</span><span style="color:#D4D4D4;">) -&gt; </span><span style="color:#569CD6;">None</span><span style="color:#D4D4D4;">:</span></span>
<span class="line"><span style="color:#D4D4D4;">    ...</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">img = np.zeros((</span><span style="color:#B5CEA8;">300</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">512</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">3</span><span style="color:#D4D4D4;">), np.uint8)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">cv2.namedWindow(</span><span style="color:#CE9178;">&#39;image&#39;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">cv2.createTrackbar(</span><span style="color:#CE9178;">&#39;R&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;image&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">255</span><span style="color:#D4D4D4;">, nothing)</span></span>
<span class="line"><span style="color:#D4D4D4;">cv2.createTrackbar(</span><span style="color:#CE9178;">&#39;G&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;image&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">255</span><span style="color:#D4D4D4;">, nothing)</span></span>
<span class="line"><span style="color:#D4D4D4;">cv2.createTrackbar(</span><span style="color:#CE9178;">&#39;B&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;image&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">255</span><span style="color:#D4D4D4;">, nothing)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">switch = </span><span style="color:#CE9178;">&#39;0:OFF</span><span style="color:#D7BA7D;">\\n</span><span style="color:#CE9178;">1:ON&#39;</span></span>
<span class="line"><span style="color:#D4D4D4;">cv2.createTrackbar(switch, </span><span style="color:#CE9178;">&#39;image&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">, nothing)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C586C0;">while</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">True</span><span style="color:#D4D4D4;">:</span></span>
<span class="line"><span style="color:#D4D4D4;">    cv2.imshow(</span><span style="color:#CE9178;">&#39;image&#39;</span><span style="color:#D4D4D4;">, img)</span></span>
<span class="line"><span style="color:#D4D4D4;">    key = cv2.waitKey(</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">) &amp; </span><span style="color:#569CD6;">0x</span><span style="color:#B5CEA8;">ff</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">if</span><span style="color:#D4D4D4;"> key == </span><span style="color:#B5CEA8;">27</span><span style="color:#D4D4D4;">:</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#C586C0;">break</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">    r = cv2.getTrackbarPos(</span><span style="color:#CE9178;">&#39;R&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;image&#39;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">    g = cv2.getTrackbarPos(</span><span style="color:#CE9178;">&#39;G&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;image&#39;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">    b = cv2.getTrackbarPos(</span><span style="color:#CE9178;">&#39;B&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;image&#39;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">    s = cv2.getTrackbarPos(switch, </span><span style="color:#CE9178;">&#39;image&#39;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">if</span><span style="color:#D4D4D4;"> s == </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">:</span></span>
<span class="line"><span style="color:#D4D4D4;">        img[:] = </span><span style="color:#B5CEA8;">0</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">else</span><span style="color:#D4D4D4;">:</span></span>
<span class="line"><span style="color:#D4D4D4;">        img[:] = b, g, r</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">cv2.destroyAllWindows()</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>结合上一节的知识，创建一个画板，可以自选各种颜色的画笔绘画各种图形：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> cv2</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> numpy </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> np</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">def</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">nothing</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">x</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">object</span><span style="color:#D4D4D4;">) -&gt; </span><span style="color:#569CD6;">None</span><span style="color:#D4D4D4;">:</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">pass</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">drawing = </span><span style="color:#569CD6;">False</span></span>
<span class="line"><span style="color:#D4D4D4;">mode = </span><span style="color:#569CD6;">True</span></span>
<span class="line"><span style="color:#D4D4D4;">ix, iy = -</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">, -</span><span style="color:#B5CEA8;">1</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">def</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">draw_circle</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">event</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">int</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">x</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">int</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">y</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">int</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">flags</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">int</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">                </span><span style="color:#9CDCFE;">param</span><span style="color:#D4D4D4;">) -&gt; </span><span style="color:#569CD6;">None</span><span style="color:#D4D4D4;">:</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#569CD6;">global</span><span style="color:#D4D4D4;"> ix, iy, drawing, mode</span></span>
<span class="line"><span style="color:#D4D4D4;">    r = cv2.getTrackbarPos(</span><span style="color:#CE9178;">&#39;R&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;image&#39;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">    g = cv2.getTrackbarPos(</span><span style="color:#CE9178;">&#39;G&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;image&#39;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">    b = cv2.getTrackbarPos(</span><span style="color:#CE9178;">&#39;B&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;image&#39;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">    color = (b, g, r)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">if</span><span style="color:#D4D4D4;"> event == cv2.EVENT_LBUTTONDOWN:</span></span>
<span class="line"><span style="color:#D4D4D4;">        drawing = </span><span style="color:#569CD6;">True</span></span>
<span class="line"><span style="color:#D4D4D4;">        ix, iy = x, y</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">elif</span><span style="color:#D4D4D4;"> event == cv2.EVENT_MOUSEMOVE </span><span style="color:#569CD6;">and</span><span style="color:#D4D4D4;">\\</span></span>
<span class="line"><span style="color:#D4D4D4;">            flags == cv2.EVENT_FLAG_LBUTTON:</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#C586C0;">if</span><span style="color:#D4D4D4;"> drawing == </span><span style="color:#569CD6;">True</span><span style="color:#D4D4D4;">:</span></span>
<span class="line"><span style="color:#D4D4D4;">            </span><span style="color:#C586C0;">if</span><span style="color:#D4D4D4;"> mode == </span><span style="color:#569CD6;">True</span><span style="color:#D4D4D4;">:</span></span>
<span class="line"><span style="color:#D4D4D4;">                cv2.rectangle(img, (ix, iy), (x, y),</span></span>
<span class="line"><span style="color:#D4D4D4;">                              color, -</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">            </span><span style="color:#C586C0;">else</span><span style="color:#D4D4D4;">:</span></span>
<span class="line"><span style="color:#D4D4D4;">                cv2.circle(img, (x, y), </span><span style="color:#B5CEA8;">3</span><span style="color:#D4D4D4;">, color, -</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">elif</span><span style="color:#D4D4D4;"> event == cv2.EVENT_LBUTTONUP:</span></span>
<span class="line"><span style="color:#D4D4D4;">        drawing = </span><span style="color:#569CD6;">False</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">img = np.zeros((</span><span style="color:#B5CEA8;">300</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">512</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">3</span><span style="color:#D4D4D4;">), np.uint8)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">cv2.namedWindow(</span><span style="color:#CE9178;">&#39;image&#39;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">cv2.createTrackbar(</span><span style="color:#CE9178;">&#39;R&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;image&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">255</span><span style="color:#D4D4D4;">, nothing)</span></span>
<span class="line"><span style="color:#D4D4D4;">cv2.createTrackbar(</span><span style="color:#CE9178;">&#39;G&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;image&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">255</span><span style="color:#D4D4D4;">, nothing)</span></span>
<span class="line"><span style="color:#D4D4D4;">cv2.createTrackbar(</span><span style="color:#CE9178;">&#39;B&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;image&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">255</span><span style="color:#D4D4D4;">, nothing)</span></span>
<span class="line"><span style="color:#D4D4D4;">cv2.setMouseCallback(</span><span style="color:#CE9178;">&#39;image&#39;</span><span style="color:#D4D4D4;">, draw_circle)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C586C0;">while</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">True</span><span style="color:#D4D4D4;">:</span></span>
<span class="line"><span style="color:#D4D4D4;">    cv2.imshow(</span><span style="color:#CE9178;">&#39;image&#39;</span><span style="color:#D4D4D4;">, img)</span></span>
<span class="line"><span style="color:#D4D4D4;">    key = cv2.waitKey(</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">) &amp; </span><span style="color:#569CD6;">0x</span><span style="color:#B5CEA8;">ff</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">if</span><span style="color:#D4D4D4;"> key == </span><span style="color:#B5CEA8;">27</span><span style="color:#D4D4D4;">:</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#C586C0;">break</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">elif</span><span style="color:#D4D4D4;"> key == </span><span style="color:#DCDCAA;">ord</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;m&#39;</span><span style="color:#D4D4D4;">):</span></span>
<span class="line"><span style="color:#D4D4D4;">        mode = </span><span style="color:#569CD6;">not</span><span style="color:#D4D4D4;"> mode</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">cv2.destroyAllWindows()</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,19);function U(K,P){const l=c("router-link"),o=c("ExternalLinkIcon");return r(),D("div",null,[d,s("nav",y,[s("ul",null,[s("li",null,[a(l,{to:"#_2-1-图片"},{default:p(()=>[n("2.1 图片")]),_:1}),s("ul",null,[s("li",null,[a(l,{to:"#_2-1-1-读取一张图片"},{default:p(()=>[n("2.1.1 读取一张图片")]),_:1})]),s("li",null,[a(l,{to:"#_2-1-2-显示图像"},{default:p(()=>[n("2.1.2 显示图像")]),_:1})]),s("li",null,[a(l,{to:"#_2-1-3-保存图像"},{default:p(()=>[n("2.1.3 保存图像")]),_:1})]),s("li",null,[a(l,{to:"#_2-1-4-综合示例"},{default:p(()=>[n("2.1.4 综合示例")]),_:1})]),s("li",null,[a(l,{to:"#_2-1-5-使用-matplotlib"},{default:p(()=>[n("2.1.5 使用 Matplotlib")]),_:1})])])]),s("li",null,[a(l,{to:"#_2-2-视频"},{default:p(()=>[n("2.2 视频")]),_:1}),s("ul",null,[s("li",null,[a(l,{to:"#_2-2-1-捕获摄像头"},{default:p(()=>[n("2.2.1 捕获摄像头")]),_:1})]),s("li",null,[a(l,{to:"#_2-2-2-从文件中播放视频"},{default:p(()=>[n("2.2.2 从文件中播放视频")]),_:1})]),s("li",null,[a(l,{to:"#_2-2-3-保存捕获的视频"},{default:p(()=>[n("2.2.3 保存捕获的视频")]),_:1})])])]),s("li",null,[a(l,{to:"#_2-3-绘图函数"},{default:p(()=>[n("2.3 绘图函数")]),_:1}),s("ul",null,[s("li",null,[a(l,{to:"#_2-3-1-画线"},{default:p(()=>[n("2.3.1 画线")]),_:1})]),s("li",null,[a(l,{to:"#_2-3-2-画矩形"},{default:p(()=>[n("2.3.2 画矩形")]),_:1})]),s("li",null,[a(l,{to:"#_2-3-3-画圆"},{default:p(()=>[n("2.3.3 画圆")]),_:1})]),s("li",null,[a(l,{to:"#_2-3-4-画椭圆"},{default:p(()=>[n("2.3.4 画椭圆")]),_:1})]),s("li",null,[a(l,{to:"#_2-3-5-画多边形"},{default:p(()=>[n("2.3.5 画多边形")]),_:1})]),s("li",null,[a(l,{to:"#_2-3-6-在图片上添加文字"},{default:p(()=>[n("2.3.6 在图片上添加文字")]),_:1})]),s("li",null,[a(l,{to:"#_2-3-7-绘图函数总结"},{default:p(()=>[n("2.3.7 绘图函数总结")]),_:1})])])]),s("li",null,[a(l,{to:"#_2-4-鼠标事件"},{default:p(()=>[n("2.4 鼠标事件")]),_:1}),s("ul",null,[s("li",null,[a(l,{to:"#_2-4-1-双击的地方绘制圆"},{default:p(()=>[n("2.4.1 双击的地方绘制圆")]),_:1})])])]),s("li",null,[a(l,{to:"#_2-5-调色板"},{default:p(()=>[n("2.5 调色板")]),_:1})])])]),v,s("div",C,[u,m,s("p",null,[n("颜色转换参考 "),s("a",b,[n("Stack Overflow"),a(o)]),n("，也可以使用 "),E,n(" 转换图像颜色空间。")])]),h,s("p",null,[n("你可以使用函数 "),g,n(" 来获得视频的一些参数信息。这里 "),A,n(" 每一个数代表视频的一个属性，参见 "),s("a",_,[n("OpenCV 官方文档："),B,a(o)]),n("。")]),f,s("div",k,[x,s("p",null,[n("如果想查找编码的详细信息，参考 "),s("a",w,[n("fourcc.org"),a(o)]),n("。")])]),T,s("div",F,[O,V,s("p",null,[n("但是，直接安装 "),N,n(" 可能并不包含 "),W,n(" 模块。官方构建发行包时默认不构建 "),M,n(" 模块，具体参考 "),s("a",I,[n("GitHub Issue"),a(o)]),n("，如果有需要可以下载源码进行构建，CMake 构建参数为 "),L,n("。")]),R]),G])}const z=i(t,[["render",U],["__file","index.html.vue"]]);export{z as default};
