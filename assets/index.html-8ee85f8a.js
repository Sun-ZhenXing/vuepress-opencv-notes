import{_ as u,r as e,o as l,c as i,b as n,a,w as o,d as s,e as c}from"./app-b3e40293.js";const k="/vuepress-opencv-notes/assets/rugby-a70337bd.jpg",r="/vuepress-opencv-notes/assets/basket-5fa6e6da.jpg",d="/vuepress-opencv-notes/assets/res_rugby-3e38cb40.jpg",v="/vuepress-opencv-notes/assets/res_basket-da371cd3.jpg",m={},b=n("h1",{id:"使用-yolov8-进行实例分割",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#使用-yolov8-进行实例分割","aria-hidden":"true"},"#"),s(" 使用 YOLOv8 进行实例分割")],-1),g={class:"table-of-contents"},y={class:"hint-container info"},_=n("p",{class:"hint-container-title"},"源代码",-1),h={href:"https://pysource.com/2023/02/21/yolo-v8-segmentation",target:"_blank",rel:"noopener noreferrer"},f=c(`<h2 id="_1-安装-yolov8-环境" tabindex="-1"><a class="header-anchor" href="#_1-安装-yolov8-环境" aria-hidden="true">#</a> 1. 安装 YOLOv8 环境</h2><p>确保使用可用的 CUDA 环境以保证速度。</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code>pip <span class="token function">install</span> ultralytics
pip <span class="token function">install</span> opencv-python
</code></pre></div><p><code>ultralytics</code> 官方已经封装了各种 YOLOv8 的模型，我们不需要下载就可以使用，</p><h2 id="_2-yolov8-实例分割" tabindex="-1"><a class="header-anchor" href="#_2-yolov8-实例分割" aria-hidden="true">#</a> 2. YOLOv8 实例分割</h2><p>我们先创建 <code>yolo_segmentation.py</code>：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np
<span class="token keyword">from</span> ultralytics <span class="token keyword">import</span> YOLO
<span class="token keyword">from</span> ultralytics<span class="token punctuation">.</span>yolo<span class="token punctuation">.</span>engine<span class="token punctuation">.</span>results <span class="token keyword">import</span> Results


<span class="token keyword">class</span> <span class="token class-name">YOLOSegmentation</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> model_path<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>model <span class="token operator">=</span> YOLO<span class="token punctuation">(</span>model_path<span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">detect</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> img<span class="token punctuation">:</span> np<span class="token punctuation">.</span>ndarray<span class="token punctuation">)</span><span class="token punctuation">:</span>
        height<span class="token punctuation">,</span> width<span class="token punctuation">,</span> _ <span class="token operator">=</span> img<span class="token punctuation">.</span>shape
        results <span class="token operator">=</span> self<span class="token punctuation">.</span>model<span class="token punctuation">.</span>predict<span class="token punctuation">(</span>source<span class="token operator">=</span>img<span class="token punctuation">.</span>copy<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> save<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> save_txt<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>
        result<span class="token punctuation">:</span> Results <span class="token operator">=</span> results<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
        segmentation_contours_idx <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
        <span class="token keyword">for</span> seg <span class="token keyword">in</span> result<span class="token punctuation">.</span>masks<span class="token punctuation">.</span>xyn<span class="token punctuation">:</span>
            <span class="token comment"># contours</span>
            seg<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">*=</span> width
            seg<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">*=</span> height
            segment <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>seg<span class="token punctuation">,</span> dtype<span class="token operator">=</span>np<span class="token punctuation">.</span>int32<span class="token punctuation">)</span>
            segmentation_contours_idx<span class="token punctuation">.</span>append<span class="token punctuation">(</span>segment<span class="token punctuation">)</span>

        bboxes <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>result<span class="token punctuation">.</span>boxes<span class="token punctuation">.</span>xyxy<span class="token punctuation">.</span>cpu<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> dtype<span class="token operator">=</span><span class="token string">&quot;int&quot;</span><span class="token punctuation">)</span>
        <span class="token comment"># Get class ids</span>
        class_ids <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>result<span class="token punctuation">.</span>boxes<span class="token punctuation">.</span>cls<span class="token punctuation">.</span>cpu<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> dtype<span class="token operator">=</span><span class="token string">&quot;int&quot;</span><span class="token punctuation">)</span>
        <span class="token comment"># Get scores</span>
        scores <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>result<span class="token punctuation">.</span>boxes<span class="token punctuation">.</span>conf<span class="token punctuation">.</span>cpu<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> dtype<span class="token operator">=</span><span class="token string">&quot;float&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">round</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> bboxes<span class="token punctuation">,</span> class_ids<span class="token punctuation">,</span> segmentation_contours_idx<span class="token punctuation">,</span> scores
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后创建 <code>main.py</code>：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> cv2

<span class="token keyword">from</span> yolo_segmentation <span class="token keyword">import</span> YOLOSegmentation

img <span class="token operator">=</span> cv2<span class="token punctuation">.</span>imread<span class="token punctuation">(</span><span class="token string">&quot;images/rugby.jpg&quot;</span><span class="token punctuation">)</span>
img <span class="token operator">=</span> cv2<span class="token punctuation">.</span>resize<span class="token punctuation">(</span>img<span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">,</span> fx<span class="token operator">=</span><span class="token number">0.7</span><span class="token punctuation">,</span> fy<span class="token operator">=</span><span class="token number">0.7</span><span class="token punctuation">)</span>

ys <span class="token operator">=</span> YOLOSegmentation<span class="token punctuation">(</span><span class="token string">&quot;yolov8m-seg.pt&quot;</span><span class="token punctuation">)</span>

bboxes<span class="token punctuation">,</span> classes<span class="token punctuation">,</span> segmentations<span class="token punctuation">,</span> scores <span class="token operator">=</span> ys<span class="token punctuation">.</span>detect<span class="token punctuation">(</span>img<span class="token punctuation">)</span>
<span class="token keyword">for</span> bbox<span class="token punctuation">,</span> class_id<span class="token punctuation">,</span> seg<span class="token punctuation">,</span> score <span class="token keyword">in</span> <span class="token builtin">zip</span><span class="token punctuation">(</span>bboxes<span class="token punctuation">,</span> classes<span class="token punctuation">,</span> segmentations<span class="token punctuation">,</span> scores<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;bbox:&quot;</span><span class="token punctuation">,</span> bbox<span class="token punctuation">,</span> <span class="token string">&quot;class id:&quot;</span><span class="token punctuation">,</span> class_id<span class="token punctuation">,</span> <span class="token string">&quot;seg:&quot;</span><span class="token punctuation">,</span> seg<span class="token punctuation">,</span> <span class="token string">&quot;score:&quot;</span><span class="token punctuation">,</span> score<span class="token punctuation">)</span>
    x1<span class="token punctuation">,</span> y1<span class="token punctuation">,</span> x2<span class="token punctuation">,</span> y2 <span class="token operator">=</span> bbox
    cv2<span class="token punctuation">.</span>rectangle<span class="token punctuation">(</span>img<span class="token punctuation">,</span> <span class="token punctuation">(</span>x1<span class="token punctuation">,</span> y1<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>x2<span class="token punctuation">,</span> y2<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>
    cv2<span class="token punctuation">.</span>polylines<span class="token punctuation">(</span>img<span class="token punctuation">,</span> <span class="token punctuation">[</span>seg<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span>

cv2<span class="token punctuation">.</span>imwrite<span class="token punctuation">(</span><span class="token string">&quot;res.jpg&quot;</span><span class="token punctuation">,</span> img<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>下面分别是实验用到的 <code>rugby.jpg</code> 和 <code>basket.jpg</code>，</p><p><img src="`+k+'" alt="rugby.jpg" loading="lazy"></p><p><img src="'+r+'" alt="basket.jpg" loading="lazy"></p>',12),x={class:"hint-container info"},w=n("p",{class:"hint-container-title"},"版权图片",-1),q=n("p",null,"如果您需要图片的版权请访问他们的版权商：",-1),O={href:"https://www.pexels.com/it-it/foto/kigoa-football-su-erba-verde-durante-il-giorno-209956/",target:"_blank",rel:"noopener noreferrer"},L={href:"https://www.pexels.com/it-it/foto/uomo-che-gioca-a-basket-267761/",target:"_blank",rel:"noopener noreferrer"},Y=c('<p>生成结果：</p><p><img src="'+d+'" alt="res_rugby" loading="lazy"></p><p><img src="'+v+`" alt="res_basket" loading="lazy"></p><h2 id="_3-视频示例" tabindex="-1"><a class="header-anchor" href="#_3-视频示例" aria-hidden="true">#</a> 3. 视频示例</h2><p>此外，这里还实现了一个视频示例，实时分割手机并标注：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> cv2
<span class="token keyword">from</span> yolo_segmentation <span class="token keyword">import</span> YOLOSegmentation

PHONE_CLASS_ID <span class="token operator">=</span> <span class="token number">67</span>

ys <span class="token operator">=</span> YOLOSegmentation<span class="token punctuation">(</span><span class="token string">&quot;yolov8m-seg.pt&quot;</span><span class="token punctuation">)</span>
cap <span class="token operator">=</span> cv2<span class="token punctuation">.</span>VideoCapture<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>

<span class="token keyword">while</span> cap<span class="token punctuation">.</span>isOpened<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    ret<span class="token punctuation">,</span> frame <span class="token operator">=</span> cap<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token keyword">not</span> ret<span class="token punctuation">:</span>
        <span class="token keyword">break</span>
    bboxes<span class="token punctuation">,</span> classes<span class="token punctuation">,</span> segmentations<span class="token punctuation">,</span> scores <span class="token operator">=</span> ys<span class="token punctuation">.</span>detect<span class="token punctuation">(</span>frame<span class="token punctuation">)</span>
    mask <span class="token operator">=</span> frame<span class="token punctuation">.</span>copy<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">for</span> bbox<span class="token punctuation">,</span> class_id<span class="token punctuation">,</span> seg<span class="token punctuation">,</span> score <span class="token keyword">in</span> <span class="token builtin">zip</span><span class="token punctuation">(</span>bboxes<span class="token punctuation">,</span> classes<span class="token punctuation">,</span> segmentations<span class="token punctuation">,</span> scores<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">if</span> class_id <span class="token operator">!=</span> PHONE_CLASS_ID<span class="token punctuation">:</span>
            <span class="token keyword">continue</span>
        <span class="token comment"># print(&quot;bbox:&quot;, bbox, &quot;class id:&quot;, class_id, &quot;seg:&quot;, seg, &quot;score:&quot;, score)</span>
        x1<span class="token punctuation">,</span> y1<span class="token punctuation">,</span> x2<span class="token punctuation">,</span> y2 <span class="token operator">=</span> bbox
        cv2<span class="token punctuation">.</span>rectangle<span class="token punctuation">(</span>mask<span class="token punctuation">,</span> <span class="token punctuation">(</span>x1<span class="token punctuation">,</span> y1<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>x2<span class="token punctuation">,</span> y2<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>
        cv2<span class="token punctuation">.</span>polylines<span class="token punctuation">(</span>mask<span class="token punctuation">,</span> <span class="token punctuation">[</span>seg<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span>
        cv2<span class="token punctuation">.</span>fillPoly<span class="token punctuation">(</span>mask<span class="token punctuation">,</span> <span class="token punctuation">[</span>seg<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        cv2<span class="token punctuation">.</span>putText<span class="token punctuation">(</span>
            mask<span class="token punctuation">,</span>
            <span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>score<span class="token punctuation">:</span><span class="token format-spec">.2f</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">,</span>
            <span class="token punctuation">(</span>x1<span class="token punctuation">,</span> y1 <span class="token operator">-</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            cv2<span class="token punctuation">.</span>FONT_HERSHEY_SIMPLEX<span class="token punctuation">,</span>
            <span class="token number">0.9</span><span class="token punctuation">,</span>
            <span class="token punctuation">(</span><span class="token number">36</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token number">2</span><span class="token punctuation">,</span>
        <span class="token punctuation">)</span>

    frame <span class="token operator">=</span> cv2<span class="token punctuation">.</span>addWeighted<span class="token punctuation">(</span>frame<span class="token punctuation">,</span> <span class="token number">0.7</span><span class="token punctuation">,</span> mask<span class="token punctuation">,</span> <span class="token number">0.3</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>

    cv2<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">&quot;frame&quot;</span><span class="token punctuation">,</span> frame<span class="token punctuation">)</span>
    <span class="token keyword">if</span> cv2<span class="token punctuation">.</span>waitKey<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">0xFF</span> <span class="token operator">==</span> <span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">&quot;q&quot;</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">break</span>

cap<span class="token punctuation">.</span>release<span class="token punctuation">(</span><span class="token punctuation">)</span>
cv2<span class="token punctuation">.</span>destroyAllWindows<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6);function j(S,E){const t=e("router-link"),p=e("ExternalLinkIcon");return l(),i("div",null,[b,n("nav",g,[n("ul",null,[n("li",null,[a(t,{to:"#_1-安装-yolov8-环境"},{default:o(()=>[s("1. 安装 YOLOv8 环境")]),_:1})]),n("li",null,[a(t,{to:"#_2-yolov8-实例分割"},{default:o(()=>[s("2. YOLOv8 实例分割")]),_:1})]),n("li",null,[a(t,{to:"#_3-视频示例"},{default:o(()=>[s("3. 视频示例")]),_:1})])])]),n("div",y,[_,n("p",null,[s("本文的源代码参考了 "),n("a",h,[s("Pysource"),a(p)]),s("，如果需要下载请到此博客处下载。")])]),f,n("div",x,[w,q,n("ul",null,[n("li",null,[n("a",O,[s("rugby.jpg"),a(p)])]),n("li",null,[n("a",L,[s("basket.jpg"),a(p)])])])]),Y])}const z=u(m,[["render",j],["__file","index.html.vue"]]);export{z as default};
