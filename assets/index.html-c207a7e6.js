import{_ as r,r as t,o as i,c as D,b as s,a,w as o,d as n,e as p}from"./app-e9203006.js";const y="/vuepress-opencv-notes/assets/matrix-c88bf42b.svg",m={},d=s("h1",{id:"使用-yolov5-进行姿态估计和行为检测",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#使用-yolov5-进行姿态估计和行为检测","aria-hidden":"true"},"#"),n(" 使用 YOLOv5 进行姿态估计和行为检测")],-1),u={class:"table-of-contents"},v=p('<h2 id="1-姿态估计和行为检测概述" tabindex="-1"><a class="header-anchor" href="#1-姿态估计和行为检测概述" aria-hidden="true">#</a> 1. 姿态估计和行为检测概述</h2><p><strong>行为识别</strong>（Action Recognition）是指对视频中人的行为动作进行识别。行为识别是一项具有挑战性的任务，受光照条件各异、视角多样性、背景复杂、类内变化大等诸多因素的影响。<sup class="footnote-ref"><a href="#footnote1">[1]</a><a class="footnote-anchor" id="footnote-ref1"></a></sup></p><p>对行为识别的研究可以追溯到 1973 年，Johansson 通过实验观察发现，人体的运动可以通过一些主要关节点的移动来描述<sup class="footnote-ref"><a href="#footnote2">[2]</a><a class="footnote-anchor" id="footnote-ref2"></a></sup>。因此，只要 10-12 个关键节点的组合与追踪便能形成对诸多行为例如跳舞、走路、跑步等的刻画，做到通过人体关键节点的运动来识别行为。</p><p><strong>姿态估计</strong>（Pose Estimation）是指检测图像和视频中的人物形象的计算机视觉技术，可以确定某人的某个身体部位出现在图像中的位置，也就是在图像和视频中对人体关节的定位问题，也可以理解为在所有关节姿势的空间中搜索特定姿势。简言之，姿态估计的任务就是重建人的关节和肢干。<sup class="footnote-ref"><a href="#footnote3">[3]</a><a class="footnote-anchor" id="footnote-ref3"></a></sup></p><p>姿态估计可输出一个高维的姿态向量表示关节点的位置，即一整组关节点的定位，从图像背景中分离出人体前景，然后重建人物的关节、肢体，以便作为行为识别的输入，进行动作的识别，如跑步，跳跃等。</p><p>当我们使用姿态估计的结果时，行为识别可认为是典型的分类问题。姿态估计得到了特征点在图片中的位置信息，这些信息可全部进行归一化，然后利用最流行的分类器来对行为进行分类。</p><h2 id="2-姿态估计的方法" tabindex="-1"><a class="header-anchor" href="#2-姿态估计的方法" aria-hidden="true">#</a> 2. 姿态估计的方法</h2><p>目前人体姿态估计总体分为 Top-down 和 Bottom-up 两种，与目标检测不同，无论是基于热力图或是基于检测器处理的关键点检测算法，都较为依赖计算资源，推理耗时略长，2022 年出现了以 YOLO 为基线的关键点检测器。<sup class="footnote-ref"><a href="#footnote4">[4]</a><a class="footnote-anchor" id="footnote-ref4"></a></sup></p><p>在 ECCV 2022 和 CVPRW 2022 会议上，YoLo-Pose 和 KaPao 都基于流行的 YOLO 目标检测框架提出一种新颖的无热力图的方法<sup class="footnote-ref"><a href="#footnote4">[4:1]</a><a class="footnote-anchor" id="footnote-ref4:1"></a></sup><sup class="footnote-ref"><a href="#footnote5">[5]</a><a class="footnote-anchor" id="footnote-ref5"></a></sup>，YOLO 类型的姿态估计方法不使用检测器进行二阶处理，也不使用使用热力图拼接，虽然是一种暴力回归关键点的检测算法，但在处理速度上具有一定优势。</p>',9),h=s("p",null,[n("对于人的姿势估计，它可以归结为一个单个类别检测器（对于人）。每个人有 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mn",null,"17")]),s("annotation",{encoding:"application/x-tex"},"17")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6444em"}}),s("span",{class:"mord"},"17")])])]),n(" 个关键点，而每个关键点又被确定为识别位置和置信度。因此，"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mn",null,"17")]),s("annotation",{encoding:"application/x-tex"},"17")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6444em"}}),s("span",{class:"mord"},"17")])])]),n(" 个关键点有 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mn",null,"51")]),s("annotation",{encoding:"application/x-tex"},"51")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6444em"}}),s("span",{class:"mord"},"51")])])]),n(" 个元素与一个锚点（anchor）。因此，对于每个锚点需要预测 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mn",null,"51")]),s("annotation",{encoding:"application/x-tex"},"51")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6444em"}}),s("span",{class:"mord"},"51")])])]),n(" 个元素，预测框需要 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mn",null,"6")]),s("annotation",{encoding:"application/x-tex"},"6")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6444em"}}),s("span",{class:"mord"},"6")])])]),n(" 个元素。对于一个有 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"n")]),s("annotation",{encoding:"application/x-tex"},"n")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.4306em"}}),s("span",{class:"mord mathnormal"},"n")])])]),n(" 个关键点的锚，整个预测向量被定义为")],-1),C=s("p",{class:"katex-block"},[s("span",{class:"katex-display"},[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mi",null,"P"),s("mi",null,"v")]),s("mo",null,"="),s("mo",{stretchy:"false"},"{"),s("msub",null,[s("mi",null,"C"),s("mi",null,"x")]),s("mo",{separator:"true"},","),s("mtext",null," "),s("msub",null,[s("mi",null,"C"),s("mi",null,"y")]),s("mo",{separator:"true"},","),s("mtext",null," "),s("mi",null,"W"),s("mo",{separator:"true"},","),s("mtext",null," "),s("mi",null,"H"),s("mo",{separator:"true"},","),s("mtext",null," "),s("msub",null,[s("mrow",null,[s("mi",{mathvariant:"normal"},"b"),s("mi",{mathvariant:"normal"},"o"),s("mi",{mathvariant:"normal"},"x")]),s("mrow",null,[s("mi",null,"c"),s("mi",null,"o"),s("mi",null,"n"),s("mi",null,"f")])]),s("mo",{separator:"true"},","),s("mtext",null," "),s("msub",null,[s("mrow",null,[s("mi",{mathvariant:"normal"},"c"),s("mi",{mathvariant:"normal"},"l"),s("mi",{mathvariant:"normal"},"a"),s("mi",{mathvariant:"normal"},"s"),s("mi",{mathvariant:"normal"},"s")]),s("mrow",null,[s("mi",null,"c"),s("mi",null,"o"),s("mi",null,"n"),s("mi",null,"f")])]),s("mo",{separator:"true"},","),s("mtext",null," "),s("msubsup",null,[s("mi",null,"K"),s("mi",null,"x"),s("mn",null,"1")]),s("mo",{separator:"true"},","),s("mtext",null," "),s("msubsup",null,[s("mi",null,"K"),s("mi",null,"y"),s("mn",null,"1")]),s("mo",{separator:"true"},","),s("mtext",null," "),s("msubsup",null,[s("mi",null,"K"),s("mrow",null,[s("mi",null,"c"),s("mi",null,"o"),s("mi",null,"n"),s("mi",null,"f")]),s("mn",null,"1")]),s("mo",{separator:"true"},","),s("mtext",null," "),s("mo",null,"…"),s("mo",{separator:"true"},","),s("mtext",null," "),s("msubsup",null,[s("mi",null,"K"),s("mi",null,"x"),s("mi",null,"n")]),s("mo",{separator:"true"},","),s("mtext",null," "),s("msubsup",null,[s("mi",null,"K"),s("mi",null,"y"),s("mi",null,"n")]),s("mo",{separator:"true"},","),s("mtext",null," "),s("msubsup",null,[s("mi",null,"K"),s("mrow",null,[s("mi",null,"c"),s("mi",null,"o"),s("mi",null,"n"),s("mi",null,"f")]),s("mi",null,"n")]),s("mo",{stretchy:"false"},"}")]),s("annotation",{encoding:"application/x-tex"}," P_v = \\{ C_x,\\,C_y,\\,W,\\,H,\\,\\mathrm{box}_{conf},\\,\\mathrm{class}_{conf},\\,K^1_x,\\,K^1_y,\\,K^1_{conf},\\,\\dots,\\,K^n_x,\\,K^n_y,\\,K^n_{conf} \\} ")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8333em","vertical-align":"-0.15em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.13889em"}},"P"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.1514em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.1389em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.03588em"}},"v")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1.2472em","vertical-align":"-0.3831em"}}),s("span",{class:"mopen"},"{"),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.07153em"}},"C"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.1514em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.0715em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight"},"x")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mpunct"},","),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.07153em"}},"C"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.1514em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.0715em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.03588em"}},"y")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.2861em"}},[s("span")])])])])]),s("span",{class:"mpunct"},","),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.13889em"}},"W"),s("span",{class:"mpunct"},","),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.08125em"}},"H"),s("span",{class:"mpunct"},","),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},[s("span",{class:"mord mathrm"},"box")]),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3361em"}},[s("span",{style:{top:"-2.55em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight"},"co"),s("span",{class:"mord mathnormal mtight"},"n"),s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.10764em"}},"f")])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.2861em"}},[s("span")])])])])]),s("span",{class:"mpunct"},","),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},[s("span",{class:"mord mathrm"},"class")]),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3361em"}},[s("span",{style:{top:"-2.55em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight"},"co"),s("span",{class:"mord mathnormal mtight"},"n"),s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.10764em"}},"f")])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.2861em"}},[s("span")])])])])]),s("span",{class:"mpunct"},","),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.07153em"}},"K"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.8641em"}},[s("span",{style:{top:"-2.453em","margin-left":"-0.0715em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight"},"x")])]),s("span",{style:{top:"-3.113em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"1")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.247em"}},[s("span")])])])])]),s("span",{class:"mpunct"},","),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.07153em"}},"K"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.8641em"}},[s("span",{style:{top:"-2.453em","margin-left":"-0.0715em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.03588em"}},"y")])]),s("span",{style:{top:"-3.113em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"1")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3831em"}},[s("span")])])])])]),s("span",{class:"mpunct"},","),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.07153em"}},"K"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.8641em"}},[s("span",{style:{top:"-2.453em","margin-left":"-0.0715em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight"},"co"),s("span",{class:"mord mathnormal mtight"},"n"),s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.10764em"}},"f")])])]),s("span",{style:{top:"-3.113em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"1")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3831em"}},[s("span")])])])])]),s("span",{class:"mpunct"},","),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"minner"},"…"),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mpunct"},","),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.07153em"}},"K"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.7144em"}},[s("span",{style:{top:"-2.453em","margin-left":"-0.0715em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight"},"x")])]),s("span",{style:{top:"-3.113em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight"},"n")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.247em"}},[s("span")])])])])]),s("span",{class:"mpunct"},","),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.07153em"}},"K"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.7144em"}},[s("span",{style:{top:"-2.453em","margin-left":"-0.0715em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.03588em"}},"y")])]),s("span",{style:{top:"-3.113em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight"},"n")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3831em"}},[s("span")])])])])]),s("span",{class:"mpunct"},","),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.07153em"}},"K"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.7144em"}},[s("span",{style:{top:"-2.453em","margin-left":"-0.0715em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight"},"co"),s("span",{class:"mord mathnormal mtight"},"n"),s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.10764em"}},"f")])])]),s("span",{style:{top:"-3.113em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight"},"n")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3831em"}},[s("span")])])])])]),s("span",{class:"mclose"},"}")])])])])],-1),g=s("p",null,[n("YOLO-Pose 使用的数据集是 Keypoints Labels of MS COCO 2017，数据集中每一行表示一个人的姿态标注。第一个值恒为 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mn",null,"0")]),s("annotation",{encoding:"application/x-tex"},"0")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6444em"}}),s("span",{class:"mord"},"0")])])]),n("，表示类别为人。后面的四个值分别是 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"x"),s("mo",{separator:"true"},","),s("mtext",null," "),s("mi",null,"y")]),s("annotation",{encoding:"application/x-tex"},"x,\\,y")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.625em","vertical-align":"-0.1944em"}}),s("span",{class:"mord mathnormal"},"x"),s("span",{class:"mpunct"},","),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"y")])])]),n(" 和宽高的归一化值，接下来是 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mn",null,"17")]),s("annotation",{encoding:"application/x-tex"},"17")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6444em"}}),s("span",{class:"mord"},"17")])])]),n(" 个关键点的位置。每一个关键点是一个长度为 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mn",null,"3")]),s("annotation",{encoding:"application/x-tex"},"3")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6444em"}}),s("span",{class:"mord"},"3")])])]),n(" 的数组，第一和第二个元素分别是 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"x")]),s("annotation",{encoding:"application/x-tex"},"x")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.4306em"}}),s("span",{class:"mord mathnormal"},"x")])])]),n(" 和 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"y")]),s("annotation",{encoding:"application/x-tex"},"y")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.625em","vertical-align":"-0.1944em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"y")])])]),n(" 归一化坐标值，第三个元素是个标志位 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"v")]),s("annotation",{encoding:"application/x-tex"},"v")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.4306em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"v")])])]),n("，"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"v")]),s("annotation",{encoding:"application/x-tex"},"v")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.4306em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"v")])])]),n(" 为 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mn",null,"0")]),s("annotation",{encoding:"application/x-tex"},"0")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6444em"}}),s("span",{class:"mord"},"0")])])]),n(" 时表示这个关键点没有标注（这种情况下 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"x"),s("mo",null,"="),s("mi",null,"y"),s("mo",null,"="),s("mi",null,"v"),s("mo",null,"="),s("mn",null,"0")]),s("annotation",{encoding:"application/x-tex"},"x=y=v=0")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.4306em"}}),s("span",{class:"mord mathnormal"},"x"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.625em","vertical-align":"-0.1944em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"y"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.4306em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"v"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6444em"}}),s("span",{class:"mord"},"0")])])]),n("），"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"v")]),s("annotation",{encoding:"application/x-tex"},"v")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.4306em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"v")])])]),n(" 为 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mn",null,"1")]),s("annotation",{encoding:"application/x-tex"},"1")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6444em"}}),s("span",{class:"mord"},"1")])])]),n(" 时表示这个关键点标注了但是不可见（被遮挡了），"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"v")]),s("annotation",{encoding:"application/x-tex"},"v")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.4306em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"v")])])]),n(" 为 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mn",null,"2")]),s("annotation",{encoding:"application/x-tex"},"2")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6444em"}}),s("span",{class:"mord"},"2")])])]),n(" 时表示这个关键点标注了同时也可见。")],-1),b=s("p",null,[n("网络中每一个锚点（anchor）的输出值是 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mi",null,"P"),s("mi",null,"v")])]),s("annotation",{encoding:"application/x-tex"},"P_v")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8333em","vertical-align":"-0.15em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.13889em"}},"P"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.1514em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.1389em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.03588em"}},"v")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])])])])]),n("，对于 YOLO，通常使用非极大值抑制来获取最终的输出结果。也就是说，我们最终会得到一个人的目标框和关键点信息。我们取所有关键点信息的归一化值来给下面的行为检测器使用。我们提取人的检测框，并使用检测框对 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mn",null,"17")]),s("annotation",{encoding:"application/x-tex"},"17")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6444em"}}),s("span",{class:"mord"},"17")])])]),n(" 个关键点进行归一化，这样我们就得到了 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mn",null,"51")]),s("annotation",{encoding:"application/x-tex"},"51")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6444em"}}),s("span",{class:"mord"},"51")])])]),n(" 维度的训练数据。")],-1),E=p('<p>现在 YOLOv7 Pose<sup class="footnote-ref"><a href="#footnote6">[6]</a><a class="footnote-anchor" id="footnote-ref6"></a></sup> 和 YOLOv8<sup class="footnote-ref"><a href="#footnote7">[7]</a><a class="footnote-anchor" id="footnote-ref7"></a></sup> 都已经实现了这个算法，并且提供了相应的预训练模型。后续将提供相应的代码示例。</p><h2 id="2-yolov5-姿态估计" tabindex="-1"><a class="header-anchor" href="#2-yolov5-姿态估计" aria-hidden="true">#</a> 2. YOLOv5 姿态估计</h2>',2),A={href:"http://software-dl.ti.com/jacinto7/esd/modelzoo/gplv3/latest/edgeai-yolov5/pretrained_models/models/keypoint/coco/edgeai-yolov5/yolov5s6_pose_640_ti_lite_54p9_82p2.onnx",target:"_blank",rel:"noopener noreferrer"},_=s("code",null,"yolov5s6_pose_640_ti_lite_54p9_82p2.onnx",-1),B=p(`<p>下面使用 ONNX Runtime 进行推理。</p><details class="hint-container details"><summary>查看代码</summary><div class="language-python line-numbers-mode" data-ext="py"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> os</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> cv2</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> numpy </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> np</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> onnxruntime</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">_CLASS_COLOR_MAP = [</span></span>
<span class="line"><span style="color:#D4D4D4;">    (</span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">255</span><span style="color:#D4D4D4;">),  </span><span style="color:#6A9955;"># Person (blue).</span></span>
<span class="line"><span style="color:#D4D4D4;">    (</span><span style="color:#B5CEA8;">255</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">),  </span><span style="color:#6A9955;"># Bear (red).</span></span>
<span class="line"><span style="color:#D4D4D4;">    (</span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">255</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">),  </span><span style="color:#6A9955;"># Tree (lime).</span></span>
<span class="line"><span style="color:#D4D4D4;">    (</span><span style="color:#B5CEA8;">255</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">255</span><span style="color:#D4D4D4;">),  </span><span style="color:#6A9955;"># Bird (fuchsia).</span></span>
<span class="line"><span style="color:#D4D4D4;">    (</span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">255</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">255</span><span style="color:#D4D4D4;">),  </span><span style="color:#6A9955;"># Sky (aqua).bbbbbbb</span></span>
<span class="line"><span style="color:#D4D4D4;">    (</span><span style="color:#B5CEA8;">255</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">255</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">),  </span><span style="color:#6A9955;"># Cat (yellow).</span></span>
<span class="line"><span style="color:#D4D4D4;">]</span></span>
<span class="line"><span style="color:#D4D4D4;">palette = np.array(</span></span>
<span class="line"><span style="color:#D4D4D4;">    [</span></span>
<span class="line"><span style="color:#D4D4D4;">        [</span><span style="color:#B5CEA8;">255</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">128</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">],</span></span>
<span class="line"><span style="color:#D4D4D4;">        [</span><span style="color:#B5CEA8;">255</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">153</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">51</span><span style="color:#D4D4D4;">],</span></span>
<span class="line"><span style="color:#D4D4D4;">        [</span><span style="color:#B5CEA8;">255</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">178</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">102</span><span style="color:#D4D4D4;">],</span></span>
<span class="line"><span style="color:#D4D4D4;">        [</span><span style="color:#B5CEA8;">230</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">230</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">],</span></span>
<span class="line"><span style="color:#D4D4D4;">        [</span><span style="color:#B5CEA8;">255</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">153</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">255</span><span style="color:#D4D4D4;">],</span></span>
<span class="line"><span style="color:#D4D4D4;">        [</span><span style="color:#B5CEA8;">153</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">204</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">255</span><span style="color:#D4D4D4;">],</span></span>
<span class="line"><span style="color:#D4D4D4;">        [</span><span style="color:#B5CEA8;">255</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">102</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">255</span><span style="color:#D4D4D4;">],</span></span>
<span class="line"><span style="color:#D4D4D4;">        [</span><span style="color:#B5CEA8;">255</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">51</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">255</span><span style="color:#D4D4D4;">],</span></span>
<span class="line"><span style="color:#D4D4D4;">        [</span><span style="color:#B5CEA8;">102</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">178</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">255</span><span style="color:#D4D4D4;">],</span></span>
<span class="line"><span style="color:#D4D4D4;">        [</span><span style="color:#B5CEA8;">51</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">153</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">255</span><span style="color:#D4D4D4;">],</span></span>
<span class="line"><span style="color:#D4D4D4;">        [</span><span style="color:#B5CEA8;">255</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">153</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">153</span><span style="color:#D4D4D4;">],</span></span>
<span class="line"><span style="color:#D4D4D4;">        [</span><span style="color:#B5CEA8;">255</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">102</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">102</span><span style="color:#D4D4D4;">],</span></span>
<span class="line"><span style="color:#D4D4D4;">        [</span><span style="color:#B5CEA8;">255</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">51</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">51</span><span style="color:#D4D4D4;">],</span></span>
<span class="line"><span style="color:#D4D4D4;">        [</span><span style="color:#B5CEA8;">153</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">255</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">153</span><span style="color:#D4D4D4;">],</span></span>
<span class="line"><span style="color:#D4D4D4;">        [</span><span style="color:#B5CEA8;">102</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">255</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">102</span><span style="color:#D4D4D4;">],</span></span>
<span class="line"><span style="color:#D4D4D4;">        [</span><span style="color:#B5CEA8;">51</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">255</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">51</span><span style="color:#D4D4D4;">],</span></span>
<span class="line"><span style="color:#D4D4D4;">        [</span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">255</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">],</span></span>
<span class="line"><span style="color:#D4D4D4;">        [</span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">255</span><span style="color:#D4D4D4;">],</span></span>
<span class="line"><span style="color:#D4D4D4;">        [</span><span style="color:#B5CEA8;">255</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">],</span></span>
<span class="line"><span style="color:#D4D4D4;">        [</span><span style="color:#B5CEA8;">255</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">255</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">255</span><span style="color:#D4D4D4;">],</span></span>
<span class="line"><span style="color:#D4D4D4;">    ]</span></span>
<span class="line"><span style="color:#D4D4D4;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">skeleton = [</span></span>
<span class="line"><span style="color:#D4D4D4;">    [</span><span style="color:#B5CEA8;">16</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">14</span><span style="color:#D4D4D4;">],</span></span>
<span class="line"><span style="color:#D4D4D4;">    [</span><span style="color:#B5CEA8;">14</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">12</span><span style="color:#D4D4D4;">],</span></span>
<span class="line"><span style="color:#D4D4D4;">    [</span><span style="color:#B5CEA8;">17</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">15</span><span style="color:#D4D4D4;">],</span></span>
<span class="line"><span style="color:#D4D4D4;">    [</span><span style="color:#B5CEA8;">15</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">13</span><span style="color:#D4D4D4;">],</span></span>
<span class="line"><span style="color:#D4D4D4;">    [</span><span style="color:#B5CEA8;">12</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">13</span><span style="color:#D4D4D4;">],</span></span>
<span class="line"><span style="color:#D4D4D4;">    [</span><span style="color:#B5CEA8;">6</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">12</span><span style="color:#D4D4D4;">],</span></span>
<span class="line"><span style="color:#D4D4D4;">    [</span><span style="color:#B5CEA8;">7</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">13</span><span style="color:#D4D4D4;">],</span></span>
<span class="line"><span style="color:#D4D4D4;">    [</span><span style="color:#B5CEA8;">6</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">7</span><span style="color:#D4D4D4;">],</span></span>
<span class="line"><span style="color:#D4D4D4;">    [</span><span style="color:#B5CEA8;">6</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">8</span><span style="color:#D4D4D4;">],</span></span>
<span class="line"><span style="color:#D4D4D4;">    [</span><span style="color:#B5CEA8;">7</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">9</span><span style="color:#D4D4D4;">],</span></span>
<span class="line"><span style="color:#D4D4D4;">    [</span><span style="color:#B5CEA8;">8</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">10</span><span style="color:#D4D4D4;">],</span></span>
<span class="line"><span style="color:#D4D4D4;">    [</span><span style="color:#B5CEA8;">9</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">11</span><span style="color:#D4D4D4;">],</span></span>
<span class="line"><span style="color:#D4D4D4;">    [</span><span style="color:#B5CEA8;">2</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">3</span><span style="color:#D4D4D4;">],</span></span>
<span class="line"><span style="color:#D4D4D4;">    [</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">2</span><span style="color:#D4D4D4;">],</span></span>
<span class="line"><span style="color:#D4D4D4;">    [</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">3</span><span style="color:#D4D4D4;">],</span></span>
<span class="line"><span style="color:#D4D4D4;">    [</span><span style="color:#B5CEA8;">2</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">4</span><span style="color:#D4D4D4;">],</span></span>
<span class="line"><span style="color:#D4D4D4;">    [</span><span style="color:#B5CEA8;">3</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">5</span><span style="color:#D4D4D4;">],</span></span>
<span class="line"><span style="color:#D4D4D4;">    [</span><span style="color:#B5CEA8;">4</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">6</span><span style="color:#D4D4D4;">],</span></span>
<span class="line"><span style="color:#D4D4D4;">    [</span><span style="color:#B5CEA8;">5</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">7</span><span style="color:#D4D4D4;">],</span></span>
<span class="line"><span style="color:#D4D4D4;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">pose_limb_color = palette[</span></span>
<span class="line"><span style="color:#D4D4D4;">    [</span><span style="color:#B5CEA8;">9</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">9</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">9</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">9</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">7</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">7</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">7</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">16</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">16</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">16</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">16</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">16</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">16</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">16</span><span style="color:#D4D4D4;">]</span></span>
<span class="line"><span style="color:#D4D4D4;">]</span></span>
<span class="line"><span style="color:#D4D4D4;">pose_kpt_color = palette[[</span><span style="color:#B5CEA8;">16</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">16</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">16</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">16</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">16</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">9</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">9</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">9</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">9</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">9</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">9</span><span style="color:#D4D4D4;">]]</span></span>
<span class="line"><span style="color:#D4D4D4;">radius = </span><span style="color:#B5CEA8;">5</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">_cache_session = </span><span style="color:#569CD6;">None</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">def</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">preprocess_image</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">img</span><span style="color:#D4D4D4;">: np.ndarray, </span><span style="color:#9CDCFE;">img_mean</span><span style="color:#D4D4D4;">=</span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">img_scale</span><span style="color:#D4D4D4;">=</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;"> / </span><span style="color:#B5CEA8;">255</span><span style="color:#D4D4D4;">):</span></span>
<span class="line"><span style="color:#D4D4D4;">    img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)</span></span>
<span class="line"><span style="color:#D4D4D4;">    img = cv2.resize(img, (</span><span style="color:#B5CEA8;">640</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">640</span><span style="color:#D4D4D4;">), </span><span style="color:#9CDCFE;">interpolation</span><span style="color:#D4D4D4;">=cv2.INTER_LINEAR)</span></span>
<span class="line"><span style="color:#D4D4D4;">    img = (img - img_mean) * img_scale</span></span>
<span class="line"><span style="color:#D4D4D4;">    img = np.asarray(img, </span><span style="color:#9CDCFE;">dtype</span><span style="color:#D4D4D4;">=np.float32)</span></span>
<span class="line"><span style="color:#D4D4D4;">    img = np.expand_dims(img, </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">    img = img.transpose(</span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">3</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">2</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> img</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">def</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">model_inference</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">model_path</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;./yolov7-w6-pose.onnx&quot;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">input</span><span style="color:#D4D4D4;">=</span><span style="color:#569CD6;">None</span><span style="color:#D4D4D4;">):</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#569CD6;">global</span><span style="color:#D4D4D4;"> _cache_session</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">if</span><span style="color:#D4D4D4;"> _cache_session </span><span style="color:#569CD6;">is</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">None</span><span style="color:#D4D4D4;">:</span></span>
<span class="line"><span style="color:#D4D4D4;">        _cache_session = onnxruntime.InferenceSession(model_path, </span><span style="color:#569CD6;">None</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">    input_name = _cache_session.get_inputs()[</span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">].name</span></span>
<span class="line"><span style="color:#D4D4D4;">    output = _cache_session.run([], {input_name: </span><span style="color:#DCDCAA;">input</span><span style="color:#D4D4D4;">})</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> output</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">def</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">post_process</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">img</span><span style="color:#D4D4D4;">: np.ndarray, </span><span style="color:#9CDCFE;">output</span><span style="color:#D4D4D4;">: np.ndarray, </span><span style="color:#9CDCFE;">score_threshold</span><span style="color:#D4D4D4;">=</span><span style="color:#B5CEA8;">0.3</span><span style="color:#D4D4D4;">):</span></span>
<span class="line"><span style="color:#D4D4D4;">    h, w, _ = img.shape</span></span>
<span class="line"><span style="color:#D4D4D4;">    img = cv2.resize(img, (</span><span style="color:#B5CEA8;">640</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">640</span><span style="color:#D4D4D4;">), </span><span style="color:#9CDCFE;">interpolation</span><span style="color:#D4D4D4;">=cv2.INTER_LINEAR)</span></span>
<span class="line"><span style="color:#D4D4D4;">    det_bboxes, det_scores, det_labels, kpts = (</span></span>
<span class="line"><span style="color:#D4D4D4;">        output[:, </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">:</span><span style="color:#B5CEA8;">4</span><span style="color:#D4D4D4;">],</span></span>
<span class="line"><span style="color:#D4D4D4;">        output[:, </span><span style="color:#B5CEA8;">4</span><span style="color:#D4D4D4;">],</span></span>
<span class="line"><span style="color:#D4D4D4;">        output[:, </span><span style="color:#B5CEA8;">5</span><span style="color:#D4D4D4;">],</span></span>
<span class="line"><span style="color:#D4D4D4;">        output[:, </span><span style="color:#B5CEA8;">6</span><span style="color:#D4D4D4;">:],</span></span>
<span class="line"><span style="color:#D4D4D4;">    )</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">for</span><span style="color:#D4D4D4;"> idx </span><span style="color:#C586C0;">in</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">range</span><span style="color:#D4D4D4;">(</span><span style="color:#DCDCAA;">len</span><span style="color:#D4D4D4;">(det_bboxes)):</span></span>
<span class="line"><span style="color:#D4D4D4;">        det_bbox = det_bboxes[idx]</span></span>
<span class="line"><span style="color:#D4D4D4;">        kpt = kpts[idx]</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#6A9955;"># print(det_labels[idx], kpt, det_bbox)</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#C586C0;">if</span><span style="color:#D4D4D4;"> det_scores[idx] &gt; score_threshold:</span></span>
<span class="line"><span style="color:#D4D4D4;">            color_map = _CLASS_COLOR_MAP[</span><span style="color:#4EC9B0;">int</span><span style="color:#D4D4D4;">(det_labels[idx])]</span></span>
<span class="line"><span style="color:#D4D4D4;">            img = cv2.rectangle(</span></span>
<span class="line"><span style="color:#D4D4D4;">                img,</span></span>
<span class="line"><span style="color:#D4D4D4;">                (</span><span style="color:#4EC9B0;">int</span><span style="color:#D4D4D4;">(det_bbox[</span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">]), </span><span style="color:#4EC9B0;">int</span><span style="color:#D4D4D4;">(det_bbox[</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">])),</span></span>
<span class="line"><span style="color:#D4D4D4;">                (</span><span style="color:#4EC9B0;">int</span><span style="color:#D4D4D4;">(det_bbox[</span><span style="color:#B5CEA8;">2</span><span style="color:#D4D4D4;">]), </span><span style="color:#4EC9B0;">int</span><span style="color:#D4D4D4;">(det_bbox[</span><span style="color:#B5CEA8;">3</span><span style="color:#D4D4D4;">])),</span></span>
<span class="line"><span style="color:#D4D4D4;">                color_map[::-</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">],</span></span>
<span class="line"><span style="color:#D4D4D4;">                </span><span style="color:#B5CEA8;">2</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">            )</span></span>
<span class="line"><span style="color:#D4D4D4;">            cv2.putText(</span></span>
<span class="line"><span style="color:#D4D4D4;">                img,</span></span>
<span class="line"><span style="color:#D4D4D4;">                </span><span style="color:#CE9178;">&quot;id:</span><span style="color:#569CD6;">{}</span><span style="color:#CE9178;">&quot;</span><span style="color:#D4D4D4;">.format(</span><span style="color:#4EC9B0;">int</span><span style="color:#D4D4D4;">(det_labels[idx])),</span></span>
<span class="line"><span style="color:#D4D4D4;">                (</span><span style="color:#4EC9B0;">int</span><span style="color:#D4D4D4;">(det_bbox[</span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">] + </span><span style="color:#B5CEA8;">5</span><span style="color:#D4D4D4;">), </span><span style="color:#4EC9B0;">int</span><span style="color:#D4D4D4;">(det_bbox[</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">]) + </span><span style="color:#B5CEA8;">15</span><span style="color:#D4D4D4;">),</span></span>
<span class="line"><span style="color:#D4D4D4;">                cv2.FONT_HERSHEY_SIMPLEX,</span></span>
<span class="line"><span style="color:#D4D4D4;">                </span><span style="color:#B5CEA8;">0.5</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">                color_map[::-</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">],</span></span>
<span class="line"><span style="color:#D4D4D4;">                </span><span style="color:#B5CEA8;">2</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">            )</span></span>
<span class="line"><span style="color:#D4D4D4;">            cv2.putText(</span></span>
<span class="line"><span style="color:#D4D4D4;">                img,</span></span>
<span class="line"><span style="color:#D4D4D4;">                </span><span style="color:#CE9178;">&quot;score:</span><span style="color:#569CD6;">{:2.1f}</span><span style="color:#CE9178;">&quot;</span><span style="color:#D4D4D4;">.format(det_scores[idx]),</span></span>
<span class="line"><span style="color:#D4D4D4;">                (</span><span style="color:#4EC9B0;">int</span><span style="color:#D4D4D4;">(det_bbox[</span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">] + </span><span style="color:#B5CEA8;">5</span><span style="color:#D4D4D4;">), </span><span style="color:#4EC9B0;">int</span><span style="color:#D4D4D4;">(det_bbox[</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">]) + </span><span style="color:#B5CEA8;">30</span><span style="color:#D4D4D4;">),</span></span>
<span class="line"><span style="color:#D4D4D4;">                cv2.FONT_HERSHEY_SIMPLEX,</span></span>
<span class="line"><span style="color:#D4D4D4;">                </span><span style="color:#B5CEA8;">0.5</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">                color_map[::-</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">],</span></span>
<span class="line"><span style="color:#D4D4D4;">                </span><span style="color:#B5CEA8;">2</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">            )</span></span>
<span class="line"><span style="color:#D4D4D4;">            plot_skeleton_kpts(img, kpt)</span></span>
<span class="line"><span style="color:#D4D4D4;">    img = cv2.resize(img, (w, h), </span><span style="color:#9CDCFE;">interpolation</span><span style="color:#D4D4D4;">=cv2.INTER_LINEAR)</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> img, kpts</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">def</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">plot_skeleton_kpts</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">img</span><span style="color:#D4D4D4;">: np.ndarray, </span><span style="color:#9CDCFE;">kpts</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">steps</span><span style="color:#D4D4D4;">=</span><span style="color:#B5CEA8;">3</span><span style="color:#D4D4D4;">):</span></span>
<span class="line"><span style="color:#D4D4D4;">    num_kpts = </span><span style="color:#DCDCAA;">len</span><span style="color:#D4D4D4;">(kpts) // steps</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#6A9955;"># plot keypoints</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">for</span><span style="color:#D4D4D4;"> kid </span><span style="color:#C586C0;">in</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">range</span><span style="color:#D4D4D4;">(num_kpts):</span></span>
<span class="line"><span style="color:#D4D4D4;">        r, g, b = pose_kpt_color[kid]</span></span>
<span class="line"><span style="color:#D4D4D4;">        x_coord, y_coord = kpts[steps * kid], kpts[steps * kid + </span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">]</span></span>
<span class="line"><span style="color:#D4D4D4;">        conf = kpts[steps * kid + </span><span style="color:#B5CEA8;">2</span><span style="color:#D4D4D4;">]</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#C586C0;">if</span><span style="color:#D4D4D4;"> conf &gt; </span><span style="color:#B5CEA8;">0.5</span><span style="color:#D4D4D4;">:  </span><span style="color:#6A9955;"># Confidence of a keypoint has to be greater than 0.5</span></span>
<span class="line"><span style="color:#D4D4D4;">            cv2.circle(</span></span>
<span class="line"><span style="color:#D4D4D4;">                img, (</span><span style="color:#4EC9B0;">int</span><span style="color:#D4D4D4;">(x_coord), </span><span style="color:#4EC9B0;">int</span><span style="color:#D4D4D4;">(y_coord)), radius, (</span><span style="color:#4EC9B0;">int</span><span style="color:#D4D4D4;">(r), </span><span style="color:#4EC9B0;">int</span><span style="color:#D4D4D4;">(g), </span><span style="color:#4EC9B0;">int</span><span style="color:#D4D4D4;">(b)), -</span><span style="color:#B5CEA8;">1</span></span>
<span class="line"><span style="color:#D4D4D4;">            )</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#6A9955;"># plot skeleton</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">for</span><span style="color:#D4D4D4;"> sk_id, sk </span><span style="color:#C586C0;">in</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">enumerate</span><span style="color:#D4D4D4;">(skeleton):</span></span>
<span class="line"><span style="color:#D4D4D4;">        r, g, b = pose_limb_color[sk_id]</span></span>
<span class="line"><span style="color:#D4D4D4;">        pos1 = (</span><span style="color:#4EC9B0;">int</span><span style="color:#D4D4D4;">(kpts[(sk[</span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">] - </span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">) * steps]), </span><span style="color:#4EC9B0;">int</span><span style="color:#D4D4D4;">(kpts[(sk[</span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">] - </span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">) * steps + </span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">]))</span></span>
<span class="line"><span style="color:#D4D4D4;">        pos2 = (</span><span style="color:#4EC9B0;">int</span><span style="color:#D4D4D4;">(kpts[(sk[</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">] - </span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">) * steps]), </span><span style="color:#4EC9B0;">int</span><span style="color:#D4D4D4;">(kpts[(sk[</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">] - </span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">) * steps + </span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">]))</span></span>
<span class="line"><span style="color:#D4D4D4;">        conf1 = kpts[(sk[</span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">] - </span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">) * steps + </span><span style="color:#B5CEA8;">2</span><span style="color:#D4D4D4;">]</span></span>
<span class="line"><span style="color:#D4D4D4;">        conf2 = kpts[(sk[</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">] - </span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">) * steps + </span><span style="color:#B5CEA8;">2</span><span style="color:#D4D4D4;">]</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#C586C0;">if</span><span style="color:#D4D4D4;"> (</span></span>
<span class="line"><span style="color:#D4D4D4;">            conf1 &gt; </span><span style="color:#B5CEA8;">0.5</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">and</span><span style="color:#D4D4D4;"> conf2 &gt; </span><span style="color:#B5CEA8;">0.5</span></span>
<span class="line"><span style="color:#D4D4D4;">        ):  </span><span style="color:#6A9955;"># For a limb, both the keypoint confidence must be greater than 0.5</span></span>
<span class="line"><span style="color:#D4D4D4;">            cv2.line(img, pos1, pos2, (</span><span style="color:#4EC9B0;">int</span><span style="color:#D4D4D4;">(r), </span><span style="color:#4EC9B0;">int</span><span style="color:#D4D4D4;">(g), </span><span style="color:#4EC9B0;">int</span><span style="color:#D4D4D4;">(b)), </span><span style="color:#9CDCFE;">thickness</span><span style="color:#D4D4D4;">=</span><span style="color:#B5CEA8;">2</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">def</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">infer_video</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">video_path</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">str</span><span style="color:#D4D4D4;"> | </span><span style="color:#4EC9B0;">int</span><span style="color:#D4D4D4;">):</span></span>
<span class="line"><span style="color:#D4D4D4;">    cap = cv2.VideoCapture(video_path)</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">if</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">not</span><span style="color:#D4D4D4;"> cap.isOpened():</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#DCDCAA;">print</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;Error opening video stream or file&quot;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#C586C0;">return</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">while</span><span style="color:#D4D4D4;"> cap.isOpened():</span></span>
<span class="line"><span style="color:#D4D4D4;">        ret, frame = cap.read()</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#C586C0;">if</span><span style="color:#D4D4D4;"> ret:</span></span>
<span class="line"><span style="color:#D4D4D4;">            img = preprocess_image(frame)</span></span>
<span class="line"><span style="color:#D4D4D4;">            output = model_inference(</span><span style="color:#9CDCFE;">input</span><span style="color:#D4D4D4;">=img)[</span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">]</span></span>
<span class="line"><span style="color:#D4D4D4;">            res, kpts = post_process(frame, output)</span></span>
<span class="line"><span style="color:#D4D4D4;">            cv2.imshow(</span><span style="color:#CE9178;">&quot;frame&quot;</span><span style="color:#D4D4D4;">, res)</span></span>
<span class="line"><span style="color:#D4D4D4;">            </span><span style="color:#C586C0;">if</span><span style="color:#D4D4D4;"> cv2.waitKey(</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">) &amp; </span><span style="color:#569CD6;">0x</span><span style="color:#B5CEA8;">FF</span><span style="color:#D4D4D4;"> == </span><span style="color:#DCDCAA;">ord</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;q&quot;</span><span style="color:#D4D4D4;">):</span></span>
<span class="line"><span style="color:#D4D4D4;">                </span><span style="color:#C586C0;">break</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#C586C0;">else</span><span style="color:#D4D4D4;">:</span></span>
<span class="line"><span style="color:#D4D4D4;">            </span><span style="color:#C586C0;">break</span></span>
<span class="line"><span style="color:#D4D4D4;">    cap.release()</span></span>
<span class="line"><span style="color:#D4D4D4;">    cv2.destroyAllWindows()</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">def</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">build_train_data</span><span style="color:#D4D4D4;">():</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> pandas </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> pd</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">    cols = []</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">for</span><span style="color:#D4D4D4;"> p </span><span style="color:#C586C0;">in</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">range</span><span style="color:#D4D4D4;">(</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">18</span><span style="color:#D4D4D4;">):</span></span>
<span class="line"><span style="color:#D4D4D4;">        cols.append(</span><span style="color:#CE9178;">&quot;x</span><span style="color:#569CD6;">{}</span><span style="color:#CE9178;">&quot;</span><span style="color:#D4D4D4;">.format(p))</span></span>
<span class="line"><span style="color:#D4D4D4;">        cols.append(</span><span style="color:#CE9178;">&quot;y</span><span style="color:#569CD6;">{}</span><span style="color:#CE9178;">&quot;</span><span style="color:#D4D4D4;">.format(p))</span></span>
<span class="line"><span style="color:#D4D4D4;">        cols.append(</span><span style="color:#CE9178;">&quot;c</span><span style="color:#569CD6;">{}</span><span style="color:#CE9178;">&quot;</span><span style="color:#D4D4D4;">.format(p))</span></span>
<span class="line"><span style="color:#D4D4D4;">    data = pd.DataFrame(</span><span style="color:#9CDCFE;">columns</span><span style="color:#D4D4D4;">=cols)</span></span>
<span class="line"><span style="color:#D4D4D4;">    i = </span><span style="color:#B5CEA8;">0</span></span>
<span class="line"><span style="color:#D4D4D4;">    data_path = </span><span style="color:#CE9178;">&quot;train&quot;</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">for</span><span style="color:#D4D4D4;"> f </span><span style="color:#C586C0;">in</span><span style="color:#D4D4D4;"> os.listdir(</span><span style="color:#569CD6;">f</span><span style="color:#CE9178;">&quot;./data/</span><span style="color:#569CD6;">{</span><span style="color:#D4D4D4;">data_path</span><span style="color:#569CD6;">}</span><span style="color:#CE9178;">&quot;</span><span style="color:#D4D4D4;">):</span></span>
<span class="line"><span style="color:#D4D4D4;">        img_src = cv2.imread(</span><span style="color:#569CD6;">f</span><span style="color:#CE9178;">&quot;./data/</span><span style="color:#569CD6;">{</span><span style="color:#D4D4D4;">data_path</span><span style="color:#569CD6;">}</span><span style="color:#CE9178;">/</span><span style="color:#569CD6;">{</span><span style="color:#D4D4D4;">f</span><span style="color:#569CD6;">}</span><span style="color:#CE9178;">&quot;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">        img = preprocess_image(img_src)</span></span>
<span class="line"><span style="color:#D4D4D4;">        output = model_inference(</span><span style="color:#9CDCFE;">input</span><span style="color:#D4D4D4;">=img)[</span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">]</span></span>
<span class="line"><span style="color:#D4D4D4;">        res, kpts = post_process(img_src, output)</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#C586C0;">if</span><span style="color:#D4D4D4;"> kpts.size &gt; </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">:</span></span>
<span class="line"><span style="color:#D4D4D4;">            data.loc[i] = kpts[</span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">]  </span><span style="color:#6A9955;"># type: ignore</span></span>
<span class="line"><span style="color:#D4D4D4;">            i += </span><span style="color:#B5CEA8;">1</span></span>
<span class="line"><span style="color:#D4D4D4;">        cv2.imshow(</span><span style="color:#CE9178;">&quot;frame&quot;</span><span style="color:#D4D4D4;">, res)</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#C586C0;">if</span><span style="color:#D4D4D4;"> cv2.waitKey(</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">) &amp; </span><span style="color:#569CD6;">0x</span><span style="color:#B5CEA8;">FF</span><span style="color:#D4D4D4;"> == </span><span style="color:#DCDCAA;">ord</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;q&quot;</span><span style="color:#D4D4D4;">):</span></span>
<span class="line"><span style="color:#D4D4D4;">            </span><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">None</span></span>
<span class="line"><span style="color:#D4D4D4;">    data.to_csv(</span><span style="color:#569CD6;">f</span><span style="color:#CE9178;">&quot;./data/</span><span style="color:#569CD6;">{</span><span style="color:#D4D4D4;">data_path</span><span style="color:#569CD6;">}</span><span style="color:#CE9178;">.csv&quot;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">index</span><span style="color:#D4D4D4;">=</span><span style="color:#569CD6;">False</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">def</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">main</span><span style="color:#D4D4D4;">():</span></span>
<span class="line"><span style="color:#D4D4D4;">    infer_video(</span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#6A9955;"># build_train_data()</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#C586C0;">if</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">__name__</span><span style="color:#D4D4D4;"> == </span><span style="color:#CE9178;">&quot;__main__&quot;</span><span style="color:#D4D4D4;">:</span></span>
<span class="line"><span style="color:#D4D4D4;">    main()</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><p>如果我们需要对每个关键点基于检测框进行归一化，可以在 <code>post_process</code> 函数中添加如下代码：</p><div class="language-python" data-ext="py"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#C586C0;">if</span><span style="color:#D4D4D4;"> kpts.size &gt; </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">:</span></span>
<span class="line"><span style="color:#D4D4D4;">    det_bbox = det_bboxes[</span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">]</span></span>
<span class="line"><span style="color:#D4D4D4;">    x1, y1, x2, y2 = </span><span style="color:#DCDCAA;">map</span><span style="color:#D4D4D4;">(</span><span style="color:#4EC9B0;">int</span><span style="color:#D4D4D4;">, det_bbox)</span></span>
<span class="line"><span style="color:#D4D4D4;">    w, h = x2 - x1, y2 - y1</span></span>
<span class="line"><span style="color:#D4D4D4;">    kpts[</span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">::</span><span style="color:#B5CEA8;">3</span><span style="color:#D4D4D4;">] = (kpts[</span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">::</span><span style="color:#B5CEA8;">3</span><span style="color:#D4D4D4;">] - x1) / w</span></span>
<span class="line"><span style="color:#D4D4D4;">    kpts[</span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">::</span><span style="color:#B5CEA8;">3</span><span style="color:#D4D4D4;">] = (kpts[</span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">::</span><span style="color:#B5CEA8;">3</span><span style="color:#D4D4D4;">] - y1) / h</span></span>
<span class="line"></span></code></pre></div><p>如果需要推理某个文件夹下的全部文件，修改 <code>build_train_data</code> 函数，最终会构建 CSV 文件。</p><h2 id="3-行为分类" tabindex="-1"><a class="header-anchor" href="#3-行为分类" aria-hidden="true">#</a> 3. 行为分类</h2>`,6),f={href:"https://www.kaggle.com/datasets/niharika41298/yoga-poses-dataset",target:"_blank",rel:"noopener noreferrer"},x=s("sup",{class:"footnote-ref"},[s("a",{href:"#footnote8"},"[8]"),s("a",{class:"footnote-anchor",id:"footnote-ref8"})],-1),k=p("<p>SVM 分类器的工作流程如下：</p><ol><li>收集训练数据集：收集一组已经标记好的训练数据集，其中每个样本都有一个标签，表示它所属的类别。</li><li>特征提取：从每个样本中提取出一组特征向量，用于描述该样本的特征。</li><li>标准化：对特征向量进行标准化处理，使其在数值上具有相同的尺度。</li><li>寻找最优超平面：通过求解一个优化问题，找到一个最优的超平面，使得该超平面能够将不同类别的样本分开，并且在两侧的分类边界上的距离最大。</li><li>核函数选择：如果数据集不是线性可分的，需要使用核函数将数据映射到高维空间中，使其成为线性可分的。</li><li>参数调优：选择合适的参数，如正则化参数和核函数参数，以达到更好的分类效果。</li><li>模型评估：使用测试数据集对模型进行评估，检验其泛化能力。</li><li>应用模型：将训练好的模型应用于新的未知数据进行分类。</li></ol><p>依据上面的流程，我们设计的训练流程如下：</p>",3),w=p(`<p>由摄像机提取的图像帧数据经过预处理后经过 YOLOv7-Pose 网络检测后，得到每一个图像的特征点数据，然后降维到低维度后训练 SVM 分类器，通过 SVM 分类器实现行为检测，从而判断具体行为。</p><p>下面是一个二分类的示例，用于分类摔倒和没有摔倒的图片，预处理方式相似，需要对检测框进行归一化，请参考上方代码，将数据保存为 CSV 文件。使用网格搜索查找最优参数，训练后绘制混淆矩阵，并打印准确率、精度、召回率和 F1 值。</p><details class="hint-container details"><summary>SVM 分类器示例</summary><div class="language-python line-numbers-mode" data-ext="py"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> joblib</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> matplotlib.pyplot </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> plt</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> pandas </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> pd</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> seaborn </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> sns</span></span>
<span class="line"><span style="color:#C586C0;">from</span><span style="color:#D4D4D4;"> sklearn.metrics </span><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> classification_report, confusion_matrix</span></span>
<span class="line"><span style="color:#C586C0;">from</span><span style="color:#D4D4D4;"> sklearn.model_selection </span><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> GridSearchCV</span></span>
<span class="line"><span style="color:#C586C0;">from</span><span style="color:#D4D4D4;"> sklearn.svm </span><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> SVC</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;"># Data</span></span>
<span class="line"><span style="color:#D4D4D4;">data_fall = pd.read_csv(</span><span style="color:#CE9178;">&quot;data/fall.csv&quot;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">data_nofall = pd.read_csv(</span><span style="color:#CE9178;">&quot;data/nofall.csv&quot;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;"># Data Preprocessing</span></span>
<span class="line"><span style="color:#D4D4D4;">data_fall[</span><span style="color:#CE9178;">&quot;label&quot;</span><span style="color:#D4D4D4;">] = </span><span style="color:#B5CEA8;">1</span></span>
<span class="line"><span style="color:#D4D4D4;">data_nofall[</span><span style="color:#CE9178;">&quot;label&quot;</span><span style="color:#D4D4D4;">] = </span><span style="color:#B5CEA8;">0</span></span>
<span class="line"><span style="color:#D4D4D4;">data = pd.concat([data_fall, data_nofall], </span><span style="color:#9CDCFE;">ignore_index</span><span style="color:#D4D4D4;">=</span><span style="color:#569CD6;">True</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">data = data.dropna()</span></span>
<span class="line"><span style="color:#D4D4D4;">data = data.sample(</span><span style="color:#9CDCFE;">frac</span><span style="color:#D4D4D4;">=</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">).reset_index(</span><span style="color:#9CDCFE;">drop</span><span style="color:#D4D4D4;">=</span><span style="color:#569CD6;">True</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">data = data.astype(</span><span style="color:#CE9178;">&quot;float64&quot;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;"># Split data</span></span>
<span class="line"><span style="color:#D4D4D4;">X = data.drop(</span><span style="color:#CE9178;">&quot;label&quot;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">axis</span><span style="color:#D4D4D4;">=</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">y = data[</span><span style="color:#CE9178;">&quot;label&quot;</span><span style="color:#D4D4D4;">]</span></span>
<span class="line"><span style="color:#D4D4D4;">X_train = X[: </span><span style="color:#4EC9B0;">int</span><span style="color:#D4D4D4;">(</span><span style="color:#DCDCAA;">len</span><span style="color:#D4D4D4;">(X) * </span><span style="color:#B5CEA8;">0.8</span><span style="color:#D4D4D4;">)]</span></span>
<span class="line"><span style="color:#D4D4D4;">X_test = X[</span><span style="color:#4EC9B0;">int</span><span style="color:#D4D4D4;">(</span><span style="color:#DCDCAA;">len</span><span style="color:#D4D4D4;">(X) * </span><span style="color:#B5CEA8;">0.8</span><span style="color:#D4D4D4;">) :]</span></span>
<span class="line"><span style="color:#D4D4D4;">y_train = y[: </span><span style="color:#4EC9B0;">int</span><span style="color:#D4D4D4;">(</span><span style="color:#DCDCAA;">len</span><span style="color:#D4D4D4;">(y) * </span><span style="color:#B5CEA8;">0.8</span><span style="color:#D4D4D4;">)]</span></span>
<span class="line"><span style="color:#D4D4D4;">y_test = y[</span><span style="color:#4EC9B0;">int</span><span style="color:#D4D4D4;">(</span><span style="color:#DCDCAA;">len</span><span style="color:#D4D4D4;">(y) * </span><span style="color:#B5CEA8;">0.8</span><span style="color:#D4D4D4;">) :]</span></span>
<span class="line"><span style="color:#DCDCAA;">print</span><span style="color:#D4D4D4;">(X, y)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;"># SVM</span></span>
<span class="line"><span style="color:#D4D4D4;">svm = SVC(</span><span style="color:#9CDCFE;">kernel</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;rbf&quot;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">C</span><span style="color:#D4D4D4;">=</span><span style="color:#B5CEA8;">1000</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">gamma</span><span style="color:#D4D4D4;">=</span><span style="color:#B5CEA8;">0.001</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">svm.fit(X_train, y_train)</span></span>
<span class="line"><span style="color:#D4D4D4;">y_pred = svm.predict(X_test)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;"># Evaluation</span></span>
<span class="line"><span style="color:#DCDCAA;">print</span><span style="color:#D4D4D4;">(confusion_matrix(y_test, y_pred))</span></span>
<span class="line"><span style="color:#DCDCAA;">print</span><span style="color:#D4D4D4;">(classification_report(y_test, y_pred))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;"># Plot</span></span>
<span class="line"><span style="color:#D4D4D4;">sns.heatmap(confusion_matrix(y_test, y_pred), </span><span style="color:#9CDCFE;">annot</span><span style="color:#D4D4D4;">=</span><span style="color:#569CD6;">True</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">cmap</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;Blues&quot;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">plt.show()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;"># Grid Search</span></span>
<span class="line"><span style="color:#D4D4D4;">param_grid = {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#CE9178;">&quot;C&quot;</span><span style="color:#D4D4D4;">: [</span><span style="color:#B5CEA8;">0.1</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">10</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">100</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">1000</span><span style="color:#D4D4D4;">],</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#CE9178;">&quot;gamma&quot;</span><span style="color:#D4D4D4;">: [</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">0.1</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">0.01</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">0.001</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">0.0001</span><span style="color:#D4D4D4;">],</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#CE9178;">&quot;kernel&quot;</span><span style="color:#D4D4D4;">: [</span><span style="color:#CE9178;">&quot;rbf&quot;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&quot;poly&quot;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&quot;sigmoid&quot;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&quot;linear&quot;</span><span style="color:#D4D4D4;">],</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"><span style="color:#D4D4D4;">grid = GridSearchCV(SVC(), param_grid, </span><span style="color:#9CDCFE;">refit</span><span style="color:#D4D4D4;">=</span><span style="color:#569CD6;">True</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">grid.fit(X_train, y_train)</span></span>
<span class="line"><span style="color:#DCDCAA;">print</span><span style="color:#D4D4D4;">(grid.best_params_)</span></span>
<span class="line"><span style="color:#DCDCAA;">print</span><span style="color:#D4D4D4;">(grid.best_estimator_)</span></span>
<span class="line"><span style="color:#D4D4D4;">grid_predictions = grid.predict(X_test)</span></span>
<span class="line"><span style="color:#DCDCAA;">print</span><span style="color:#D4D4D4;">(confusion_matrix(y_test, grid_predictions))</span></span>
<span class="line"><span style="color:#DCDCAA;">print</span><span style="color:#D4D4D4;">(classification_report(y_test, grid_predictions))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;"># Plot</span></span>
<span class="line"><span style="color:#D4D4D4;">sns.heatmap(confusion_matrix(y_test, grid_predictions), </span><span style="color:#9CDCFE;">annot</span><span style="color:#D4D4D4;">=</span><span style="color:#569CD6;">True</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">cmap</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;Blues&quot;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">plt.show()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;"># Save model</span></span>
<span class="line"><span style="color:#D4D4D4;">joblib.dump(grid, </span><span style="color:#CE9178;">&quot;model/svm.pkl&quot;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><p>本次测试每个类别 116 个样本，训练集 80%，测试集 20%，最终结果如下。</p><p>最优参数：</p><table><thead><tr><th>C</th><th>gamma</th><th>kernel</th></tr></thead><tbody><tr><td>10</td><td>1</td><td><code>rbf</code></td></tr></tbody></table><table><thead><tr><th>参数表</th><th>precision</th><th>recall</th><th>f1-score</th><th>support</th></tr></thead><tbody><tr><td>0.0</td><td>0.91</td><td>0.95</td><td>0.93</td><td>21</td></tr><tr><td>1.0</td><td>0.96</td><td>0.92</td><td>0.94</td><td>26</td></tr><tr><td>accuracy</td><td>-</td><td>-</td><td>0.94</td><td>47</td></tr><tr><td>macro avg</td><td>0.93</td><td>0.94</td><td>0.94</td><td>47</td></tr><tr><td>weighted avg</td><td>0.94</td><td>0.94</td><td>0.94</td><td>47</td></tr></tbody></table><p>混淆矩阵：</p><p><img src="`+y+'" alt="matrix" loading="lazy"></p><hr class="footnotes-sep">',10),M={class:"footnotes"},q={class:"footnotes-list"},z={id:"footnote1",class:"footnote-item"},L={href:"https://zhuanlan.zhihu.com/p/103566134",target:"_blank",rel:"noopener noreferrer"},F=s("a",{href:"#footnote-ref1",class:"footnote-backref"},"↩︎",-1),O={id:"footnote2",class:"footnote-item"},P=s("em",null,"Perception & Psychophysics",-1),S={href:"https://doi.org/10.3758/BF03212378",target:"_blank",rel:"noopener noreferrer"},K=s("a",{href:"#footnote-ref2",class:"footnote-backref"},"↩︎",-1),N={id:"footnote3",class:"footnote-item"},Y={href:"https://cloud.tencent.com/developer/article/2029260",target:"_blank",rel:"noopener noreferrer"},T=s("a",{href:"#footnote-ref3",class:"footnote-backref"},"↩︎",-1),V={id:"footnote4",class:"footnote-item"},X=s("em",null,"YOLO-Pose: Enhancing YOLO for Multi Person Pose Estimation Using Object Keypoint Similarity Loss",-1),R={href:"https://arxiv.org/abs/2204.06806",target:"_blank",rel:"noopener noreferrer"},I=s("a",{href:"#footnote-ref4",class:"footnote-backref"},"↩︎",-1),H=s("a",{href:"#footnote-ref4:1",class:"footnote-backref"},"↩︎",-1),j={id:"footnote5",class:"footnote-item"},W=s("em",null,"Rethinking Keypoint Representations: Modeling Keypoints and Poses as Objects for Multi-Person Human Pose Estimation",-1),G={href:"https://arxiv.org/abs/2111.08557",target:"_blank",rel:"noopener noreferrer"},J=s("a",{href:"#footnote-ref5",class:"footnote-backref"},"↩︎",-1),Z={id:"footnote6",class:"footnote-item"},U={href:"https://github.com/WongKinYiu/yolov7/tree/pose",target:"_blank",rel:"noopener noreferrer"},Q=s("a",{href:"#footnote-ref6",class:"footnote-backref"},"↩︎",-1),$={id:"footnote7",class:"footnote-item"},ss={href:"https://github.com/ultralytics/ultralytics",target:"_blank",rel:"noopener noreferrer"},ns=s("a",{href:"#footnote-ref7",class:"footnote-backref"},"↩︎",-1),as={id:"footnote8",class:"footnote-item"},ls={href:"https://mp.weixin.qq.com/s/D_sTpTp_pkLeO2nrcjgpaA",target:"_blank",rel:"noopener noreferrer"},ps=s("a",{href:"#footnote-ref8",class:"footnote-backref"},"↩︎",-1);function es(os,ts){const e=t("router-link"),l=t("ExternalLinkIcon"),c=t("Mermaid");return i(),D("div",null,[d,s("nav",u,[s("ul",null,[s("li",null,[a(e,{to:"#1-姿态估计和行为检测概述"},{default:o(()=>[n("1. 姿态估计和行为检测概述")]),_:1})]),s("li",null,[a(e,{to:"#2-姿态估计的方法"},{default:o(()=>[n("2. 姿态估计的方法")]),_:1})]),s("li",null,[a(e,{to:"#2-yolov5-姿态估计"},{default:o(()=>[n("2. YOLOv5 姿态估计")]),_:1})]),s("li",null,[a(e,{to:"#3-行为分类"},{default:o(()=>[n("3. 行为分类")]),_:1})])])]),v,h,C,g,b,E,s("p",null,[s("a",A,[n("下载 ONNX 预训练模型"),a(l)]),n("，得到文件 "),_,n("。")]),B,s("p",null,[n("有了关键点数据，我们就可以对行为进行分类。我们可以使用 "),s("a",f,[n("Kaggle 瑜伽姿态数据集"),a(l)]),n("，这个数据集包含了 5 种不同的瑜伽姿势，每种姿势有 100~200 个样本"),x,n("。我们可以使用 SVM 分类器来对这些数据进行分类。")]),k,a(c,{id:"mermaid-119",code:"eJxLL0osyFAIceFSAAJHjWilZxNbnjb3P5uzSylWEyzoBBSM9PfxLzPXDcgvTlV4trjh2dbupzNXwBQ4AxUEODsqvJzZ+3z3FpioC1A0OMxX4WlH2/ONu5GUuwIlnu/ueL56PUgEYq+Crq7C09n7gBY/3bEcyLFTcILYDZZo3fxyyrrnTTufTd3wrHcdWNoZYjNI+snePqC1SHIQv7iA5F4s7HmyYxfI/o7VYDlXLgDk9Fvc"}),w,s("section",M,[s("ol",q,[s("li",z,[s("p",null,[n("一文了解通用行为识别 Action Recognition：了解及分类，"),s("a",L,[n("https://zhuanlan.zhihu.com/p/103566134"),a(l)]),n(),F])]),s("li",O,[s("p",null,[n("Johansson, G. Visual perception of biological motion and a model for its analysis. "),P,n(" 14, 201–211 (1973). "),s("a",S,[n("https://doi.org/10.3758/BF03212378"),a(l)]),n(),K])]),s("li",N,[s("p",null,[n("姿态估计与行为识别（行为检测、行为分类）的区别，"),s("a",Y,[n("https://cloud.tencent.com/developer/article/2029260"),a(l)]),n(),T])]),s("li",V,[s("p",null,[X,n("，"),s("a",R,[n("https://arxiv.org/abs/2204.06806"),a(l)]),n(),I,n(),H])]),s("li",j,[s("p",null,[W,n("，"),s("a",G,[n("https://arxiv.org/abs/2111.08557"),a(l)]),n(),J])]),s("li",Z,[s("p",null,[n("YOLOv7-Pose，GitHub，"),s("a",U,[n("https://github.com/WongKinYiu/yolov7/tree/pose"),a(l)]),n(),Q])]),s("li",$,[s("p",null,[n("YOLOv8，GitHub，"),s("a",ss,[n("https://github.com/ultralytics/ultralytics"),a(l)]),n(),ns])]),s("li",as,[s("p",null,[n("在 Python 中使用机器学习进行人体姿势估计，深度学习与计算机视觉——微信公众号，"),s("a",ls,[n("https://mp.weixin.qq.com/s/D_sTpTp_pkLeO2nrcjgpaA"),a(l)]),n(),ps])])])])])}const rs=r(m,[["render",es],["__file","index.html.vue"]]);export{rs as default};
