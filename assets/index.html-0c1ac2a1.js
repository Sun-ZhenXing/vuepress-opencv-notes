import{_ as c,r as p,o as i,c as D,f as r,b as s,a as l,w as e,d as a,e as o}from"./app-e9203006.js";const d="/vuepress-opencv-notes/assets/2022-11-11-10-04-49-7333ffb0.webp",y={},C=s("h1",{id:"4-深入研究直方图和滤波器",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#4-深入研究直方图和滤波器","aria-hidden":"true"},"#"),a(" 4. 深入研究直方图和滤波器")],-1),m={class:"table-of-contents"},b=o('<p>本章介绍以下主题：</p><ul class="task-list-container"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-0" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-0"> 直方图和直方图均衡</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-1" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-1"> 查找表</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-2" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-2"> 模糊和中位数模糊</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-3" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-3"> Canny 过滤器</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-4" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-4"> 图像 - 颜色均衡</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-5" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-5"> 图像类型之间的转换</label></li></ul><p>我们还会创建一个完整的应用程序，因此本章还将涵盖以下主题：</p><ul class="task-list-container"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-6" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-6"> 生成 CMake 脚本文件</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-7" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-7"> 创建图像用户界面</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-8" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-8"> 计算和绘制直方图</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-9" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-9"> 直方图均衡</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-10" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-10"> Lomography 相机效果</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-11" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-11"> 卡通化效果</label></li></ul><p>该应用程序将帮助我们了解如何从头开始创建整个项目，并理解直方图的概念。</p><h2 id="41-技术要求" tabindex="-1"><a class="header-anchor" href="#41-技术要求" aria-hidden="true">#</a> 4.1 技术要求</h2>',6),u={class:"task-list-container"},k=s("li",{class:"task-list-item"},[s("input",{type:"checkbox",class:"task-list-item-checkbox",id:"task-item-12",checked:"checked",disabled:"disabled"}),s("label",{class:"task-list-item-label",for:"task-item-12"}," 熟悉 C++ 语言")],-1),v={class:"task-list-item"},h=s("input",{type:"checkbox",class:"task-list-item-checkbox",id:"task-item-13",checked:"checked",disabled:"disabled"},null,-1),E={class:"task-list-item-label",for:"task-item-13"},_={href:"https://github.com/PacktPublishing/Learn-OpenCV-4-By-Building-Projects-Second-Edition/tree/master/Chapter_04",target:"_blank",rel:"noopener noreferrer"},g=s("li",{class:"task-list-item"},[s("input",{type:"checkbox",class:"task-list-item-checkbox",id:"task-item-14",checked:"checked",disabled:"disabled"}),s("label",{class:"task-list-item-label",for:"task-item-14"}," 现代操作系统，例如 Ubuntu 20+ 或者 Windows 10+")],-1),A=o(`<h2 id="42-生成-cmake-脚本文件" tabindex="-1"><a class="header-anchor" href="#42-生成-cmake-脚本文件" aria-hidden="true">#</a> 4.2 生成 CMake 脚本文件</h2><p>基础的 <code>CMakeLists.txt</code> 文件：</p><div class="language-cmake line-numbers-mode" data-ext="cmake"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#569CD6;">cmake_minimum_required</span><span style="color:#D4D4D4;">(VERSION 3.0)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">project</span><span style="color:#D4D4D4;">(chapter_4_phototool)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">set</span><span style="color:#D4D4D4;">(CMAKE_CXX_STANDARD 11)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">find_package</span><span style="color:#D4D4D4;">(OpenCV REQUIRED)</span></span>
<span class="line"><span style="color:#569CD6;">message</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;OpenCV version: \${OpenCV_VERSION}&quot;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">include_directories</span><span style="color:#D4D4D4;">(</span><span style="color:#569CD6;">\${OpenCV_INCLUDE_DIRS}</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#569CD6;">link_directories</span><span style="color:#D4D4D4;">(</span><span style="color:#569CD6;">\${OpenCV_LIBRARY_DIRS}</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">add_executable</span><span style="color:#D4D4D4;">(</span><span style="color:#569CD6;">\${PROJECT_NAME}</span><span style="color:#D4D4D4;"> main.cpp)</span></span>
<span class="line"><span style="color:#569CD6;">target_link_libraries</span><span style="color:#D4D4D4;">(</span><span style="color:#569CD6;">\${PROJECT_NAME}</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">\${OpenCV_LIBS}</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>本文的示例使用 C++ 11 标准。</p><h2 id="43-创建图形用户界面" tabindex="-1"><a class="header-anchor" href="#43-创建图形用户界面" aria-hidden="true">#</a> 4.3 创建图形用户界面</h2><p>我们将使用基于 Qt 的 GUI，应用程序接收一个输入参数来加载要处理的图像。此外我们还有四个按钮：</p><ul><li>Show histogram（展示直方图）</li><li>Equalize histogram（直方图均衡）</li><li>Lomography effect（LOMO 效果）</li><li>Cartoonize effect（卡通效果）</li></ul><p><img src="`+d+`" alt="" loading="lazy"></p><p>OpenCV 3.0 开始就包含了一个新的命令行解析器 <code>CommandLineParser</code>，首先我们先编写一个命令行解析图片路径的程序：</p><div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#C586C0;">#include</span><span style="color:#569CD6;"> </span><span style="color:#CE9178;">&lt;opencv2/core/utility.hpp&gt;</span></span>
<span class="line"><span style="color:#C586C0;">#include</span><span style="color:#569CD6;"> </span><span style="color:#CE9178;">&lt;opencv2/highgui.hpp&gt;</span></span>
<span class="line"><span style="color:#C586C0;">#include</span><span style="color:#569CD6;"> </span><span style="color:#CE9178;">&lt;opencv2/imgproc.hpp&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C586C0;">#include</span><span style="color:#569CD6;"> </span><span style="color:#CE9178;">&lt;iostream&gt;</span></span>
<span class="line"><span style="color:#C586C0;">#include</span><span style="color:#569CD6;"> </span><span style="color:#CE9178;">&lt;string&gt;</span></span>
<span class="line"><span style="color:#C586C0;">#include</span><span style="color:#569CD6;"> </span><span style="color:#CE9178;">&lt;vector&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">char</span><span style="color:#D4D4D4;">* keys = {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#CE9178;">&quot;{help h usage ? |      | print this message   }&quot;</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#CE9178;">&quot;{@image         |&lt;none&gt;| image to process     }&quot;</span><span style="color:#D4D4D4;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#4EC9B0;">cv</span><span style="color:#D4D4D4;">::Mat img;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">void</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">showHistoCallback</span><span style="color:#D4D4D4;">(</span><span style="color:#569CD6;">int</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">state</span><span style="color:#D4D4D4;">, </span><span style="color:#569CD6;">void*</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">userData</span><span style="color:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">void</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">equalizeCallback</span><span style="color:#D4D4D4;">(</span><span style="color:#569CD6;">int</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">state</span><span style="color:#D4D4D4;">, </span><span style="color:#569CD6;">void*</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">userData</span><span style="color:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">void</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">lomoCallback</span><span style="color:#D4D4D4;">(</span><span style="color:#569CD6;">int</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">state</span><span style="color:#D4D4D4;">, </span><span style="color:#569CD6;">void*</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">userData</span><span style="color:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">void</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">cartoonCallback</span><span style="color:#D4D4D4;">(</span><span style="color:#569CD6;">int</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">state</span><span style="color:#D4D4D4;">, </span><span style="color:#569CD6;">void*</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">userData</span><span style="color:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">int</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">main</span><span style="color:#D4D4D4;">(</span><span style="color:#569CD6;">int</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">argc</span><span style="color:#D4D4D4;">, </span><span style="color:#569CD6;">char**</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">argv</span><span style="color:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#4EC9B0;">cv</span><span style="color:#D4D4D4;">::CommandLineParser </span><span style="color:#DCDCAA;">parser</span><span style="color:#D4D4D4;">(argc, argv, keys);</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">parser</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">about</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;This program shows how to read an image from a file.&quot;</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">if</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">parser</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">has</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;help&quot;</span><span style="color:#D4D4D4;">)) {</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#9CDCFE;">parser</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">printMessage</span><span style="color:#D4D4D4;">();</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#D4D4D4;">    }</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#4EC9B0;">std</span><span style="color:#D4D4D4;">::string image_path = </span><span style="color:#9CDCFE;">parser</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">get</span><span style="color:#D4D4D4;">&lt;</span><span style="color:#4EC9B0;">std</span><span style="color:#D4D4D4;">::string&gt;(</span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">if</span><span style="color:#D4D4D4;"> (!</span><span style="color:#9CDCFE;">parser</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">check</span><span style="color:#D4D4D4;">()) {</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#9CDCFE;">parser</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">printErrors</span><span style="color:#D4D4D4;">();</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#D4D4D4;">    }</span></span>
<span class="line"><span style="color:#D4D4D4;">    img = </span><span style="color:#4EC9B0;">cv</span><span style="color:#D4D4D4;">::</span><span style="color:#DCDCAA;">imread</span><span style="color:#D4D4D4;">(image_path, </span><span style="color:#4EC9B0;">cv</span><span style="color:#D4D4D4;">::IMREAD_COLOR);</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">if</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">img</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">empty</span><span style="color:#D4D4D4;">()) {</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#4EC9B0;">std</span><span style="color:#D4D4D4;">::cout &lt;&lt; </span><span style="color:#CE9178;">&quot;Could not read the image: &quot;</span><span style="color:#D4D4D4;"> &lt;&lt; image_path &lt;&lt; </span><span style="color:#4EC9B0;">std</span><span style="color:#D4D4D4;">::endl;</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> -</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#D4D4D4;">    }</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#4EC9B0;">cv</span><span style="color:#D4D4D4;">::</span><span style="color:#DCDCAA;">namedWindow</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;Input&quot;</span><span style="color:#D4D4D4;">, </span><span style="color:#4EC9B0;">cv</span><span style="color:#D4D4D4;">::WINDOW_AUTOSIZE);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#4EC9B0;">cv</span><span style="color:#D4D4D4;">::</span><span style="color:#DCDCAA;">createButton</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;Show histogram&quot;</span><span style="color:#D4D4D4;">, showHistoCallback, </span><span style="color:#569CD6;">nullptr</span><span style="color:#D4D4D4;">, </span><span style="color:#4EC9B0;">cv</span><span style="color:#D4D4D4;">::QT_PUSH_BUTTON, </span><span style="color:#569CD6;">false</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#4EC9B0;">cv</span><span style="color:#D4D4D4;">::</span><span style="color:#DCDCAA;">createButton</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;Equalize histogram&quot;</span><span style="color:#D4D4D4;">, equalizeCallback, </span><span style="color:#569CD6;">nullptr</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#4EC9B0;">cv</span><span style="color:#D4D4D4;">::</span><span style="color:#DCDCAA;">createButton</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;Lomography effect&quot;</span><span style="color:#D4D4D4;">, lomoCallback, </span><span style="color:#569CD6;">nullptr</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#4EC9B0;">cv</span><span style="color:#D4D4D4;">::</span><span style="color:#DCDCAA;">createButton</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;Cartoonize effect&quot;</span><span style="color:#D4D4D4;">, cartoonCallback, </span><span style="color:#569CD6;">nullptr</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#4EC9B0;">cv</span><span style="color:#D4D4D4;">::</span><span style="color:#DCDCAA;">imshow</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;Input&quot;</span><span style="color:#D4D4D4;">, img);</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#4EC9B0;">cv</span><span style="color:#D4D4D4;">::</span><span style="color:#DCDCAA;">waitKey</span><span style="color:#D4D4D4;">(</span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我们有四个未完成的函数，下面我们将实现这四个函数。</p><h2 id="44-绘制直方图" tabindex="-1"><a class="header-anchor" href="#44-绘制直方图" aria-hidden="true">#</a> 4.4 绘制直方图</h2><div class="language-cpp" data-ext="cpp"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"></span>
<span class="line"></span></code></pre></div>`,13);function f(x,B){const n=p("router-link"),t=p("ExternalLinkIcon");return i(),D("div",null,[C,r(" markdownlint-disable MD045 "),s("nav",m,[s("ul",null,[s("li",null,[l(n,{to:"#41-技术要求"},{default:e(()=>[a("4.1 技术要求")]),_:1})]),s("li",null,[l(n,{to:"#42-生成-cmake-脚本文件"},{default:e(()=>[a("4.2 生成 CMake 脚本文件")]),_:1})]),s("li",null,[l(n,{to:"#43-创建图形用户界面"},{default:e(()=>[a("4.3 创建图形用户界面")]),_:1})]),s("li",null,[l(n,{to:"#44-绘制直方图"},{default:e(()=>[a("4.4 绘制直方图")]),_:1})])])]),b,s("ul",u,[k,s("li",v,[h,s("label",E,[s("a",_,[a("本章代码"),l(t)])])]),g]),A])}const O=c(y,[["render",f],["__file","index.html.vue"]]);export{O as default};
