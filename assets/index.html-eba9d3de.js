import{_ as o,M as i,p as c,q as p,R as a,t as e,N as t,Q as d,a1 as s}from"./framework-8980b429.js";const r={},k=s('<h1 id="_6-学习对象分类" tabindex="-1"><a class="header-anchor" href="#_6-学习对象分类" aria-hidden="true">#</a> 6. 学习对象分类</h1><p>本章介绍机器学习的基本概念，以便对不同的图像进行分类。对于检测到的对象，我们使用机器学习算法提取被分类对象的不同特征。基于上一章的分割算法，创建 GUI 程序显示分类结果。</p><p>本章介绍以下主题：</p><ul class="task-list-container"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-0" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-0"> 机器学习概念介绍</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-1" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-1"> 常见机器学习算法和过程</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-2" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-2"> 特征提取</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-3" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-3"> 支持向量机(SVM)</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-4" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-4"> 训练和预测</label></li></ul><h2 id="_6-1-技术要求" tabindex="-1"><a class="header-anchor" href="#_6-1-技术要求" aria-hidden="true">#</a> 6.1 技术要求</h2>',5),h={class:"task-list-container"},u=a("li",{class:"task-list-item"},[a("input",{type:"checkbox",class:"task-list-item-checkbox",id:"task-item-5",checked:"checked",disabled:"disabled"}),a("label",{class:"task-list-item-label",for:"task-item-5"}," 熟悉 C++ 语言")],-1),b={class:"task-list-item"},m=a("input",{type:"checkbox",class:"task-list-item-checkbox",id:"task-item-6",checked:"checked",disabled:"disabled"},null,-1),_={class:"task-list-item-label",for:"task-item-6"},x={href:"https://github.com/PacktPublishing/Learn-OpenCV-4-By-Building-Projects-Second-Edition/tree/master/Chapter_06",target:"_blank",rel:"noopener noreferrer"},f=a("li",{class:"task-list-item"},[a("input",{type:"checkbox",class:"task-list-item-checkbox",id:"task-item-7",checked:"checked",disabled:"disabled"}),a("label",{class:"task-list-item-label",for:"task-item-7"}," 现代操作系统，例如 Ubuntu 20+ 或者 Windows 10+")],-1),y=s('<h2 id="_6-2-机器学习概念介绍" tabindex="-1"><a class="header-anchor" href="#_6-2-机器学习概念介绍" aria-hidden="true">#</a> 6.2 机器学习概念介绍</h2><div class="hint-container tip"><p class="hint-container-title">学习提示</p><p>笔记不会记录机器学习有关概念，如果要系统学习建议从机器学习原理部分系统化学习。</p></div><p>下面我们将使用监督学习和分类算法，这需要使用带有标签的数据集来训练模型。</p><p>下面是一些比较流行的方法：</p><ul><li>支持向量机（SVM）</li><li>人工神经网络（ANN）</li><li>聚类</li><li>K-最近邻（KNN）</li><li>决策树</li><li>深度学习</li></ul><p>本章我们将解释支持向量机。</p><h3 id="opencv-机器学习算法" tabindex="-1"><a class="header-anchor" href="#opencv-机器学习算法" aria-hidden="true">#</a> OpenCV 机器学习算法</h3><p>OpenCV 实现了其中八种机器学习算法，所有这些算法都继承自 <code>StatModel</code> 类，这八种算法是:</p><ul><li>人工神经网络</li><li>随机树</li><li>期望最大化</li><li>K-最近邻</li><li>逻辑回归</li><li>朴素贝叶斯分类器</li><li>支持向量机</li><li>随机梯度下降 SVM</li></ul>',9),S=s(`<p><code>StatModel</code> 是 SVM 或 ANN 等机器学习类的基类，提供所有预测和读写等功能。<code>StatModel</code> 基本上是一个虚拟的类，其两个最重要的函数 <code>train()</code> 和 <code>predict()</code>。<code>train()</code> 方法是负责训练数据集学习模型参数的主要方法，存在下面几种声明方式：</p><div class="language-cpp" data-ext="cpp"><pre class="language-cpp"><code><span class="token keyword">virtual</span> <span class="token keyword">bool</span> <span class="token function">train</span><span class="token punctuation">(</span><span class="token keyword">const</span> Ptr<span class="token operator">&lt;</span>TrainData<span class="token operator">&gt;</span><span class="token operator">&amp;</span> trainData<span class="token punctuation">,</span> <span class="token keyword">int</span> flag<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">virtual</span> <span class="token keyword">bool</span> <span class="token function">train</span><span class="token punctuation">(</span>InputArray samples<span class="token punctuation">,</span> <span class="token keyword">int</span> layout<span class="token punctuation">,</span> InputArray responses<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">template</span><span class="token operator">&lt;</span><span class="token keyword">typename</span> <span class="token class-name">_Tp</span><span class="token operator">&gt;</span> <span class="token keyword">static</span> Ptr<span class="token operator">&lt;</span>_Tp<span class="token operator">&gt;</span> <span class="token function">train</span><span class="token punctuation">(</span><span class="token keyword">const</span> Ptr<span class="token operator">&lt;</span>TrainData<span class="token operator">&gt;</span><span class="token operator">&amp;</span> data<span class="token punctuation">,</span> <span class="token keyword">int</span> flags<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span>
</code></pre></div><p>其参数含义：</p><ul><li><code>trainData</code>：从 <code>TrainData</code> 类加载或创建的训练数据</li><li><code>samples</code>：一系列训练样本</li><li><code>layout</code>：<code>ROW_SAMPLE</code> 表示训练样本是矩阵行，<code>COL_SAMPLE</code> 表示矩阵列</li><li><code>responses</code>：与样本数据相关的响应向量</li><li><code>flags</code>：由每个方法定义的可选标志</li></ul><p>其中最后一个方法创建并训练一个 <code>_Tp</code> 类型的模型，</p><p><code>predict()</code> 方法只有一种调用方式：</p><div class="language-cpp" data-ext="cpp"><pre class="language-cpp"><code><span class="token keyword">float</span> <span class="token class-name">StatModel</span><span class="token double-colon punctuation">::</span><span class="token function">predict</span><span class="token punctuation">(</span>InputArray samples<span class="token punctuation">,</span> OutputArray results<span class="token operator">=</span><span class="token function">noArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">int</span> flag<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>该预测函数具有以下参数：</p><ul><li><code>samples</code>：用于预测模型结果的输入样本，可以包含任意数量的数据</li></ul>`,9),M=s('<h2 id="_6-3-计算机视觉和机器学习工作流程" tabindex="-1"><a class="header-anchor" href="#_6-3-计算机视觉和机器学习工作流程" aria-hidden="true">#</a> 6.3 计算机视觉和机器学习工作流程</h2><p>具备机器学习的计算机视觉应用具有的共同基本结构，这种结构分为不同的步骤：</p><ol><li>预处理 <ul><li>几乎所有的计算机视觉应用程序都是以预处理开始</li><li>包括去除光和噪声、滤波、模糊等</li></ul></li><li>分割 <ul><li>提取图像中的 ROI（感兴趣区域）</li><li>将每个区域隔离为感兴趣的唯一对象</li></ul></li><li>特征提取 <ul><li>提取对象的特征，特征通常是特征向量</li><li>特征用于描述对象，可以是区域、轮廓、纹理、像素等</li></ul></li><li>分类结果 <ul><li>将数据输入机器学习模型，预测分类或回归的结果</li></ul></li><li>后处理 <ul><li>针对模型预测结果进行处理，获取所需的最终数据</li></ul></li></ol>',3),V={class:"hint-container info"},g=a("p",{class:"hint-container-title"},"OpenCV 机器学习官方文档",-1),v={href:"https://docs.opencv.org/master/dd/ded/group__ml.html",target:"_blank",rel:"noopener noreferrer"},A=s('<h2 id="_6-4-自动对象检查分类示例" tabindex="-1"><a class="header-anchor" href="#_6-4-自动对象检查分类示例" aria-hidden="true">#</a> 6.4 自动对象检查分类示例</h2><p>执行步骤:</p><ol><li>对于每个输入图像 <ul><li>预处理图像</li><li>分隔图像</li></ul></li><li>对于图像中的每隔对象 <ul><li>特征提取</li><li>使用相应的标签将这些提取出的特征添加到训练特征向量中</li></ul></li><li>创建 SVM 模型</li><li>使用训练特征向量训练 SVM 模型</li><li>预处理输入图像以便对每个被分割的对象进行分类</li><li>分割输入的图像</li><li>对于检测到的每个对象 <ul><li>提取特征</li><li>用 SVM 预测它</li><li>建模</li><li>在输出图像中绘制结果</li></ul></li></ol><h3 id="_6-4-1-特征提取" tabindex="-1"><a class="header-anchor" href="#_6-4-1-特征提取" aria-hidden="true">#</a> 6.4.1 特征提取</h3><h3 id="_6-4-2-训练-svm-模型" tabindex="-1"><a class="header-anchor" href="#_6-4-2-训练-svm-模型" aria-hidden="true">#</a> 6.4.2 训练 SVM 模型</h3><h3 id="_6-4-3-输入图像预测" tabindex="-1"><a class="header-anchor" href="#_6-4-3-输入图像预测" aria-hidden="true">#</a> 6.4.3 输入图像预测</h3><h2 id="_6-5-总结" tabindex="-1"><a class="header-anchor" href="#_6-5-总结" aria-hidden="true">#</a> 6.5 总结</h2><p>本章通过一个监督学习示例，使用 SVM 创建对象分类模型。我们必须能够准确选择能描述对象的特征，并且尽可能提供最佳的预测模型。</p>',8);function w(N,C){const n=i("ExternalLinkIcon"),l=i("Mermaid");return c(),p("div",null,[k,a("ul",h,[u,a("li",b,[m,a("label",_,[a("a",x,[e("本章代码"),t(n)])])]),f]),y,t(l,{id:"mermaid-153",code:"eJxtkE0KwjAQRveeInQhuugFshBa7comSCtuRCTUmAZSI0kQvL1pp5bxJ7t535swM8qJe0vKakbiy4yyToe2WxyT5kHpVCenJUnT1SDVQQRmL9KMUmconRgWM87PrNwhbSS9NCebvZPSoxQAhAVDQcEAbrkUTvqAojcCobRK+6CbSqoIvbY3pP6G0MSt64TJxVP6tRExuGrpUN/fHFrrAx4zVhEPq8Mq0yVyaz+mHmr4ovq+AoD+oxeIR38q"}),S,d(" TODO "),M,t(l,{id:"mermaid-289",code:"eJxLL0osyFAIceFSAAJHjWill4tani5peT6hTSlWU0FX1w4s4QSUeNrR9rRzE7KoM1D0eefOp/san/VPeNo/DVnOBSj3bM6upzNXPF277MnOBUDdzzfuRlbhCjJzQh/cMi4A7Ko16Q=="}),a("div",V,[g,a("p",null,[e("有关机器学习模块的详细问题，阅读 "),a("a",v,[e("OpenCV ML 官方文档"),t(n)]),e("。")])]),A])}const P=o(r,[["render",w],["__file","index.html.vue"]]);export{P as default};
