import{_ as p,r,o as D,c as t,a as i,w as n,d as l,e as o,b as s}from"./app-e9203006.js";const y={},d=o('<h1 id="opencv-使用-cmake-构建跨平台应用" tabindex="-1"><a class="header-anchor" href="#opencv-使用-cmake-构建跨平台应用" aria-hidden="true">#</a> OpenCV 使用 CMake 构建跨平台应用</h1><h2 id="1-定义标准化的工具" tabindex="-1"><a class="header-anchor" href="#1-定义标准化的工具" aria-hidden="true">#</a> 1. 定义标准化的工具</h2><p>首先，我们习惯上定义一个公共头文件 <code>common.h</code>，包含一些和系统有关的函数和宏。</p><p>考虑到 Windows 臭名昭著的乱码和字符集问题，我们使用 <code>wchar_t</code> 类型来解决，其中：</p><ul><li>宏 <code>DLL_EXPORT</code> 表示这个函数被导出</li><li>宏 <code>S</code> 表示将字符串常量转换为当前系统上的特定类型字符串</li><li>类型 <code>path_t</code> 表示当前系统上的字符指针类型</li><li>函数 <code>toStr()</code> 则表示将当前系统上的特定类型字符串转换为 <code>std::string</code></li></ul><p>下面是头文件和实现函数：</p>',6),C=s("div",{class:"language-cpp line-numbers-mode","data-ext":"cpp"},[s("pre",{class:"shiki dark-plus",style:{"background-color":"#1E1E1E"},tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#6A9955"}},"// common.h")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#C586C0"}},"#ifndef"),s("span",{style:{color:"#569CD6"}}," COMMON_H")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#C586C0"}},"#define"),s("span",{style:{color:"#569CD6"}}," COMMON_H")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#C586C0"}},"#include"),s("span",{style:{color:"#569CD6"}}," "),s("span",{style:{color:"#CE9178"}},"<string>")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#C586C0"}},"#if"),s("span",{style:{color:"#569CD6"}}," _WIN32")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#C586C0"}},"#define"),s("span",{style:{color:"#569CD6"}},' DLL_EXPORT extern "C" __declspec(dllexport)')]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#C586C0"}},"#define"),s("span",{style:{color:"#569CD6"}}," S("),s("span",{style:{color:"#9CDCFE"}},"t"),s("span",{style:{color:"#569CD6"}},") L"),s("span",{style:{color:"#9CDCFE"}},"##t")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#C586C0"}},"#include"),s("span",{style:{color:"#569CD6"}}," "),s("span",{style:{color:"#CE9178"}},"<windows.h>")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#569CD6"}},"typedef"),s("span",{style:{color:"#D4D4D4"}}," "),s("span",{style:{color:"#569CD6"}},"wchar_t"),s("span",{style:{color:"#D4D4D4"}},"* "),s("span",{style:{color:"#4EC9B0"}},"path_t"),s("span",{style:{color:"#D4D4D4"}},";")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#4EC9B0"}},"std"),s("span",{style:{color:"#D4D4D4"}},"::"),s("span",{style:{color:"#4EC9B0"}},"string"),s("span",{style:{color:"#D4D4D4"}}," "),s("span",{style:{color:"#DCDCAA"}},"toStr"),s("span",{style:{color:"#D4D4D4"}},"("),s("span",{style:{color:"#4EC9B0"}},"LPCWSTR"),s("span",{style:{color:"#D4D4D4"}}," "),s("span",{style:{color:"#9CDCFE"}},"pwszSrc"),s("span",{style:{color:"#D4D4D4"}},");")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#C586C0"}},"#else")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#C586C0"}},"#define"),s("span",{style:{color:"#569CD6"}},' DLL_EXPORT extern "C"')]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#C586C0"}},"#define"),s("span",{style:{color:"#569CD6"}}," S("),s("span",{style:{color:"#9CDCFE"}},"t"),s("span",{style:{color:"#569CD6"}},") t")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#569CD6"}},"typedef"),s("span",{style:{color:"#D4D4D4"}}," "),s("span",{style:{color:"#569CD6"}},"char"),s("span",{style:{color:"#D4D4D4"}},"* "),s("span",{style:{color:"#4EC9B0"}},"path_t"),s("span",{style:{color:"#D4D4D4"}},";")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#4EC9B0"}},"std"),s("span",{style:{color:"#D4D4D4"}},"::"),s("span",{style:{color:"#4EC9B0"}},"string"),s("span",{style:{color:"#D4D4D4"}}," "),s("span",{style:{color:"#DCDCAA"}},"toStr"),s("span",{style:{color:"#D4D4D4"}},"("),s("span",{style:{color:"#569CD6"}},"const"),s("span",{style:{color:"#D4D4D4"}}," "),s("span",{style:{color:"#4EC9B0"}},"path_t"),s("span",{style:{color:"#D4D4D4"}}," "),s("span",{style:{color:"#9CDCFE"}},"path"),s("span",{style:{color:"#D4D4D4"}},");")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#C586C0"}},"#endif"),s("span",{style:{color:"#6A9955"}},"  // _WIN32")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#C586C0"}},"#endif"),s("span",{style:{color:"#6A9955"}},"  // COMMON_H")]),l(`
`),s("span",{class:"line"})])]),s("div",{class:"line-numbers","aria-hidden":"true"},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1),u=s("div",{class:"language-cpp line-numbers-mode","data-ext":"cpp"},[s("pre",{class:"shiki dark-plus",style:{"background-color":"#1E1E1E"},tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#6A9955"}},"// common.cpp")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#C586C0"}},"#include"),s("span",{style:{color:"#569CD6"}}," "),s("span",{style:{color:"#CE9178"}},'"common.h"')]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#C586C0"}},"#if"),s("span",{style:{color:"#569CD6"}}," _WIN32")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#4EC9B0"}},"std"),s("span",{style:{color:"#D4D4D4"}},"::"),s("span",{style:{color:"#4EC9B0"}},"string"),s("span",{style:{color:"#D4D4D4"}}," "),s("span",{style:{color:"#DCDCAA"}},"toStr"),s("span",{style:{color:"#D4D4D4"}},"("),s("span",{style:{color:"#4EC9B0"}},"LPCWSTR"),s("span",{style:{color:"#D4D4D4"}}," "),s("span",{style:{color:"#9CDCFE"}},"pwszSrc"),s("span",{style:{color:"#D4D4D4"}},") {")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#D4D4D4"}},"    "),s("span",{style:{color:"#569CD6"}},"int"),s("span",{style:{color:"#D4D4D4"}}," nLen = "),s("span",{style:{color:"#DCDCAA"}},"WideCharToMultiByte"),s("span",{style:{color:"#D4D4D4"}},"(CP_ACP, "),s("span",{style:{color:"#B5CEA8"}},"0"),s("span",{style:{color:"#D4D4D4"}},", pwszSrc, -"),s("span",{style:{color:"#B5CEA8"}},"1"),s("span",{style:{color:"#D4D4D4"}},", "),s("span",{style:{color:"#569CD6"}},"NULL"),s("span",{style:{color:"#D4D4D4"}},", "),s("span",{style:{color:"#B5CEA8"}},"0"),s("span",{style:{color:"#D4D4D4"}},", "),s("span",{style:{color:"#569CD6"}},"NULL"),s("span",{style:{color:"#D4D4D4"}},", "),s("span",{style:{color:"#569CD6"}},"NULL"),s("span",{style:{color:"#D4D4D4"}},");")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#D4D4D4"}},"    "),s("span",{style:{color:"#C586C0"}},"if"),s("span",{style:{color:"#D4D4D4"}}," (nLen <= "),s("span",{style:{color:"#B5CEA8"}},"0"),s("span",{style:{color:"#D4D4D4"}},")")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#D4D4D4"}},"        "),s("span",{style:{color:"#C586C0"}},"return"),s("span",{style:{color:"#D4D4D4"}}," "),s("span",{style:{color:"#4EC9B0"}},"std"),s("span",{style:{color:"#D4D4D4"}},"::"),s("span",{style:{color:"#DCDCAA"}},"string"),s("span",{style:{color:"#D4D4D4"}},"("),s("span",{style:{color:"#CE9178"}},'""'),s("span",{style:{color:"#D4D4D4"}},");")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#D4D4D4"}},"    "),s("span",{style:{color:"#569CD6"}},"char"),s("span",{style:{color:"#D4D4D4"}},"* pszDst = "),s("span",{style:{color:"#C586C0"}},"new"),s("span",{style:{color:"#D4D4D4"}}," "),s("span",{style:{color:"#569CD6"}},"char"),s("span",{style:{color:"#D4D4D4"}},"[nLen];")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#D4D4D4"}},"    "),s("span",{style:{color:"#C586C0"}},"if"),s("span",{style:{color:"#D4D4D4"}}," ("),s("span",{style:{color:"#569CD6"}},"NULL"),s("span",{style:{color:"#D4D4D4"}}," == pszDst)")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#D4D4D4"}},"        "),s("span",{style:{color:"#C586C0"}},"return"),s("span",{style:{color:"#D4D4D4"}}," "),s("span",{style:{color:"#4EC9B0"}},"std"),s("span",{style:{color:"#D4D4D4"}},"::"),s("span",{style:{color:"#DCDCAA"}},"string"),s("span",{style:{color:"#D4D4D4"}},"("),s("span",{style:{color:"#CE9178"}},'""'),s("span",{style:{color:"#D4D4D4"}},");")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#D4D4D4"}},"    "),s("span",{style:{color:"#DCDCAA"}},"WideCharToMultiByte"),s("span",{style:{color:"#D4D4D4"}},"(CP_ACP, "),s("span",{style:{color:"#B5CEA8"}},"0"),s("span",{style:{color:"#D4D4D4"}},", pwszSrc, -"),s("span",{style:{color:"#B5CEA8"}},"1"),s("span",{style:{color:"#D4D4D4"}},", pszDst, nLen, "),s("span",{style:{color:"#569CD6"}},"NULL"),s("span",{style:{color:"#D4D4D4"}},", "),s("span",{style:{color:"#569CD6"}},"NULL"),s("span",{style:{color:"#D4D4D4"}},");")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#D4D4D4"}},"    "),s("span",{style:{color:"#9CDCFE"}},"pszDst"),s("span",{style:{color:"#D4D4D4"}},"[nLen - "),s("span",{style:{color:"#B5CEA8"}},"1"),s("span",{style:{color:"#D4D4D4"}},"] = "),s("span",{style:{color:"#B5CEA8"}},"0"),s("span",{style:{color:"#D4D4D4"}},";")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#D4D4D4"}},"    "),s("span",{style:{color:"#4EC9B0"}},"std"),s("span",{style:{color:"#D4D4D4"}},"::string "),s("span",{style:{color:"#DCDCAA"}},"strTemp"),s("span",{style:{color:"#D4D4D4"}},"(pszDst);")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#D4D4D4"}},"    "),s("span",{style:{color:"#C586C0"}},"delete[]"),s("span",{style:{color:"#D4D4D4"}}," pszDst;")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#D4D4D4"}},"    "),s("span",{style:{color:"#C586C0"}},"return"),s("span",{style:{color:"#D4D4D4"}}," strTemp;")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#D4D4D4"}},"}")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#C586C0"}},"#else")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#4EC9B0"}},"std"),s("span",{style:{color:"#D4D4D4"}},"::"),s("span",{style:{color:"#4EC9B0"}},"string"),s("span",{style:{color:"#D4D4D4"}}," "),s("span",{style:{color:"#DCDCAA"}},"toStr"),s("span",{style:{color:"#D4D4D4"}},"("),s("span",{style:{color:"#569CD6"}},"const"),s("span",{style:{color:"#D4D4D4"}}," "),s("span",{style:{color:"#4EC9B0"}},"path_t"),s("span",{style:{color:"#D4D4D4"}}," "),s("span",{style:{color:"#9CDCFE"}},"path"),s("span",{style:{color:"#D4D4D4"}},") {")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#D4D4D4"}},"    "),s("span",{style:{color:"#4EC9B0"}},"std"),s("span",{style:{color:"#D4D4D4"}},"::string s = path;")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#D4D4D4"}},"    "),s("span",{style:{color:"#C586C0"}},"return"),s("span",{style:{color:"#D4D4D4"}}," s;")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#D4D4D4"}},"}")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#C586C0"}},"#endif"),s("span",{style:{color:"#6A9955"}},"  // _WIN32")]),l(`
`),s("span",{class:"line"})])]),s("div",{class:"line-numbers","aria-hidden":"true"},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1),v=o(`<h2 id="2-cmake-定义" tabindex="-1"><a class="header-anchor" href="#2-cmake-定义" aria-hidden="true">#</a> 2. CMake 定义</h2><p>这里我们以 YOLO 举例，假设我的项目里有三个编译目标（<code>yolov3</code>、<code>yolov5</code> 和 <code>yolov7</code>）：</p><div class="language-cmake line-numbers-mode" data-ext="cmake"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#569CD6;">cmake_minimum_required</span><span style="color:#D4D4D4;">(VERSION 3.10)</span></span>
<span class="line"><span style="color:#569CD6;">project</span><span style="color:#D4D4D4;">(yolo-collections)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">set</span><span style="color:#D4D4D4;">(CMAKE_CXX_STANDARD 17)</span></span>
<span class="line"><span style="color:#569CD6;">set</span><span style="color:#D4D4D4;">(CMAKE_CXX_STANDARD_REQUIRED </span><span style="color:#569CD6;">ON</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#569CD6;">set</span><span style="color:#D4D4D4;">(CMAKE_CXX_EXTENSIONS </span><span style="color:#569CD6;">OFF</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">find_package</span><span style="color:#D4D4D4;">(OpenCV REQUIRED)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">include_directories</span><span style="color:#D4D4D4;">(</span><span style="color:#569CD6;">\${OpenCV_INCLUDE_DIRS}</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">link_directories</span><span style="color:#D4D4D4;">(</span><span style="color:#569CD6;">\${OpenCV_LIBRARY_DIRS}</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">macro</span><span style="color:#D4D4D4;">(create_target </span><span style="color:#569CD6;">name</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#569CD6;">    add_executable</span><span style="color:#D4D4D4;">(</span><span style="color:#569CD6;">\${name}</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&quot;src/\${name}.cpp&quot;</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&quot;src/common.cpp&quot;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#569CD6;">    target_link_libraries</span><span style="color:#D4D4D4;">(</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#569CD6;">\${name}</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#569CD6;">\${OpenCV_LIBS}</span></span>
<span class="line"><span style="color:#D4D4D4;">    )</span></span>
<span class="line"><span style="color:#569CD6;">endmacro</span><span style="color:#D4D4D4;">(create_target </span><span style="color:#569CD6;">name</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">create_target(yolov3)</span></span>
<span class="line"><span style="color:#D4D4D4;">create_target(yolov5)</span></span>
<span class="line"><span style="color:#D4D4D4;">create_target(yolov7)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="3-构建项目" tabindex="-1"><a class="header-anchor" href="#3-构建项目" aria-hidden="true">#</a> 3. 构建项目</h2><h3 id="31-windows-下编译构建" tabindex="-1"><a class="header-anchor" href="#31-windows-下编译构建" aria-hidden="true">#</a> 3.1 Windows 下编译构建</h3><p>Windows 使用 CMake 可以采用几种不同的方式：</p><ol><li>创建 Visual Studio 项目，在 VS 中构建，详情略</li><li>使用 CMake-GUI 编译，下面是步骤</li><li>使用 CMake 命令行工具</li></ol><p>下面是使用 CMake-GUI 的步骤：</p><ol><li>配置 <code>source</code> 文件夹和 <code>build</code> 文件夹</li><li>点击 <strong>配置</strong>（Configure）</li><li>点击 <strong>生成</strong>（Generate）</li></ol><div class="hint-container warning"><p class="hint-container-title">使用 MinGW</p><p>在使用 CMake 推荐使用 Visual Studio 作为后端，MinGW 在 Windows 上构建项目并不被官方支持，因此有很多项目无法成功构建。在本站下面的项目都不会使用 MinGW 构建，如果需要请自行尝试，遇到问题也无法提供解答。</p></div><p>下面举例使用 VS 2019 作为后端，用于生成 64 位程序的命令：</p><div class="language-bash" data-ext="sh"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#DCDCAA;">cmake</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">-B</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">./build</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">-G</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&quot;Visual Studio 16 2019&quot;</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">-T</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">host=x64</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">-A</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">x64</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">.</span></span>
<span class="line"><span style="color:#DCDCAA;">cmake</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">--build</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">./build</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">--config</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">Release</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">--target</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">ALL_BUILD</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">-j</span><span style="color:#D4D4D4;"> </span><span style="color:#B5CEA8;">4</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">--</span></span>
<span class="line"></span></code></pre></div><h3 id="32-linux--mac-系统编译构建" tabindex="-1"><a class="header-anchor" href="#32-linux--mac-系统编译构建" aria-hidden="true">#</a> 3.2 Linux / Mac 系统编译构建</h3><p>直接使用 CMake 即可：</p><div class="language-bash" data-ext="sh"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#DCDCAA;">mkdir</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">-p</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">build</span></span>
<span class="line"><span style="color:#DCDCAA;">cd</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">build</span></span>
<span class="line"><span style="color:#DCDCAA;">cmake</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">../src</span></span>
<span class="line"><span style="color:#DCDCAA;">make</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">-j</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">$(</span><span style="color:#DCDCAA;">nproc</span><span style="color:#CE9178;">)</span></span>
<span class="line"></span></code></pre></div><p>如果不想每次都创建 <code>build/</code> 文件夹，可以在 CMake 中指定编译目标输出路径：</p><div class="language-cmake" data-ext="cmake"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#569CD6;">set</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">CMAKE_RUNTIME_OUTPUT_DIRECTORY</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">\${CMAKE_CURRENT_SOURCE_DIR}</span><span style="color:#D4D4D4;">/build)</span></span>
<span class="line"></span></code></pre></div>`,17);function m(b,E){const c=r("CodeTabs");return D(),t("div",null,[d,i(c,{id:"37",data:[{id:"h"},{id:"cpp"}]},{title0:n(({value:a,isActive:e})=>[l("h")]),title1:n(({value:a,isActive:e})=>[l("cpp")]),tab0:n(({value:a,isActive:e})=>[C]),tab1:n(({value:a,isActive:e})=>[u]),_:1}),v])}const _=p(y,[["render",m],["__file","index.html.vue"]]);export{_ as default};
