import{_ as l,r as a,o as i,c as u,a as n,b as s,d as t,w as k,e}from"./app.228bb3ee.js";const p="/vuepress-opencv-notes/assets/2022-11-10-16-28-22.036cadac.webp",d="/vuepress-opencv-notes/assets/2022-11-10-16-36-45.1cfc3264.webp",r={},b=e('<h1 id="_3-学习图形用户界面" tabindex="-1"><a class="header-anchor" href="#_3-学习图形用户界面" aria-hidden="true">#</a> 3. 学习图形用户界面</h1><p>多数情况下，我们需要使用图形界面来显示我们的图像结果，并与用户交互。OpenCV 提供了基本的用户界面，以便创建应用程序和原型，为了更好地理解用户图形界面的工作原理，我们将创建一个名为 PhotoTool 的小应用程序，我们还将学习滤镜和颜色转换。</p><p>本章将介绍以下主题：</p><ul class="task-list-container"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-0" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-0"> OpenCV 基本用户界面</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-1" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-1"> OpenCV Qt 界面</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-2" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-2"> 滑块和按钮</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-3" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-3"> 高级用户界面：OpenGL</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-4" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-4"> 颜色转换</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-5" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-5"> 基本滤波器</label></li></ul><h2 id="_3-1-技术要求" tabindex="-1"><a class="header-anchor" href="#_3-1-技术要求" aria-hidden="true">#</a> 3.1 技术要求</h2>',5),m={class:"task-list-container"},v=n("li",{class:"task-list-item"},[n("input",{type:"checkbox",class:"task-list-item-checkbox",id:"task-item-6",checked:"checked",disabled:"disabled"}),n("label",{class:"task-list-item-label",for:"task-item-6"}," 熟悉 C++ 语言")],-1),h={class:"task-list-item"},_=n("input",{type:"checkbox",class:"task-list-item-checkbox",id:"task-item-7",checked:"checked",disabled:"disabled"},null,-1),g={class:"task-list-item-label",for:"task-item-7"},f={href:"https://github.com/PacktPublishing/Learn-OpenCV-4-By-Building-Projects-Second-Edition/tree/master/Chapter_03",target:"_blank",rel:"noopener noreferrer"},y=n("li",{class:"task-list-item"},[n("input",{type:"checkbox",class:"task-list-item-checkbox",id:"task-item-8",checked:"checked",disabled:"disabled"}),n("label",{class:"task-list-item-label",for:"task-item-8"}," 现代操作系统，例如 Ubuntu 20+ 或者 Windows 10+")],-1),x=n("h2",{id:"_3-2-opencv-用户界面介绍",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_3-2-opencv-用户界面介绍","aria-hidden":"true"},"#"),s(" 3.2 OpenCV 用户界面介绍")],-1),w=n("p",null,"OpenCV 的用户界面是基础性的，提供了创建和管理软件开发的基本功能。这些功能都是原生的，并针对实时应用程序进行了优化。",-1),q=n("p",null,"OpenCV 提供两种用户界面选项：",-1),C=n("ul",null,[n("li",null,"基于原生用户界面的基本界面，适用于 Mac OS 的 cocoa 或 carbon，以及适用于 Linux 或 Windows 用户界面的 GTK，这些界面在编译 OpenCV 时被默认选择"),n("li",null,"基于 Qt 的跨平台的略微高级的界面，编译时需要手动启用")],-1),O=n("p",null,[n("img",{src:p,alt:"",loading:"lazy"})],-1),V={class:"custom-container info"},L=n("p",{class:"custom-container-title"},"使用 Qt 支持的 OpenCV",-1),W=e(`<h2 id="_3-3-opencv-的基本图形用户界面" tabindex="-1"><a class="header-anchor" href="#_3-3-opencv-的基本图形用户界面" aria-hidden="true">#</a> 3.3 OpenCV 的基本图形用户界面</h2><p>新建一个项目，编写 <code>main.cpp</code>：</p><div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;string&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;sstream&gt;</span></span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;opencv2/core.hpp&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;opencv2/highgui.hpp&gt;</span></span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    cv<span class="token double-colon punctuation">::</span>Mat lena <span class="token operator">=</span> cv<span class="token double-colon punctuation">::</span><span class="token function">imread</span><span class="token punctuation">(</span><span class="token string">&quot;lena.jpg&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>lena<span class="token punctuation">.</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        std<span class="token double-colon punctuation">::</span>cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;Could not read the image&quot;</span> <span class="token operator">&lt;&lt;</span> std<span class="token double-colon punctuation">::</span>endl<span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    cv<span class="token double-colon punctuation">::</span>Mat photo <span class="token operator">=</span> cv<span class="token double-colon punctuation">::</span><span class="token function">imread</span><span class="token punctuation">(</span><span class="token string">&quot;photo.jpg&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>photo<span class="token punctuation">.</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        std<span class="token double-colon punctuation">::</span>cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;Could not read the image&quot;</span> <span class="token operator">&lt;&lt;</span> std<span class="token double-colon punctuation">::</span>endl<span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    cv<span class="token double-colon punctuation">::</span><span class="token function">namedWindow</span><span class="token punctuation">(</span><span class="token string">&quot;Lena&quot;</span><span class="token punctuation">,</span> cv<span class="token double-colon punctuation">::</span>WINDOW_NORMAL<span class="token punctuation">)</span><span class="token punctuation">;</span>
    cv<span class="token double-colon punctuation">::</span><span class="token function">namedWindow</span><span class="token punctuation">(</span><span class="token string">&quot;Photo&quot;</span><span class="token punctuation">,</span> cv<span class="token double-colon punctuation">::</span>WINDOW_AUTOSIZE<span class="token punctuation">)</span><span class="token punctuation">;</span>

    cv<span class="token double-colon punctuation">::</span><span class="token function">moveWindow</span><span class="token punctuation">(</span><span class="token string">&quot;Lena&quot;</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    cv<span class="token double-colon punctuation">::</span><span class="token function">moveWindow</span><span class="token punctuation">(</span><span class="token string">&quot;Photo&quot;</span><span class="token punctuation">,</span> <span class="token number">520</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    cv<span class="token double-colon punctuation">::</span><span class="token function">imshow</span><span class="token punctuation">(</span><span class="token string">&quot;Lena&quot;</span><span class="token punctuation">,</span> lena<span class="token punctuation">)</span><span class="token punctuation">;</span>
    cv<span class="token double-colon punctuation">::</span><span class="token function">imshow</span><span class="token punctuation">(</span><span class="token string">&quot;Photo&quot;</span><span class="token punctuation">,</span> photo<span class="token punctuation">)</span><span class="token punctuation">;</span>

    cv<span class="token double-colon punctuation">::</span><span class="token function">resizeWindow</span><span class="token punctuation">(</span><span class="token string">&quot;Lena&quot;</span><span class="token punctuation">,</span> <span class="token number">512</span><span class="token punctuation">,</span> <span class="token number">512</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    cv<span class="token double-colon punctuation">::</span><span class="token function">waitKey</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    cv<span class="token double-colon punctuation">::</span><span class="token function">destroyWindow</span><span class="token punctuation">(</span><span class="token string">&quot;Lena&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    cv<span class="token double-colon punctuation">::</span><span class="token function">destroyWindow</span><span class="token punctuation">(</span><span class="token string">&quot;Photo&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        std<span class="token double-colon punctuation">::</span>ostringstream ss<span class="token punctuation">;</span>
        ss <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;Photo&quot;</span> <span class="token operator">&lt;&lt;</span> i<span class="token punctuation">;</span>
        cv<span class="token double-colon punctuation">::</span><span class="token function">namedWindow</span><span class="token punctuation">(</span>ss<span class="token punctuation">.</span><span class="token function">str</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> cv<span class="token double-colon punctuation">::</span>WINDOW_NORMAL<span class="token punctuation">)</span><span class="token punctuation">;</span>
        cv<span class="token double-colon punctuation">::</span><span class="token function">moveWindow</span><span class="token punctuation">(</span>ss<span class="token punctuation">.</span><span class="token function">str</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">20</span> <span class="token operator">*</span> i<span class="token punctuation">,</span> <span class="token number">20</span> <span class="token operator">*</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
        cv<span class="token double-colon punctuation">::</span><span class="token function">imshow</span><span class="token punctuation">(</span>ss<span class="token punctuation">.</span><span class="token function">str</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> photo<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    cv<span class="token double-colon punctuation">::</span><span class="token function">waitKey</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    cv<span class="token double-colon punctuation">::</span><span class="token function">destroyAllWindows</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>配置 <code>CMakeLists.txt</code>：</p><div class="language-cmake line-numbers-mode" data-ext="cmake"><pre class="language-cmake"><code><span class="token keyword">cmake_minimum_required</span><span class="token punctuation">(</span><span class="token property">VERSION</span> <span class="token number">3.10</span><span class="token punctuation">)</span>

<span class="token keyword">project</span><span class="token punctuation">(</span>Photo_Tool<span class="token punctuation">)</span>

<span class="token keyword">set</span><span class="token punctuation">(</span><span class="token variable">CMAKE_CXX_STANDARD</span> <span class="token number">17</span><span class="token punctuation">)</span>

<span class="token keyword">find_package</span><span class="token punctuation">(</span>OpenCV REQUIRED<span class="token punctuation">)</span>
<span class="token keyword">message</span><span class="token punctuation">(</span>STATUS <span class="token string">&quot;OpenCV version: <span class="token interpolation"><span class="token punctuation">\${</span><span class="token variable">OpenCV_VERSION</span><span class="token punctuation">}</span></span>&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">include_directories</span><span class="token punctuation">(</span><span class="token punctuation">\${</span>OpenCV_INCLUDE_DIRS<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">link_directories</span><span class="token punctuation">(</span><span class="token punctuation">\${</span>OpenCV_LIB_DIR<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token keyword">add_executable</span><span class="token punctuation">(</span><span class="token punctuation">\${</span><span class="token variable">PROJECT_NAME</span><span class="token punctuation">}</span> main.cpp<span class="token punctuation">)</span>
<span class="token keyword">target_link_libraries</span><span class="token punctuation">(</span><span class="token punctuation">\${</span><span class="token variable">PROJECT_NAME</span><span class="token punctuation">}</span> <span class="token punctuation">\${</span>OpenCV_LIBS<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>编译运行：</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token function">mkdir</span> <span class="token parameter variable">-p</span> build
<span class="token builtin class-name">cd</span> build
cmake <span class="token punctuation">..</span>
<span class="token function">make</span> <span class="token parameter variable">-j</span> <span class="token variable"><span class="token variable">$(</span>nproc<span class="token variable">)</span></span>
<span class="token builtin class-name">cd</span> <span class="token punctuation">..</span>

./build/Photo_Tool
</code></pre></div><div class="custom-container info"><p class="custom-container-title">Windows 调试指南</p><p>如果你正在使用 Visual Studio 调试您的程序，可以使用 VS 内置的 CMake 功能来调试。如果您希望使用 MSVC 来编译，并使用命令行的 CMake 来调试，可以尝试下面的命令：</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># CMake 配置</span>
cmake <span class="token parameter variable">-B</span> ./build <span class="token parameter variable">-G</span> <span class="token string">&quot;Visual Studio 16 2019&quot;</span> <span class="token parameter variable">-T</span> <span class="token assign-left variable">host</span><span class="token operator">=</span>x64 <span class="token parameter variable">-A</span> x64 <span class="token builtin class-name">.</span>

<span class="token comment"># 编译命令</span>
cmake <span class="token parameter variable">--build</span> ./build <span class="token parameter variable">--config</span> Release <span class="token parameter variable">--target</span> ALL_BUILD <span class="token parameter variable">-j</span> <span class="token number">4</span> --

<span class="token comment"># 执行</span>
.<span class="token punctuation">\\</span>build<span class="token punctuation">\\</span>Release<span class="token punctuation">\\</span>Photo_Tool.exe
</code></pre></div></div><p><img src="`+p+'" alt="" loading="lazy"></p><p>按任意键，出现：</p><p><img src="'+d+`" alt="" loading="lazy"></p><h3 id="将滑块和鼠标事件添加到界面" tabindex="-1"><a class="header-anchor" href="#将滑块和鼠标事件添加到界面" aria-hidden="true">#</a> 将滑块和鼠标事件添加到界面</h3><p>使用滑块和鼠标事件可以让我们直接与界面交互，改变图像或变量的属性。</p><p>我们下面实现一个功能：鼠标可以绘制绿色圆圈，使用滑块进行模糊处理。</p><div class="language-c++" data-ext="c++"><pre class="language-c++"><code>
</code></pre></div><h2 id="_3-4-qt-图形用户界面" tabindex="-1"><a class="header-anchor" href="#_3-4-qt-图形用户界面" aria-hidden="true">#</a> 3.4 Qt 图形用户界面</h2><h2 id="_3-5-opengl-支持" tabindex="-1"><a class="header-anchor" href="#_3-5-opengl-支持" aria-hidden="true">#</a> 3.5 OpenGL 支持</h2><h2 id="_3-6-总结" tabindex="-1"><a class="header-anchor" href="#_3-6-总结" aria-hidden="true">#</a> 3.6 总结</h2>`,18);function E(I,N){const o=a("ExternalLinkIcon"),c=a("RouterLink");return i(),u("div",null,[b,n("ul",m,[v,n("li",h,[_,n("label",g,[n("a",f,[s("本章代码"),t(o)])])]),y]),x,w,q,C,O,n("div",V,[L,n("p",null,[s("如果需要编译支持 Qt 的 OpenCV，请阅读 "),t(c,{to:"/opencv-development-practice/complie-and-build-guide/"},{default:k(()=>[s("编译 Qt 支持的 OpenCV")]),_:1}),s(" 。")])]),W])}const S=l(r,[["render",E],["__file","index.html.vue"]]);export{S as default};
