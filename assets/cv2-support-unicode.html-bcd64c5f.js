import{_ as e,M as o,p as c,q as i,R as n,N as t,V as p,t as s,a1 as u}from"./framework-546207d5.js";const l={},r=n("h1",{id:"python-opencv-支持-unicode",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#python-opencv-支持-unicode","aria-hidden":"true"},"#"),s(" Python OpenCV 支持 Unicode")],-1),k={class:"table-of-contents"},d=u(`<p>如果在 <code>cv2</code> 中使用 Unicode 字符串，在某些系统上会无法读取。</p><p>C++ OpenCV 可以通过对应平台的编码来解决这个问题，但是 Python OpenCV 没有这个功能。</p><h2 id="_1-使用-numpy-读取" tabindex="-1"><a class="header-anchor" href="#_1-使用-numpy-读取" aria-hidden="true">#</a> 1. 使用 NumPy 读取</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> cv2
<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np
 
<span class="token keyword">def</span> <span class="token function">cv_imread</span><span class="token punctuation">(</span>path<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">,</span> flags<span class="token operator">=</span>cv2<span class="token punctuation">.</span>IMREAD_COLOR<span class="token punctuation">)</span><span class="token punctuation">:</span>
    cv_img <span class="token operator">=</span> cv2<span class="token punctuation">.</span>imdecode<span class="token punctuation">(</span>np<span class="token punctuation">.</span>fromfile<span class="token punctuation">(</span>path<span class="token punctuation">,</span> dtype<span class="token operator">=</span>np<span class="token punctuation">.</span>uint8<span class="token punctuation">)</span><span class="token punctuation">,</span> flags<span class="token punctuation">)</span>
    <span class="token keyword">return</span> cv_img

<span class="token keyword">def</span> <span class="token function">cv_imwrite</span><span class="token punctuation">(</span>path<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">,</span> img<span class="token punctuation">:</span> np<span class="token punctuation">.</span>ndarray<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token builtin">buffer</span><span class="token punctuation">:</span> np<span class="token punctuation">.</span>ndarray <span class="token operator">=</span> cv2<span class="token punctuation">.</span>imencode<span class="token punctuation">(</span><span class="token string">&#39;.jpg&#39;</span><span class="token punctuation">,</span> img<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>
    <span class="token builtin">buffer</span><span class="token punctuation">.</span>tofile<span class="token punctuation">(</span>path<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-使用-pil-读取" tabindex="-1"><a class="header-anchor" href="#_2-使用-pil-读取" aria-hidden="true">#</a> 2. 使用 PIL 读取</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> cv2
<span class="token keyword">from</span> PIL <span class="token keyword">import</span> Image

<span class="token keyword">def</span> <span class="token function">pli_to_cv2</span><span class="token punctuation">(</span>img<span class="token punctuation">:</span> Image<span class="token punctuation">.</span>Image<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> cv2<span class="token punctuation">.</span>cvtColor<span class="token punctuation">(</span>np<span class="token punctuation">.</span>asarray<span class="token punctuation">(</span>img<span class="token punctuation">)</span><span class="token punctuation">,</span> cv2<span class="token punctuation">.</span>COLOR_RGB2BGR<span class="token punctuation">)</span>

<span class="token keyword">def</span> <span class="token function">cv2_to_pli</span><span class="token punctuation">(</span>img<span class="token punctuation">:</span> np<span class="token punctuation">.</span>ndarray<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> Image<span class="token punctuation">.</span>fromarray<span class="token punctuation">(</span>cv2<span class="token punctuation">.</span>cvtColor<span class="token punctuation">(</span>img<span class="token punctuation">,</span> cv2<span class="token punctuation">.</span>COLOR_BGR2RGB<span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token keyword">def</span> <span class="token function">cv_imread</span><span class="token punctuation">(</span>path<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">,</span> <span class="token operator">**</span>kwargs<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> pli_to_cv2<span class="token punctuation">(</span>Image<span class="token punctuation">.</span><span class="token builtin">open</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> <span class="token operator">**</span>kwargs<span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token keyword">def</span> <span class="token function">cv_imwrite</span><span class="token punctuation">(</span>path<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">,</span> img<span class="token punctuation">:</span> np<span class="token punctuation">.</span>ndarray<span class="token punctuation">)</span><span class="token punctuation">:</span>
    cv2_to_pli<span class="token punctuation">(</span>img<span class="token punctuation">)</span><span class="token punctuation">.</span>save<span class="token punctuation">(</span>path<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6);function v(m,_){const a=o("router-link");return c(),i("div",null,[r,n("nav",k,[n("ul",null,[n("li",null,[t(a,{to:"#_1-使用-numpy-读取"},{default:p(()=>[s("1. 使用 NumPy 读取")]),_:1})]),n("li",null,[t(a,{to:"#_2-使用-pil-读取"},{default:p(()=>[s("2. 使用 PIL 读取")]),_:1})])])]),d])}const h=e(l,[["render",v],["__file","cv2-support-unicode.html.vue"]]);export{h as default};
