import{_ as c,r as o,o as n,c as e,b as s,d as a,a as t,f as i,e as l}from"./app-e9203006.js";const r="/vuepress-opencv-notes/assets/THRESH_BINARY-89e32a0c.svg",m="/vuepress-opencv-notes/assets/THRESH_BINARY_INV-e6412862.svg",d="/vuepress-opencv-notes/assets/THRESH_TRUNC-46bcc650.svg",y="/vuepress-opencv-notes/assets/THRESH_TOZERO-e2df3659.svg",h="/vuepress-opencv-notes/assets/THRESH_TOZERO_INV-fcfff6fc.svg",D={},u=l(`<h1 id="4-opencv-中的图像处理" tabindex="-1"><a class="header-anchor" href="#4-opencv-中的图像处理" aria-hidden="true">#</a> 4. OpenCV 中的图像处理</h1><h2 id="41-颜色空间转换" tabindex="-1"><a class="header-anchor" href="#41-颜色空间转换" aria-hidden="true">#</a> 4.1 颜色空间转换</h2><details class="hint-container details"><summary>学习目标</summary><ul><li>对图像进行颜色空间转换，比如从 BGR 到灰度图，或者从 BGR 到 HSV 等</li><li>创建一个程序用来从一幅图像中获取某个特定颜色的物体</li><li>函数 <ul><li><code>cv2.cvtColor()</code> 转换颜色空间</li><li><code>cv2.inRange()</code> 在范围内的图像</li></ul></li><li>语法 <ul><li><code>cv2.cvtColor(src, code, dst=..., dstCn=...)</code></li><li><code>cv2.inRange(src, lowerb, upperb, dst=...)</code></li></ul></li></ul></details><h3 id="411-转换颜色空间" tabindex="-1"><a class="header-anchor" href="#411-转换颜色空间" aria-hidden="true">#</a> 4.1.1 转换颜色空间</h3><p>最经常用到的颜色转换：</p><ul><li>BGR 与灰度图相互转换</li><li>BGR 与 HSV 相互转换</li></ul><p>获取有多少种颜色代码：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> cv2</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">def</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">print_const</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">prefix</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">str</span><span style="color:#D4D4D4;">) -&gt; </span><span style="color:#569CD6;">None</span><span style="color:#D4D4D4;">:</span></span>
<span class="line"><span style="color:#D4D4D4;">    prefix += </span><span style="color:#CE9178;">&#39;_&#39;</span></span>
<span class="line"><span style="color:#D4D4D4;">    names = (</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#CE9178;">&#39;</span><span style="color:#569CD6;">{:22}</span><span style="color:#CE9178;"> = </span><span style="color:#569CD6;">{:5}</span><span style="color:#CE9178;">&#39;</span><span style="color:#D4D4D4;">.format(key, val)</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#C586C0;">for</span><span style="color:#D4D4D4;"> key, val </span><span style="color:#C586C0;">in</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">vars</span><span style="color:#D4D4D4;">(cv2).items()</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#C586C0;">if</span><span style="color:#D4D4D4;"> key.startswith(prefix)</span></span>
<span class="line"><span style="color:#D4D4D4;">    )</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#DCDCAA;">print</span><span style="color:#D4D4D4;">(*names, </span><span style="color:#9CDCFE;">sep</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&#39;</span><span style="color:#D7BA7D;">\\n</span><span style="color:#CE9178;">&#39;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">print_const(</span><span style="color:#CE9178;">&#39;COLOR&#39;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>最常用的是 <code>cv2.COLOR_BGR2GRAY</code> 和 <code>cv2.COLOR_BGR2HSV</code>。</p><p>在 OpenCV 的 HSV 格式中：</p>`,10),v=s("ul",null,[s("li",null,[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"H")]),s("annotation",{encoding:"application/x-tex"},"H")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6833em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.08125em"}},"H")])])]),a("（色彩/色度）的取值范围是 "),s("code",null,"[0, 179]")]),s("li",null,[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"S")]),s("annotation",{encoding:"application/x-tex"},"S")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6833em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.05764em"}},"S")])])]),a("（饱和度）的取值范围 "),s("code",null,"[0, 255]")]),s("li",null,[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"V")]),s("annotation",{encoding:"application/x-tex"},"V")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6833em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.22222em"}},"V")])])]),a("（亮度）的取值范围 "),s("code",null,"[0, 255]")])],-1),g=l(`<p>不同的软件使用的值可能不同。所以当你需要拿 OpenCV 的 HSV 值与其它软件的 HSV 值进行对比时，一定要记得归一化。</p><h3 id="412-物体跟踪" tabindex="-1"><a class="header-anchor" href="#412-物体跟踪" aria-hidden="true">#</a> 4.1.2 物体跟踪</h3><p>在 HSV 颜色空间中要比在 BGR 空间中更容易表示一个特定颜色。在我们的程序中，我们要提取的是一个蓝色的物体。下面就是就是我们要做的几步：</p><ol><li>从视频中获取每一帧图像</li><li>将图像转换到 HSV 空间</li><li>设置 HSV 阈值到蓝色范围</li><li>获取蓝色物体</li></ol><div class="language-python line-numbers-mode" data-ext="py"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> cv2</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> numpy </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> np</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">BLUE_LOWER = np.array([</span><span style="color:#B5CEA8;">110</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">50</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">50</span><span style="color:#D4D4D4;">])</span></span>
<span class="line"><span style="color:#D4D4D4;">BLUE_UPPER = np.array([</span><span style="color:#B5CEA8;">130</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">255</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">255</span><span style="color:#D4D4D4;">])</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">cap = cv2.VideoCapture(</span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C586C0;">while</span><span style="color:#D4D4D4;"> cap.isOpened():</span></span>
<span class="line"><span style="color:#D4D4D4;">    ret, frame = cap.read()</span></span>
<span class="line"><span style="color:#D4D4D4;">    hsv = cv2.cvtColor(frame, cv2.COLOR_BGR2HSV)</span></span>
<span class="line"><span style="color:#D4D4D4;">    mask = cv2.inRange(hsv, </span><span style="color:#9CDCFE;">lowerb</span><span style="color:#D4D4D4;">=BLUE_LOWER,</span></span>
<span class="line"><span style="color:#D4D4D4;">                       </span><span style="color:#9CDCFE;">upperb</span><span style="color:#D4D4D4;">=BLUE_UPPER)</span></span>
<span class="line"><span style="color:#D4D4D4;">    res = cv2.bitwise_and(frame, frame, </span><span style="color:#9CDCFE;">mask</span><span style="color:#D4D4D4;">=mask)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">    cv2.imshow(</span><span style="color:#CE9178;">&#39;frame&#39;</span><span style="color:#D4D4D4;">, frame)</span></span>
<span class="line"><span style="color:#D4D4D4;">    cv2.imshow(</span><span style="color:#CE9178;">&#39;mask&#39;</span><span style="color:#D4D4D4;">, mask)</span></span>
<span class="line"><span style="color:#D4D4D4;">    cv2.imshow(</span><span style="color:#CE9178;">&#39;res&#39;</span><span style="color:#D4D4D4;">, res)</span></span>
<span class="line"><span style="color:#D4D4D4;">    key = cv2.waitKey(</span><span style="color:#B5CEA8;">5</span><span style="color:#D4D4D4;">) &amp; </span><span style="color:#569CD6;">0x</span><span style="color:#B5CEA8;">ff</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">if</span><span style="color:#D4D4D4;"> key == </span><span style="color:#B5CEA8;">27</span><span style="color:#D4D4D4;">:</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#C586C0;">break</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">cv2.destroyAllWindows()</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>图像中仍然有一些噪音，我们会在后面的章节中介绍如何消减噪音。</p><h3 id="413-怎样找到要跟踪对象的-hsv-值" tabindex="-1"><a class="header-anchor" href="#413-怎样找到要跟踪对象的-hsv-值" aria-hidden="true">#</a> 4.1.3 怎样找到要跟踪对象的 HSV 值？</h3><p>我们遇到的最普遍的问题大概是怎么确定对象的 HSV 值。例如，我们要找到绿色的 HSV 值，我们只需在终端输入以下命令：</p><div class="language-python" data-ext="py"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> cv2</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> numpy </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> np</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">green = np.array([[[</span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">255</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">]]], </span><span style="color:#9CDCFE;">dtype</span><span style="color:#D4D4D4;">=np.uint8)</span></span>
<span class="line"><span style="color:#D4D4D4;">hsv_green = cv2.cvtColor(green, cv2.COLOR_BGR2HSV)</span></span>
<span class="line"><span style="color:#DCDCAA;">print</span><span style="color:#D4D4D4;">(hsv_green)</span></span>
<span class="line"><span style="color:#6A9955;">## [[[ 60 255 255]]]</span></span>
<span class="line"></span></code></pre></div><p>现在你可以分别用 <code>[H-100, 100, 100]</code> 和 <code>[H+100, 255, 255]</code> 做上下阈值。</p><h2 id="42-几何变换" tabindex="-1"><a class="header-anchor" href="#42-几何变换" aria-hidden="true">#</a> 4.2 几何变换</h2><details class="hint-container details"><summary>学习目标</summary><ul><li>对图像进行各种几个变换，例如移动，旋转，仿射变换</li><li>函数 <ul><li><code>cv2.getPerspectiveTransform()</code></li></ul></li></ul></details><p>OpenCV 提供了两个变换函数，<code>cv2.warpAffine()</code> 和 <code>cv2.warpPerspective()</code>，使用这两个函数你可以实现所有类型的变换。</p><p>区别：</p>`,14),b=s("ul",null,[s("li",null,[s("code",null,"cv2.warpAffine()"),a(" 接收的参数是 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mn",null,"2"),s("mo",null,"×"),s("mn",null,"3")]),s("annotation",{encoding:"application/x-tex"},"2 \\times 3")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.7278em","vertical-align":"-0.0833em"}}),s("span",{class:"mord"},"2"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"×"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6444em"}}),s("span",{class:"mord"},"3")])])]),a(" 的变换矩阵")]),s("li",null,[s("code",null,"cv2.warpPerspective()"),a(" 接收的参数是 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mn",null,"3"),s("mo",null,"×"),s("mn",null,"3")]),s("annotation",{encoding:"application/x-tex"},"3 \\times 3")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.7278em","vertical-align":"-0.0833em"}}),s("span",{class:"mord"},"3"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"×"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6444em"}}),s("span",{class:"mord"},"3")])])]),a(" 的变换矩阵")])],-1),C=l(`<h3 id="421-扩展缩放" tabindex="-1"><a class="header-anchor" href="#421-扩展缩放" aria-hidden="true">#</a> 4.2.1 扩展缩放</h3><p>扩展缩放只是改变图像的尺寸大小。OpenCV 提供的函数 <code>cv2.resize()</code> 可以实现这个功能。图像的尺寸可以自己手动设置，你也可以指定缩放因子。我们可以选择使用不同的插值方法。在缩放时我们推荐使用 <code>cv2.INTER_AREA</code>，在扩展时我们推荐使用 <code>cv2.INTER_CUBIC</code>（慢) 和 <code>v2.INTER_LINEAR</code>。</p><p>默认情况下所有改变图像尺寸大小的操作使用的插值方法都是 <code>cv2.INTER_LINEAR</code>。你可以使用下面任意一种方法改变图像的尺寸：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> cv2</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> numpy </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> np</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">img = cv2.imread(</span><span style="color:#CE9178;">&#39;messi5.jpg&#39;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;"># 方法 1</span></span>
<span class="line"><span style="color:#D4D4D4;">res = cv2.resize(img, </span><span style="color:#569CD6;">None</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">fx</span><span style="color:#D4D4D4;">=</span><span style="color:#B5CEA8;">2</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">fy</span><span style="color:#D4D4D4;">=</span><span style="color:#B5CEA8;">2</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">interpolation</span><span style="color:#D4D4D4;">=cv2.INTER_CUBIC)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;"># 方法 2</span></span>
<span class="line"><span style="color:#D4D4D4;">height, width = img.shape[:</span><span style="color:#B5CEA8;">2</span><span style="color:#D4D4D4;">]</span></span>
<span class="line"><span style="color:#D4D4D4;">res = cv2.resize(img,(</span><span style="color:#B5CEA8;">2</span><span style="color:#D4D4D4;">*width,</span><span style="color:#B5CEA8;">2</span><span style="color:#D4D4D4;">*height),</span><span style="color:#9CDCFE;">interpolation</span><span style="color:#D4D4D4;">=cv2.INTER_CUBIC)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">cv2.imshow(</span><span style="color:#CE9178;">&#39;res&#39;</span><span style="color:#D4D4D4;">, res)</span></span>
<span class="line"><span style="color:#D4D4D4;">cv2.imshow(</span><span style="color:#CE9178;">&#39;img&#39;</span><span style="color:#D4D4D4;">, img)</span></span>
<span class="line"><span style="color:#D4D4D4;">cv2.waitKey()</span></span>
<span class="line"><span style="color:#D4D4D4;">cv2.destroyAllWindows()</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="422-平移" tabindex="-1"><a class="header-anchor" href="#422-平移" aria-hidden="true">#</a> 4.2.2 平移</h3>`,5),E=s("p",null,[a("沿着 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mo",{stretchy:"false"},"("),s("mi",null,"x"),s("mo",{separator:"true"},","),s("mtext",null," "),s("mi",null,"y"),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"},"(x,\\,y)")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal"},"x"),s("span",{class:"mpunct"},","),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"y"),s("span",{class:"mclose"},")")])])]),a(" 方向移动，移动距离是 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mo",{stretchy:"false"},"("),s("msub",null,[s("mi",null,"t"),s("mi",null,"x")]),s("mo",{separator:"true"},","),s("mtext",null," "),s("msub",null,[s("mi",null,"t"),s("mi",null,"y")]),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"},"(t_x,\\,t_y)")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1.0361em","vertical-align":"-0.2861em"}}),s("span",{class:"mopen"},"("),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"t"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.1514em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight"},"x")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mpunct"},","),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"t"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.1514em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.03588em"}},"y")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.2861em"}},[s("span")])])])])]),s("span",{class:"mclose"},")")])])]),a("，移动矩阵即为")],-1),x=s("p",{class:"katex-block"},[s("span",{class:"katex-display"},[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[s("semantics",null,[s("mrow",null,[s("mi",null,"M"),s("mo",null,"="),s("mrow",null,[s("mo",{fence:"true"},"["),s("mtable",{rowspacing:"0.16em",columnalign:"center center center",columnspacing:"1em"},[s("mtr",null,[s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mn",null,"1")])]),s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mn",null,"0")])]),s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("msub",null,[s("mi",null,"t"),s("mi",null,"x")])])])]),s("mtr",null,[s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mn",null,"0")])]),s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mn",null,"1")])]),s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("msub",null,[s("mi",null,"t"),s("mi",null,"y")])])])])]),s("mo",{fence:"true"},"]")])]),s("annotation",{encoding:"application/x-tex"}," M = \\begin{bmatrix} 1 & 0 & t_x \\\\ 0 & 1 & t_y \\end{bmatrix} ")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6833em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.10903em"}},"M"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"2.4em","vertical-align":"-0.95em"}}),s("span",{class:"minner"},[s("span",{class:"mopen delimcenter",style:{top:"0em"}},[s("span",{class:"delimsizing size3"},"[")]),s("span",{class:"mord"},[s("span",{class:"mtable"},[s("span",{class:"col-align-c"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.45em"}},[s("span",{style:{top:"-3.61em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"1")])]),s("span",{style:{top:"-2.41em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"0")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.95em"}},[s("span")])])])]),s("span",{class:"arraycolsep",style:{width:"0.5em"}}),s("span",{class:"arraycolsep",style:{width:"0.5em"}}),s("span",{class:"col-align-c"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.45em"}},[s("span",{style:{top:"-3.61em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"0")])]),s("span",{style:{top:"-2.41em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"1")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.95em"}},[s("span")])])])]),s("span",{class:"arraycolsep",style:{width:"0.5em"}}),s("span",{class:"arraycolsep",style:{width:"0.5em"}}),s("span",{class:"col-align-c"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.45em"}},[s("span",{style:{top:"-3.61em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"t"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.1514em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight"},"x")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])])])]),s("span",{style:{top:"-2.41em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"t"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.1514em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.03588em"}},"y")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.2861em"}},[s("span")])])])])])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.95em"}},[s("span")])])])])])]),s("span",{class:"mclose delimcenter",style:{top:"0em"}},[s("span",{class:"delimsizing size3"},"]")])])])])])])],-1),w=l(`<p>可以使用 NumPy 数组构建这个矩阵（数据类型是 <code>np.float32</code>），然<br> 后把它传给函数 <code>cv2.warpAffine()</code>。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> numpy </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> np</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> cv2</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">img = cv2.imread(</span><span style="color:#CE9178;">&#39;t1.jpg&#39;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">cv2.imshow(</span><span style="color:#CE9178;">&#39;image&#39;</span><span style="color:#D4D4D4;">, img)</span></span>
<span class="line"><span style="color:#D4D4D4;">height, width, _ = img.shape</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">mat_translation = np.float32([[</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">20</span><span style="color:#D4D4D4;">], [</span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">50</span><span style="color:#D4D4D4;">]])</span></span>
<span class="line"><span style="color:#D4D4D4;">dst = cv2.warpAffine(img, mat_translation, (width+</span><span style="color:#B5CEA8;">20</span><span style="color:#D4D4D4;">, height+</span><span style="color:#B5CEA8;">50</span><span style="color:#D4D4D4;">))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">cv2.imshow(</span><span style="color:#CE9178;">&#39;dst&#39;</span><span style="color:#D4D4D4;">, dst)</span></span>
<span class="line"><span style="color:#D4D4D4;">cv2.waitKey()</span></span>
<span class="line"><span style="color:#D4D4D4;">cv2.destroyAllWindows()</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container warning"><p class="hint-container-title">通道顺序</p><p>函数 <code>cv2.warpAffine()</code> 的第三个参数的是输出图像的大小，它的格式应该是（宽，高）。应该记住的是图像的宽对应的是列数，高对应的是行数。</p></div><h3 id="423-旋转" tabindex="-1"><a class="header-anchor" href="#423-旋转" aria-hidden="true">#</a> 4.2.3 旋转</h3>`,4),_=s("p",null,[a("对一个图像旋转角度 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"θ")]),s("annotation",{encoding:"application/x-tex"},"\\theta")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6944em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"θ")])])]),a("，需要使用到下面形式的旋转矩阵")],-1),f=s("p",{class:"katex-block"},[s("span",{class:"katex-display"},[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[s("semantics",null,[s("mrow",null,[s("mi",null,"M"),s("mo",null,"="),s("mrow",null,[s("mo",{fence:"true"},"["),s("mtable",{rowspacing:"0.16em",columnalign:"center center",columnspacing:"1em"},[s("mtr",null,[s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mrow",null,[s("mi",null,"cos"),s("mo",null,"⁡"),s("mi",null,"θ")])])]),s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mrow",null,[s("mo",null,"−"),s("mi",null,"sin"),s("mo",null,"⁡"),s("mi",null,"θ")])])])]),s("mtr",null,[s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mrow",null,[s("mi",null,"sin"),s("mo",null,"⁡"),s("mi",null,"θ")])])]),s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mrow",null,[s("mi",null,"cos"),s("mo",null,"⁡"),s("mi",null,"θ")])])])])]),s("mo",{fence:"true"},"]")])]),s("annotation",{encoding:"application/x-tex"}," M = \\begin{bmatrix} \\cos \\theta & -\\sin \\theta \\\\ \\sin \\theta & \\cos \\theta \\end{bmatrix} ")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6833em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.10903em"}},"M"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"2.4em","vertical-align":"-0.95em"}}),s("span",{class:"minner"},[s("span",{class:"mopen delimcenter",style:{top:"0em"}},[s("span",{class:"delimsizing size3"},"[")]),s("span",{class:"mord"},[s("span",{class:"mtable"},[s("span",{class:"col-align-c"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.45em"}},[s("span",{style:{top:"-3.61em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mop"},"cos"),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"θ")])]),s("span",{style:{top:"-2.41em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mop"},"sin"),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"θ")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.95em"}},[s("span")])])])]),s("span",{class:"arraycolsep",style:{width:"0.5em"}}),s("span",{class:"arraycolsep",style:{width:"0.5em"}}),s("span",{class:"col-align-c"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.45em"}},[s("span",{style:{top:"-3.61em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"−"),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mop"},"sin"),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"θ")])]),s("span",{style:{top:"-2.41em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mop"},"cos"),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"θ")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.95em"}},[s("span")])])])])])]),s("span",{class:"mclose delimcenter",style:{top:"0em"}},[s("span",{class:"delimsizing size3"},"]")])])])])])])],-1),A=s("p",null,"但是 OpenCV 允许你在任意地方进行旋转，但是旋转矩阵的形式应该修改为",-1),k=s("p",{class:"katex-block"},[s("span",{class:"katex-display"},[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[s("semantics",null,[s("mrow",null,[s("mo",{fence:"true"},"["),s("mtable",{rowspacing:"0.16em",columnalign:"center center center",columnspacing:"1em"},[s("mtr",null,[s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mi",null,"α")])]),s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mi",null,"β")])]),s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mrow",null,[s("mrow",null,[s("mo",{fence:"true"},"("),s("mn",null,"1"),s("mo",null,"−"),s("mi",null,"α"),s("mo",{fence:"true"},")")]),s("mo",null,"⋅"),s("msub",null,[s("mrow",null,[s("mi",{mathvariant:"normal"},"c"),s("mi",{mathvariant:"normal"},"e"),s("mi",{mathvariant:"normal"},"n"),s("mi",{mathvariant:"normal"},"t"),s("mi",{mathvariant:"normal"},"e"),s("mi",{mathvariant:"normal"},"r")]),s("mi",null,"x")]),s("mo",null,"−"),s("mi",null,"β"),s("mo",null,"⋅"),s("msub",null,[s("mrow",null,[s("mi",{mathvariant:"normal"},"c"),s("mi",{mathvariant:"normal"},"e"),s("mi",{mathvariant:"normal"},"n"),s("mi",{mathvariant:"normal"},"t"),s("mi",{mathvariant:"normal"},"e"),s("mi",{mathvariant:"normal"},"r")]),s("mi",null,"y")])])])])]),s("mtr",null,[s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mrow",null,[s("mo",null,"−"),s("mi",null,"β")])])]),s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mi",null,"α")])]),s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mrow",null,[s("mi",null,"β"),s("mo",null,"⋅"),s("msub",null,[s("mrow",null,[s("mi",{mathvariant:"normal"},"c"),s("mi",{mathvariant:"normal"},"e"),s("mi",{mathvariant:"normal"},"n"),s("mi",{mathvariant:"normal"},"t"),s("mi",{mathvariant:"normal"},"e"),s("mi",{mathvariant:"normal"},"r")]),s("mi",null,"y")]),s("mo",null,"+"),s("mrow",null,[s("mo",{fence:"true"},"("),s("mn",null,"1"),s("mo",null,"+"),s("mi",null,"α"),s("mo",{fence:"true"},")")]),s("mo",null,"⋅"),s("msub",null,[s("mrow",null,[s("mi",{mathvariant:"normal"},"c"),s("mi",{mathvariant:"normal"},"e"),s("mi",{mathvariant:"normal"},"n"),s("mi",{mathvariant:"normal"},"t"),s("mi",{mathvariant:"normal"},"e"),s("mi",{mathvariant:"normal"},"r")]),s("mi",null,"x")])])])])])]),s("mo",{fence:"true"},"]")]),s("annotation",{encoding:"application/x-tex"}," \\begin{bmatrix} \\alpha & \\beta & \\left(1 - \\alpha\\right) \\cdot \\mathrm{center}_x - \\beta \\cdot \\mathrm{center}_y \\\\ -\\beta & \\alpha & \\beta \\cdot \\mathrm{center}_y + \\left(1 + \\alpha\\right) \\cdot \\mathrm{center}_x \\end{bmatrix} ")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"2.4em","vertical-align":"-0.95em"}}),s("span",{class:"minner"},[s("span",{class:"mopen delimcenter",style:{top:"0em"}},[s("span",{class:"delimsizing size3"},"[")]),s("span",{class:"mord"},[s("span",{class:"mtable"},[s("span",{class:"col-align-c"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.45em"}},[s("span",{style:{top:"-3.61em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.0037em"}},"α")])]),s("span",{style:{top:"-2.41em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"−"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.05278em"}},"β")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.95em"}},[s("span")])])])]),s("span",{class:"arraycolsep",style:{width:"0.5em"}}),s("span",{class:"arraycolsep",style:{width:"0.5em"}}),s("span",{class:"col-align-c"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.45em"}},[s("span",{style:{top:"-3.61em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.05278em"}},"β")])]),s("span",{style:{top:"-2.41em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.0037em"}},"α")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.95em"}},[s("span")])])])]),s("span",{class:"arraycolsep",style:{width:"0.5em"}}),s("span",{class:"arraycolsep",style:{width:"0.5em"}}),s("span",{class:"col-align-c"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.45em"}},[s("span",{style:{top:"-3.61em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"minner"},[s("span",{class:"mopen delimcenter",style:{top:"0em"}},"("),s("span",{class:"mord"},"1"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"−"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.0037em"}},"α"),s("span",{class:"mclose delimcenter",style:{top:"0em"}},")")]),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"⋅"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},[s("span",{class:"mord mathrm"},"center")]),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.1514em"}},[s("span",{style:{top:"-2.55em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight"},"x")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"−"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.05278em"}},"β"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"⋅"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},[s("span",{class:"mord mathrm"},"center")]),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.1514em"}},[s("span",{style:{top:"-2.55em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.03588em"}},"y")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.2861em"}},[s("span")])])])])])])]),s("span",{style:{top:"-2.41em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.05278em"}},"β"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"⋅"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},[s("span",{class:"mord mathrm"},"center")]),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.1514em"}},[s("span",{style:{top:"-2.55em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.03588em"}},"y")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.2861em"}},[s("span")])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"+"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"minner"},[s("span",{class:"mopen delimcenter",style:{top:"0em"}},"("),s("span",{class:"mord"},"1"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"+"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.0037em"}},"α"),s("span",{class:"mclose delimcenter",style:{top:"0em"}},")")]),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"⋅"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},[s("span",{class:"mord mathrm"},"center")]),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.1514em"}},[s("span",{style:{top:"-2.55em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight"},"x")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.95em"}},[s("span")])])])])])]),s("span",{class:"mclose delimcenter",style:{top:"0em"}},[s("span",{class:"delimsizing size3"},"]")])])])])])])],-1),B=s("p",null,"其中",-1),z=s("p",{class:"katex-block"},[s("span",{class:"katex-display"},[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[s("semantics",null,[s("mrow",null,[s("mi",null,"α"),s("mo",null,"="),s("mrow",null,[s("mi",{mathvariant:"normal"},"s"),s("mi",{mathvariant:"normal"},"c"),s("mi",{mathvariant:"normal"},"a"),s("mi",{mathvariant:"normal"},"l"),s("mi",{mathvariant:"normal"},"e")]),s("mo",null,"⋅"),s("mi",null,"cos"),s("mo",null,"⁡"),s("mi",null,"θ")]),s("annotation",{encoding:"application/x-tex"}," \\alpha = \\mathrm{scale} \\cdot \\cos \\theta ")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.4306em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.0037em"}},"α"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6944em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathrm"},"scale")]),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"⋅"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6944em"}}),s("span",{class:"mop"},"cos"),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"θ")])])])])],-1),M=s("p",{class:"katex-block"},[s("span",{class:"katex-display"},[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[s("semantics",null,[s("mrow",null,[s("mi",null,"β"),s("mo",null,"="),s("mrow",null,[s("mi",{mathvariant:"normal"},"s"),s("mi",{mathvariant:"normal"},"c"),s("mi",{mathvariant:"normal"},"a"),s("mi",{mathvariant:"normal"},"l"),s("mi",{mathvariant:"normal"},"e")]),s("mo",null,"⋅"),s("mi",null,"sin"),s("mo",null,"⁡"),s("mi",null,"θ")]),s("annotation",{encoding:"application/x-tex"}," \\beta = \\mathrm{scale} \\cdot \\sin \\theta ")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8889em","vertical-align":"-0.1944em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.05278em"}},"β"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6944em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathrm"},"scale")]),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"⋅"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6944em"}}),s("span",{class:"mop"},"sin"),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"θ")])])])])],-1),H=s("p",null,[a("为了构建这个旋转矩阵，OpenCV 提供了一个函数："),s("code",null,"cv2.getRotationMatrix2D()"),a("，下面的例子是在不缩放的情况下将图像旋转 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mn",null,"90"),s("mi",{mathvariant:"normal"},"°")]),s("annotation",{encoding:"application/x-tex"},"90 \\degree")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6944em"}}),s("span",{class:"mord"},"90°")])])]),a("。")],-1),V=s("h3",{id:"424-仿射变换",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#424-仿射变换","aria-hidden":"true"},"#"),a(" 4.2.4 仿射变换")],-1),R=s("p",null,[a("在仿射变换中，原图中所有的平行线在结果图像中同样平行。为了创建这"),s("br"),a(" 个矩阵我们需要从原图像中找到三个点以及他们在输出图像中的位置。")],-1),S=s("p",null,[a("然后 "),s("code",null,"cv2.getAffineTransform()"),a(" 会创建一个 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mn",null,"2"),s("mo",null,"×"),s("mn",null,"3")]),s("annotation",{encoding:"application/x-tex"},"2 \\times 3")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.7278em","vertical-align":"-0.0833em"}}),s("span",{class:"mord"},"2"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"×"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6444em"}}),s("span",{class:"mord"},"3")])])]),a(" 的矩阵，最后这个矩阵会被传给函数 "),s("code",null,"cv2.warpAffine()"),a("。")],-1),O=l(`<div class="language-python line-numbers-mode" data-ext="py"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> cv2</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> numpy </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> np</span></span>
<span class="line"><span style="color:#C586C0;">from</span><span style="color:#D4D4D4;"> matplotlib </span><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> pyplot </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> plt</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">img = cv2.imread(</span><span style="color:#CE9178;">&#39;test.jpg&#39;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">rows, cols, ch = img.shape</span></span>
<span class="line"><span style="color:#D4D4D4;">pts1 = np.float32([[</span><span style="color:#B5CEA8;">50</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">50</span><span style="color:#D4D4D4;">], [</span><span style="color:#B5CEA8;">200</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">50</span><span style="color:#D4D4D4;">], [</span><span style="color:#B5CEA8;">50</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">200</span><span style="color:#D4D4D4;">]])</span></span>
<span class="line"><span style="color:#D4D4D4;">pts2 = np.float32([[</span><span style="color:#B5CEA8;">10</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">100</span><span style="color:#D4D4D4;">], [</span><span style="color:#B5CEA8;">200</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">50</span><span style="color:#D4D4D4;">], [</span><span style="color:#B5CEA8;">100</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">250</span><span style="color:#D4D4D4;">]])</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">M = cv2.getAffineTransform(pts1, pts2)</span></span>
<span class="line"><span style="color:#D4D4D4;">dst = cv2.warpAffine(img, M, (cols, rows))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">plt.subplot(</span><span style="color:#B5CEA8;">121</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">plt.imshow(img[..., ::-</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">])</span></span>
<span class="line"><span style="color:#D4D4D4;">plt.title(</span><span style="color:#CE9178;">&#39;Input&#39;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">plt.subplot(</span><span style="color:#B5CEA8;">122</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">plt.imshow(dst[..., ::-</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">])</span></span>
<span class="line"><span style="color:#D4D4D4;">plt.title(</span><span style="color:#CE9178;">&#39;Output&#39;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">plt.show()</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="425-透视变换" tabindex="-1"><a class="header-anchor" href="#425-透视变换" aria-hidden="true">#</a> 4.2.5 透视变换</h3>`,2),T=s("p",null,[a("对于视角变换，我们需要一个 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mn",null,"3"),s("mo",null,"×"),s("mn",null,"3")]),s("annotation",{encoding:"application/x-tex"},"3 \\times 3")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.7278em","vertical-align":"-0.0833em"}}),s("span",{class:"mord"},"3"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"×"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6444em"}}),s("span",{class:"mord"},"3")])])]),a(" 变换矩阵。在变换前后直线还是直线。")],-1),L=l(`<p>要构建这个变换矩阵，你需要在输入图像上找 4 个点，以及他们在输出图像上对应的位置。这四个点中的任意三个都不能共线。这个变换矩阵可以有函数 <code>cv2.getPerspectiveTransform()</code> 构建。然后把这个矩阵传给函数 <code>cv2.warpPerspective()</code>。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> cv2</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> numpy </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> np</span></span>
<span class="line"><span style="color:#C586C0;">from</span><span style="color:#D4D4D4;"> matplotlib </span><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> pyplot </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> plt</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">img = cv2.imread(</span><span style="color:#CE9178;">&#39;test.jpg&#39;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">rows, cols, ch = img.shape</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">pts1 = np.float32([[</span><span style="color:#B5CEA8;">56</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">65</span><span style="color:#D4D4D4;">], [</span><span style="color:#B5CEA8;">368</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">52</span><span style="color:#D4D4D4;">], [</span><span style="color:#B5CEA8;">28</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">387</span><span style="color:#D4D4D4;">], [</span><span style="color:#B5CEA8;">389</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">390</span><span style="color:#D4D4D4;">]])</span></span>
<span class="line"><span style="color:#D4D4D4;">pts2 = np.float32([[</span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">], [</span><span style="color:#B5CEA8;">300</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">], [</span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">300</span><span style="color:#D4D4D4;">], [</span><span style="color:#B5CEA8;">300</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">300</span><span style="color:#D4D4D4;">]])</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">M = cv2.getPerspectiveTransform(pts1, pts2)</span></span>
<span class="line"><span style="color:#D4D4D4;">dst = cv2.warpPerspective(img, M, (</span><span style="color:#B5CEA8;">300</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">300</span><span style="color:#D4D4D4;">))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">plt.subplot(</span><span style="color:#B5CEA8;">121</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">plt.imshow(img[..., ::-</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">])</span></span>
<span class="line"><span style="color:#D4D4D4;">plt.title(</span><span style="color:#CE9178;">&#39;Input&#39;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">plt.subplot(</span><span style="color:#B5CEA8;">122</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">plt.imshow(dst[..., ::-</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">])</span></span>
<span class="line"><span style="color:#D4D4D4;">plt.title(</span><span style="color:#CE9178;">&#39;Output&#39;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">plt.show()</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="43-图像阈值" tabindex="-1"><a class="header-anchor" href="#43-图像阈值" aria-hidden="true">#</a> 4.3 图像阈值</h2><details class="hint-container details"><summary>学习目标</summary><ul><li>简单阈值</li><li>自适应阈值</li><li>Otsu’s 二值化</li><li>函数 <ul><li><code>cv2.threshold()</code></li><li><code>cv2.adaptiveThreshold()</code></li></ul></li></ul></details><h3 id="431-简单阈值" tabindex="-1"><a class="header-anchor" href="#431-简单阈值" aria-hidden="true">#</a> 4.3.1 简单阈值</h3><p>正如其名，这种方法非常简单。像素值高于阈值时，我们给这个像素赋予一个新值（可能是白色），否则我们给它赋予另外一种颜色（也许是黑色）。这个函数就是 <code>cv2.threshhold()</code>。</p><p>这个函数的第一个参数就是原图像，原图像应该是灰度图。第二个参数就是用来对像素值进行分类的阈值。第三个参数就是当像素值高于（有时是小于）阈值时应该被赋予的新的像素值。OpenCV 提供了多种不同的阈值方法，这是有第四个参数来决定的。这些方法包括：</p><ul><li><code>cv2.THRESH_BINARY</code><div style="text-align:center;"><p><img src="`+r+'" alt="" loading="lazy"></p></div></li><li><code>cv2.THRESH_BINARY_INV</code><div style="text-align:center;"><p><img src="'+m+'" alt="" loading="lazy"></p></div></li><li><code>cv2.THRESH_TRUNC</code><div style="text-align:center;"><p><img src="'+d+'" alt="" loading="lazy"></p></div></li><li><code>cv2.THRESH_TOZERO</code><div style="text-align:center;"><p><img src="'+y+'" alt="" loading="lazy"></p></div></li><li><code>cv2.THRESH_TOZERO_INV</code><div style="text-align:center;"><p><img src="'+h+`" alt="" loading="lazy"></p></div></li></ul><details class="hint-container details"><summary>如何绘制这些图？</summary><p>事实上，我们正是用 <code>cv2.threshold()</code> 这个函数本身来绘制这些图表。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> cv2</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> numpy </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> np</span></span>
<span class="line"><span style="color:#C586C0;">from</span><span style="color:#D4D4D4;"> matplotlib </span><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> pyplot </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> plt</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">src = np.array([[</span></span>
<span class="line"><span style="color:#D4D4D4;">    *</span><span style="color:#DCDCAA;">range</span><span style="color:#D4D4D4;">(</span><span style="color:#B5CEA8;">90</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">240</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">),</span></span>
<span class="line"><span style="color:#D4D4D4;">    *</span><span style="color:#DCDCAA;">range</span><span style="color:#D4D4D4;">(</span><span style="color:#B5CEA8;">240</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">40</span><span style="color:#D4D4D4;">, -</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">),</span></span>
<span class="line"><span style="color:#D4D4D4;">    *</span><span style="color:#DCDCAA;">range</span><span style="color:#D4D4D4;">(</span><span style="color:#B5CEA8;">40</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">200</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">]], </span><span style="color:#9CDCFE;">dtype</span><span style="color:#D4D4D4;">=np.uint8)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">line = np.array(</span><span style="color:#DCDCAA;">len</span><span style="color:#D4D4D4;">(src[</span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">]) * [</span><span style="color:#B5CEA8;">160</span><span style="color:#D4D4D4;">], </span><span style="color:#9CDCFE;">dtype</span><span style="color:#D4D4D4;">=np.uint8)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">threshs = [</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#CE9178;">&#39;THRESH_BINARY&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#CE9178;">&#39;THRESH_BINARY_INV&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#CE9178;">&#39;THRESH_TRUNC&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#CE9178;">&#39;THRESH_TOZERO&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#CE9178;">&#39;THRESH_TOZERO_INV&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C586C0;">for</span><span style="color:#D4D4D4;"> name </span><span style="color:#C586C0;">in</span><span style="color:#D4D4D4;"> threshs:</span></span>
<span class="line"><span style="color:#D4D4D4;">    ret, thresh = cv2.threshold(src, </span><span style="color:#B5CEA8;">160</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">255</span><span style="color:#D4D4D4;">, </span><span style="color:#DCDCAA;">getattr</span><span style="color:#D4D4D4;">(cv2, name))</span></span>
<span class="line"><span style="color:#D4D4D4;">    plt.figure(</span><span style="color:#9CDCFE;">figsize</span><span style="color:#D4D4D4;">=(</span><span style="color:#B5CEA8;">6</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">2</span><span style="color:#D4D4D4;">))</span></span>
<span class="line"><span style="color:#D4D4D4;">    plt.subplot(</span><span style="color:#B5CEA8;">121</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">    plt.title(</span><span style="color:#CE9178;">&#39;src&#39;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">    plt.ylim(</span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">255</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">    plt.plot(line)</span></span>
<span class="line"><span style="color:#D4D4D4;">    plt.plot(src[</span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">])</span></span>
<span class="line"><span style="color:#D4D4D4;">    plt.subplot(</span><span style="color:#B5CEA8;">122</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">    plt.title(</span><span style="color:#CE9178;">&#39;cv2.&#39;</span><span style="color:#D4D4D4;"> + name)</span></span>
<span class="line"><span style="color:#D4D4D4;">    plt.ylim(</span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">255</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">    plt.plot(line)</span></span>
<span class="line"><span style="color:#D4D4D4;">    plt.plot(thresh[</span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">])</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#6A9955;"># plt.show()</span></span>
<span class="line"><span style="color:#D4D4D4;">    plt.savefig(name + </span><span style="color:#CE9178;">&#39;.svg&#39;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><div class="language-python line-numbers-mode" data-ext="py"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> cv2</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> numpy </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> np</span></span>
<span class="line"><span style="color:#C586C0;">from</span><span style="color:#D4D4D4;"> matplotlib </span><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> pyplot </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> plt</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">img = cv2.imread(</span><span style="color:#CE9178;">&#39;test.jpg&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">ret, thresh1 = cv2.threshold(img, </span><span style="color:#B5CEA8;">127</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">255</span><span style="color:#D4D4D4;">, cv2.THRESH_BINARY)</span></span>
<span class="line"><span style="color:#D4D4D4;">ret, thresh2 = cv2.threshold(img, </span><span style="color:#B5CEA8;">127</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">255</span><span style="color:#D4D4D4;">, cv2.THRESH_BINARY_INV)</span></span>
<span class="line"><span style="color:#D4D4D4;">ret, thresh3 = cv2.threshold(img, </span><span style="color:#B5CEA8;">127</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">255</span><span style="color:#D4D4D4;">, cv2.THRESH_TRUNC)</span></span>
<span class="line"><span style="color:#D4D4D4;">ret, thresh4 = cv2.threshold(img, </span><span style="color:#B5CEA8;">127</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">255</span><span style="color:#D4D4D4;">, cv2.THRESH_TOZERO)</span></span>
<span class="line"><span style="color:#D4D4D4;">ret, thresh5 = cv2.threshold(img, </span><span style="color:#B5CEA8;">127</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">255</span><span style="color:#D4D4D4;">, cv2.THRESH_TOZERO_INV)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">titles = [</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#CE9178;">&#39;Original Image&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#CE9178;">&#39;THRESH_BINARY&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#CE9178;">&#39;THRESH_BINARY_INV&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#CE9178;">&#39;THRESH_TRUNC&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#CE9178;">&#39;THRESH_TOZERO&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#CE9178;">&#39;THRESH_TOZERO_INV&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">]</span></span>
<span class="line"><span style="color:#D4D4D4;">images = [img, thresh1, thresh2, thresh3, thresh4, thresh5]</span></span>
<span class="line"><span style="color:#C586C0;">for</span><span style="color:#D4D4D4;"> i </span><span style="color:#C586C0;">in</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">range</span><span style="color:#D4D4D4;">(</span><span style="color:#B5CEA8;">6</span><span style="color:#D4D4D4;">):</span></span>
<span class="line"><span style="color:#D4D4D4;">    plt.subplot(</span><span style="color:#B5CEA8;">2</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">3</span><span style="color:#D4D4D4;">, i+</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">), plt.imshow(images[i], </span><span style="color:#CE9178;">&#39;gray&#39;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">    plt.title(titles[i])</span></span>
<span class="line"><span style="color:#D4D4D4;">    plt.xticks([])</span></span>
<span class="line"><span style="color:#D4D4D4;">    plt.yticks([])</span></span>
<span class="line"><span style="color:#D4D4D4;">plt.show()</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="432-自适应阈值" tabindex="-1"><a class="header-anchor" href="#432-自适应阈值" aria-hidden="true">#</a> 4.3.2 自适应阈值</h3><p>在前面的部分我们使用是全局阈值，整幅图像采用同一个数作为阈值。当这种方法并不适应与所有情况，尤其是当同一幅图像上的不同部分的具有不同亮度时，我们需要采用自适应阈值。此时的阈值是根据图像上的每一个小区域计算与其对应的阈值。因此在同一幅图像上的不同区域采用的是不同的阈值，从而使我们能在亮度不同的情况下得到更好的结果。</p><p>此函数返回目标图像，参数如下：</p><ul><li><code>maxValue</code>：最大值</li><li><code>adaptiveMethod</code>：指定计算阈值的方法 <ul><li><code>cv2.ADPTIVE_THRESH_MEAN_C</code>：阈值取自相邻区域的平均值</li><li><code>cv2.ADPTIVE_THRESH_GAUSSIAN_C</code>：阈值取值相邻区域的加权和，权重为一个高斯窗口</li></ul></li><li><code>thresholdType</code>：和上一节一致，二值化方式</li><li><code>blockSize</code>：邻域大小（用来计算阈值的区域大小），只能是奇数</li><li><code>C</code>：这就是是一个常数，阈值就等于的平均值或者加权平均值减去这个常数</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> cv2</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> numpy </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> np</span></span>
<span class="line"><span style="color:#C586C0;">from</span><span style="color:#D4D4D4;"> matplotlib </span><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> pyplot </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> plt</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">img = cv2.imread(</span><span style="color:#CE9178;">&#39;test.jpg&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#6A9955;"># 中值滤波</span></span>
<span class="line"><span style="color:#D4D4D4;">img = cv2.medianBlur(img, </span><span style="color:#B5CEA8;">5</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">ret, th1 = cv2.threshold(img, </span><span style="color:#B5CEA8;">127</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">255</span><span style="color:#D4D4D4;">, cv2.THRESH_BINARY)</span></span>
<span class="line"><span style="color:#6A9955;"># 11 为 Block size, 2 为 C 值</span></span>
<span class="line"><span style="color:#D4D4D4;">th2 = cv2.adaptiveThreshold(img, </span><span style="color:#B5CEA8;">255</span><span style="color:#D4D4D4;">, cv2.ADAPTIVE_THRESH_MEAN_C,</span></span>
<span class="line"><span style="color:#D4D4D4;">                            cv2.THRESH_BINARY, </span><span style="color:#B5CEA8;">11</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">2</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">th3 = cv2.adaptiveThreshold(img, </span><span style="color:#B5CEA8;">255</span><span style="color:#D4D4D4;">, cv2.ADAPTIVE_THRESH_GAUSSIAN_C,</span></span>
<span class="line"><span style="color:#D4D4D4;">                            cv2.THRESH_BINARY, </span><span style="color:#B5CEA8;">11</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">2</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">titles = [</span><span style="color:#CE9178;">&#39;Original Image&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;Global Thresholding (v = 127)&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">          </span><span style="color:#CE9178;">&#39;Adaptive Mean Thresholding&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;Adaptive Gaussian Thresholding&#39;</span><span style="color:#D4D4D4;">]</span></span>
<span class="line"><span style="color:#D4D4D4;">images = [img, th1, th2, th3]</span></span>
<span class="line"><span style="color:#C586C0;">for</span><span style="color:#D4D4D4;"> i </span><span style="color:#C586C0;">in</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">range</span><span style="color:#D4D4D4;">(</span><span style="color:#B5CEA8;">4</span><span style="color:#D4D4D4;">):</span></span>
<span class="line"><span style="color:#D4D4D4;">    plt.subplot(</span><span style="color:#B5CEA8;">2</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">2</span><span style="color:#D4D4D4;">, i+</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">), plt.imshow(images[i], </span><span style="color:#CE9178;">&#39;gray&#39;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">    plt.title(titles[i])</span></span>
<span class="line"><span style="color:#D4D4D4;">    plt.xticks([])</span></span>
<span class="line"><span style="color:#D4D4D4;">    plt.yticks([])</span></span>
<span class="line"><span style="color:#D4D4D4;">plt.show()</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="433-otsus-二值化" tabindex="-1"><a class="header-anchor" href="#433-otsus-二值化" aria-hidden="true">#</a> 4.3.3 Otsu’s 二值化</h3><p>在使用全局阈值时，我们怎么知道我们选取的这个数的好坏呢？答案就是不停的尝试。</p><p>如果是一副双峰图像（简单来说双峰图像是指图像直方图中存在两个峰）呢？我们岂不是应该在两个峰之间的峰谷选一个值作为阈值？这就是 Otsu 二值化要做的。简单来说就是对一副双峰图像自动根据其直方图计算出一个阈值。（对于非双峰图像，这种方法得到的结果可能会不理想）。</p><p>这里用到到的函数还是 <code>cv2.threshold()</code>，但是需要多传入一个参数（<code>flag: cv2.THRESH_OTSU</code>）。这时要把阈值设为 <code>0</code>。然后算法会找到最优阈值，这个最优阈值就是返回值 <code>retVal</code>。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> cv2</span></span>
<span class="line"><span style="color:#C586C0;">from</span><span style="color:#D4D4D4;"> matplotlib </span><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> pyplot </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> plt</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">img = cv2.imread(</span><span style="color:#CE9178;">&#39;test.jpg&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">ret, thresh = cv2.threshold(img, </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">255</span><span style="color:#D4D4D4;">, cv2.THRESH_BINARY + cv2.THRESH_OTSU)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">plt.subplot(</span><span style="color:#B5CEA8;">221</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">plt.imshow(img, </span><span style="color:#9CDCFE;">cmap</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&#39;gray&#39;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">plt.title(</span><span style="color:#CE9178;">&#39;Original&#39;</span><span style="color:#D4D4D4;">);plt.xticks([]);plt.yticks([])</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">plt.subplot(</span><span style="color:#B5CEA8;">222</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">plt.imshow(thresh, </span><span style="color:#9CDCFE;">cmap</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&#39;gray&#39;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">plt.title(</span><span style="color:#CE9178;">&#39;Otsu&#39;</span><span style="color:#D4D4D4;">);plt.xticks([]);plt.yticks([])</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">plt.subplot(</span><span style="color:#B5CEA8;">223</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">plt.hist(img.ravel(), </span><span style="color:#B5CEA8;">256</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">plt.axvline(</span><span style="color:#9CDCFE;">x</span><span style="color:#D4D4D4;">=ret, </span><span style="color:#9CDCFE;">color</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&#39;r&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">linestyle</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&#39;dashed&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">linewidth</span><span style="color:#D4D4D4;">=</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">plt.title(</span><span style="color:#CE9178;">&#39;Histogram&#39;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">plt.show()</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="434-otsus-二值化是如何工作的" tabindex="-1"><a class="header-anchor" href="#434-otsus-二值化是如何工作的" aria-hidden="true">#</a> 4.3.4 Otsu’s 二值化是如何工作的？</h3><p>这一部分演示使用 Python 来实现 Otsu 二值化算法。</p>`,22),F=s("p",null,[a("因为是双峰图，Otsu 算法就是要找到一个阈值（"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"t")]),s("annotation",{encoding:"application/x-tex"},"t")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6151em"}}),s("span",{class:"mord mathnormal"},"t")])])]),a("），使得同一类加权方差最小，需要满足下列关系式：")],-1),G=s("p",{class:"katex-block"},[s("span",{class:"katex-display"},[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[s("semantics",null,[s("mrow",null,[s("msubsup",null,[s("mi",null,"σ"),s("mi",null,"ω"),s("mn",null,"2")]),s("mo",{stretchy:"false"},"("),s("mi",null,"t"),s("mo",{stretchy:"false"},")"),s("mo",null,"="),s("msub",null,[s("mi",null,"q"),s("mn",null,"1")]),s("mo",{stretchy:"false"},"("),s("mi",null,"t"),s("mo",{stretchy:"false"},")"),s("msubsup",null,[s("mi",null,"σ"),s("mn",null,"1"),s("mn",null,"2")]),s("mo",{stretchy:"false"},"("),s("mi",null,"t"),s("mo",{stretchy:"false"},")"),s("mo",null,"+"),s("msub",null,[s("mi",null,"q"),s("mn",null,"2")]),s("mo",{stretchy:"false"},"("),s("mi",null,"t"),s("mo",{stretchy:"false"},")"),s("msubsup",null,[s("mi",null,"σ"),s("mn",null,"2"),s("mn",null,"2")]),s("mo",{stretchy:"false"},"("),s("mi",null,"t"),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"}," \\sigma_\\omega^2(t) = q_1(t)\\sigma^2_1(t) + q_2(t)\\sigma^2_2(t) ")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1.1141em","vertical-align":"-0.25em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"σ"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.8641em"}},[s("span",{style:{top:"-2.453em","margin-left":"-0.0359em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.03588em"}},"ω")])]),s("span",{style:{top:"-3.113em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"2")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.247em"}},[s("span")])])])])]),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal"},"t"),s("span",{class:"mclose"},")"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1.1141em","vertical-align":"-0.25em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"q"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3011em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.0359em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"1")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal"},"t"),s("span",{class:"mclose"},")"),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"σ"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.8641em"}},[s("span",{style:{top:"-2.453em","margin-left":"-0.0359em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"1")])]),s("span",{style:{top:"-3.113em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"2")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.247em"}},[s("span")])])])])]),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal"},"t"),s("span",{class:"mclose"},")"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"+"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1.1141em","vertical-align":"-0.25em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"q"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3011em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.0359em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"2")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal"},"t"),s("span",{class:"mclose"},")"),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"σ"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.8641em"}},[s("span",{style:{top:"-2.453em","margin-left":"-0.0359em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"2")])]),s("span",{style:{top:"-3.113em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"2")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.247em"}},[s("span")])])])])]),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal"},"t"),s("span",{class:"mclose"},")")])])])])],-1),N=s("p",null,"其中",-1),I={class:"katex-block"},P={class:"katex-display"},q={class:"katex"},Y=s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[s("semantics",null,[s("mrow",null,[s("mo",{fence:"true"},"{"),s("mtable",{rowspacing:"0.25em",columnalign:"right",columnspacing:""},[s("mtr",null,[s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"true"},[s("mrow",null,[s("msub",null,[s("mi",null,"q"),s("mn",null,"1")]),s("mo",{stretchy:"false"},"("),s("mi",null,"t"),s("mo",{stretchy:"false"},")"),s("mo",null,"="),s("munderover",null,[s("mo",null,"∑"),s("mrow",null,[s("mi",null,"i"),s("mo",null,"="),s("mn",null,"1")]),s("mi",null,"t")]),s("mi",null,"P"),s("mo",{stretchy:"false"},"("),s("mi",null,"i"),s("mo",{stretchy:"false"},")")])])])]),s("mtr",null,[s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"true"},[s("mrow",null,[s("msub",null,[s("mi",null,"q"),s("mn",null,"2")]),s("mo",{stretchy:"false"},"("),s("mi",null,"t"),s("mo",{stretchy:"false"},")"),s("mo",null,"="),s("munderover",null,[s("mo",null,"∑"),s("mrow",null,[s("mi",null,"i"),s("mo",null,"="),s("mi",null,"t"),s("mo",null,"+"),s("mn",null,"1")]),s("mi",null,"I")]),s("mi",null,"P"),s("mo",{stretchy:"false"},"("),s("mi",null,"i"),s("mo",{stretchy:"false"},")")])])])])])]),s("annotation",{encoding:"application/x-tex"}," \\left\\{ \\begin{aligned} q_1(t) = \\sum_{i=1}^t P(i) \\\\ q_2(t) = \\sum_{i=t+1}^I P(i) \\end{aligned} \\right. ")])])],-1),K={class:"katex-html","aria-hidden":"true"},j={class:"base"},U=s("span",{class:"strut",style:{height:"6.8226em","vertical-align":"-3.1613em"}},null,-1),Z={class:"minner"},W={class:"mopen"},Q={class:"delimsizing mult"},X={class:"vlist-t vlist-t2"},J={class:"vlist-r"},$={class:"vlist",style:{height:"3.55em"}},ss=s("span",{style:{top:"-1.366em"}},[s("span",{class:"pstrut",style:{height:"3.516em"}}),s("span",{class:"delimsizinginner delim-size4"},[s("span",null,"⎩")])],-1),as={style:{top:"-1.358em"}},ls=s("span",{class:"pstrut",style:{height:"3.516em"}},null,-1),ns={style:{height:"1.516em",width:"0.8889em"}},es={xmlns:"http://www.w3.org/2000/svg",width:"0.8889em",height:"1.516em",style:{width:"0.8889em"},viewBox:"0 0 888.89 1516",preserveAspectRatio:"xMinYMin"},ps=s("path",{d:"M384 0 H504 V1516 H384z M384 0 H504 V1516 H384z"},null,-1),ts=[ps],is=s("span",{style:{top:"-3.516em"}},[s("span",{class:"pstrut",style:{height:"3.516em"}}),s("span",{class:"delimsizinginner delim-size4"},[s("span",null,"⎨")])],-1),cs={style:{top:"-4.658em"}},os=s("span",{class:"pstrut",style:{height:"3.516em"}},null,-1),rs={style:{height:"1.516em",width:"0.8889em"}},ms={xmlns:"http://www.w3.org/2000/svg",width:"0.8889em",height:"1.516em",style:{width:"0.8889em"},viewBox:"0 0 888.89 1516",preserveAspectRatio:"xMinYMin"},ds=s("path",{d:"M384 0 H504 V1516 H384z M384 0 H504 V1516 H384z"},null,-1),ys=[ds],hs=s("span",{style:{top:"-6.166em"}},[s("span",{class:"pstrut",style:{height:"3.516em"}}),s("span",{class:"delimsizinginner delim-size4"},[s("span",null,"⎧")])],-1),Ds=s("span",{class:"vlist-s"},"​",-1),us=s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"3.05em"}},[s("span")])],-1),vs=l('<span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.6613em;"><span style="top:-5.7091em;"><span class="pstrut" style="height:3.8283em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.7806em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mclose">)</span></span></span><span style="top:-2.3031em;"><span class="pstrut" style="height:3.8283em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mathnormal mtight">t</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07847em;">I</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.336em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.1613em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span>',2),gs={class:"katex-block"},bs={class:"katex-display"},Cs={class:"katex"},Es=s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[s("semantics",null,[s("mrow",null,[s("mo",{fence:"true"},"{"),s("mtable",{rowspacing:"0.25em",columnalign:"right left",columnspacing:"0em"},[s("mtr",null,[s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"true"},[s("mrow",null,[s("msub",null,[s("mi",null,"μ"),s("mn",null,"1")]),s("mo",{stretchy:"false"},"("),s("mi",null,"t"),s("mo",{stretchy:"false"},")")])])]),s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"true"},[s("mrow",null,[s("mrow"),s("mo",null,"="),s("munderover",null,[s("mo",null,"∑"),s("mrow",null,[s("mi",null,"i"),s("mo",null,"="),s("mn",null,"1")]),s("mi",null,"t")]),s("mfrac",null,[s("mrow",null,[s("mi",null,"i"),s("mi",null,"P"),s("mo",{stretchy:"false"},"("),s("mi",null,"i"),s("mo",{stretchy:"false"},")")]),s("mrow",null,[s("msub",null,[s("mi",null,"q"),s("mn",null,"1")]),s("mo",{stretchy:"false"},"("),s("mi",null,"t"),s("mo",{stretchy:"false"},")")])])])])])]),s("mtr",null,[s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"true"},[s("mrow",null,[s("msub",null,[s("mi",null,"μ"),s("mn",null,"2")]),s("mo",{stretchy:"false"},"("),s("mi",null,"t"),s("mo",{stretchy:"false"},")")])])]),s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"true"},[s("mrow",null,[s("mrow"),s("mo",null,"="),s("munderover",null,[s("mo",null,"∑"),s("mrow",null,[s("mi",null,"i"),s("mo",null,"="),s("mi",null,"t"),s("mo",null,"+"),s("mn",null,"1")]),s("mi",null,"I")]),s("mfrac",null,[s("mrow",null,[s("mi",null,"i"),s("mi",null,"P"),s("mo",{stretchy:"false"},"("),s("mi",null,"i"),s("mo",{stretchy:"false"},")")]),s("mrow",null,[s("msub",null,[s("mi",null,"q"),s("mn",null,"2")]),s("mo",{stretchy:"false"},"("),s("mi",null,"t"),s("mo",{stretchy:"false"},")")])])])])])])])]),s("annotation",{encoding:"application/x-tex"}," \\left\\{ \\begin{aligned} \\mu_1(t) &= \\sum_{i=1}^t \\frac{iP(i)}{q_1(t)} \\\\ \\mu_2(t) &= \\sum_{i=t+1}^I \\frac{iP(i)}{q_2(t)} \\end{aligned} \\right. ")])])],-1),xs={class:"katex-html","aria-hidden":"true"},ws={class:"base"},_s=s("span",{class:"strut",style:{height:"6.8226em","vertical-align":"-3.1613em"}},null,-1),fs={class:"minner"},As={class:"mopen"},ks={class:"delimsizing mult"},Bs={class:"vlist-t vlist-t2"},zs={class:"vlist-r"},Ms={class:"vlist",style:{height:"3.55em"}},Hs=s("span",{style:{top:"-1.366em"}},[s("span",{class:"pstrut",style:{height:"3.516em"}}),s("span",{class:"delimsizinginner delim-size4"},[s("span",null,"⎩")])],-1),Vs={style:{top:"-1.358em"}},Rs=s("span",{class:"pstrut",style:{height:"3.516em"}},null,-1),Ss={style:{height:"1.516em",width:"0.8889em"}},Os={xmlns:"http://www.w3.org/2000/svg",width:"0.8889em",height:"1.516em",style:{width:"0.8889em"},viewBox:"0 0 888.89 1516",preserveAspectRatio:"xMinYMin"},Ts=s("path",{d:"M384 0 H504 V1516 H384z M384 0 H504 V1516 H384z"},null,-1),Ls=[Ts],Fs=s("span",{style:{top:"-3.516em"}},[s("span",{class:"pstrut",style:{height:"3.516em"}}),s("span",{class:"delimsizinginner delim-size4"},[s("span",null,"⎨")])],-1),Gs={style:{top:"-4.658em"}},Ns=s("span",{class:"pstrut",style:{height:"3.516em"}},null,-1),Is={style:{height:"1.516em",width:"0.8889em"}},Ps={xmlns:"http://www.w3.org/2000/svg",width:"0.8889em",height:"1.516em",style:{width:"0.8889em"},viewBox:"0 0 888.89 1516",preserveAspectRatio:"xMinYMin"},qs=s("path",{d:"M384 0 H504 V1516 H384z M384 0 H504 V1516 H384z"},null,-1),Ys=[qs],Ks=s("span",{style:{top:"-6.166em"}},[s("span",{class:"pstrut",style:{height:"3.516em"}}),s("span",{class:"delimsizinginner delim-size4"},[s("span",null,"⎧")])],-1),js=s("span",{class:"vlist-s"},"​",-1),Us=s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"3.05em"}},[s("span")])],-1),Zs=l('<span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.6613em;"><span style="top:-5.7091em;"><span class="pstrut" style="height:3.8283em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mclose">)</span></span></span><span style="top:-2.3031em;"><span class="pstrut" style="height:3.8283em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.1613em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.6613em;"><span style="top:-5.7091em;"><span class="pstrut" style="height:3.8283em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.7806em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mclose">)</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-2.3031em;"><span class="pstrut" style="height:3.8283em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mathnormal mtight">t</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07847em;">I</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.336em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mclose">)</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.1613em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span>',2),Ws={class:"katex-block"},Qs={class:"katex-display"},Xs={class:"katex"},Js=s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[s("semantics",null,[s("mrow",null,[s("mo",{fence:"true"},"{"),s("mtable",{rowspacing:"0.25em",columnalign:"right left",columnspacing:"0em"},[s("mtr",null,[s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"true"},[s("mrow",null,[s("msubsup",null,[s("mi",null,"σ"),s("mn",null,"1"),s("mn",null,"2")]),s("mo",{stretchy:"false"},"("),s("mi",null,"t"),s("mo",{stretchy:"false"},")")])])]),s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"true"},[s("mrow",null,[s("mrow"),s("mo",null,"="),s("munderover",null,[s("mo",null,"∑"),s("mrow",null,[s("mi",null,"i"),s("mo",null,"="),s("mn",null,"1")]),s("mi",null,"t")]),s("msup",null,[s("mrow",null,[s("mo",{fence:"true"},"("),s("mi",null,"i"),s("mo",null,"−"),s("msub",null,[s("mi",null,"μ"),s("mn",null,"1")]),s("mo",{stretchy:"false"},"("),s("mi",null,"t"),s("mo",{stretchy:"false"},")"),s("mo",{fence:"true"},")")]),s("mn",null,"2")]),s("mfrac",null,[s("mrow",null,[s("mi",null,"P"),s("mo",{stretchy:"false"},"("),s("mi",null,"i"),s("mo",{stretchy:"false"},")")]),s("mrow",null,[s("msub",null,[s("mi",null,"q"),s("mn",null,"1")]),s("mo",{stretchy:"false"},"("),s("mi",null,"t"),s("mo",{stretchy:"false"},")")])])])])])]),s("mtr",null,[s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"true"},[s("mrow",null,[s("msubsup",null,[s("mi",null,"σ"),s("mn",null,"2"),s("mn",null,"2")]),s("mo",{stretchy:"false"},"("),s("mi",null,"t"),s("mo",{stretchy:"false"},")")])])]),s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"true"},[s("mrow",null,[s("mrow"),s("mo",null,"="),s("munderover",null,[s("mo",null,"∑"),s("mrow",null,[s("mi",null,"i"),s("mo",null,"="),s("mi",null,"t"),s("mo",null,"+"),s("mn",null,"1")]),s("mi",null,"I")]),s("msup",null,[s("mrow",null,[s("mo",{fence:"true"},"("),s("mi",null,"i"),s("mo",null,"−"),s("msub",null,[s("mi",null,"μ"),s("mn",null,"2")]),s("mo",{stretchy:"false"},"("),s("mi",null,"t"),s("mo",{stretchy:"false"},")"),s("mo",{fence:"true"},")")]),s("mn",null,"2")]),s("mfrac",null,[s("mrow",null,[s("mi",null,"P"),s("mo",{stretchy:"false"},"("),s("mi",null,"i"),s("mo",{stretchy:"false"},")")]),s("mrow",null,[s("msub",null,[s("mi",null,"q"),s("mn",null,"2")]),s("mo",{stretchy:"false"},"("),s("mi",null,"t"),s("mo",{stretchy:"false"},")")])])])])])])])]),s("annotation",{encoding:"application/x-tex"}," \\left\\{ \\begin{aligned} \\sigma _1^2(t) &= \\sum_{i=1}^t\\left(i - \\mu_1(t)\\right)^2 \\frac{P(i)}{q_1(t)} \\\\ \\sigma _2^2(t) &= \\sum_{i=t+1}^I\\left(i - \\mu_2(t)\\right)^2 \\frac{P(i)}{q_2(t)} \\end{aligned} \\right. ")])])],-1),$s={class:"katex-html","aria-hidden":"true"},sa={class:"base"},aa=s("span",{class:"strut",style:{height:"6.8226em","vertical-align":"-3.1613em"}},null,-1),la={class:"minner"},na={class:"mopen"},ea={class:"delimsizing mult"},pa={class:"vlist-t vlist-t2"},ta={class:"vlist-r"},ia={class:"vlist",style:{height:"3.55em"}},ca=s("span",{style:{top:"-1.366em"}},[s("span",{class:"pstrut",style:{height:"3.516em"}}),s("span",{class:"delimsizinginner delim-size4"},[s("span",null,"⎩")])],-1),oa={style:{top:"-1.358em"}},ra=s("span",{class:"pstrut",style:{height:"3.516em"}},null,-1),ma={style:{height:"1.516em",width:"0.8889em"}},da={xmlns:"http://www.w3.org/2000/svg",width:"0.8889em",height:"1.516em",style:{width:"0.8889em"},viewBox:"0 0 888.89 1516",preserveAspectRatio:"xMinYMin"},ya=s("path",{d:"M384 0 H504 V1516 H384z M384 0 H504 V1516 H384z"},null,-1),ha=[ya],Da=s("span",{style:{top:"-3.516em"}},[s("span",{class:"pstrut",style:{height:"3.516em"}}),s("span",{class:"delimsizinginner delim-size4"},[s("span",null,"⎨")])],-1),ua={style:{top:"-4.658em"}},va=s("span",{class:"pstrut",style:{height:"3.516em"}},null,-1),ga={style:{height:"1.516em",width:"0.8889em"}},ba={xmlns:"http://www.w3.org/2000/svg",width:"0.8889em",height:"1.516em",style:{width:"0.8889em"},viewBox:"0 0 888.89 1516",preserveAspectRatio:"xMinYMin"},Ca=s("path",{d:"M384 0 H504 V1516 H384z M384 0 H504 V1516 H384z"},null,-1),Ea=[Ca],xa=s("span",{style:{top:"-6.166em"}},[s("span",{class:"pstrut",style:{height:"3.516em"}}),s("span",{class:"delimsizinginner delim-size4"},[s("span",null,"⎧")])],-1),wa=s("span",{class:"vlist-s"},"​",-1),_a=s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"3.05em"}},[s("span")])],-1),fa=l('<span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.6613em;"><span style="top:-5.7091em;"><span class="pstrut" style="height:3.8283em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-2.453em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mclose">)</span></span></span><span style="top:-2.3031em;"><span class="pstrut" style="height:3.8283em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-2.453em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.1613em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.6613em;"><span style="top:-5.7091em;"><span class="pstrut" style="height:3.8283em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.7806em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mclose">)</span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.954em;"><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mclose">)</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-2.3031em;"><span class="pstrut" style="height:3.8283em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mathnormal mtight">t</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07847em;">I</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.336em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mclose">)</span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.954em;"><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mclose">)</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.1613em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span>',2),Aa=l(`<div class="language-python line-numbers-mode" data-ext="py"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> numpy </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> np</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> cv2</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">img = cv2.imread(</span><span style="color:#CE9178;">&#39;t1.jpg&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">blur = cv2.GaussianBlur(img, (</span><span style="color:#B5CEA8;">5</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">5</span><span style="color:#D4D4D4;">), </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">hist = cv2.calcHist([blur], [</span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">], </span><span style="color:#569CD6;">None</span><span style="color:#D4D4D4;">, [</span><span style="color:#B5CEA8;">256</span><span style="color:#D4D4D4;">], [</span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">256</span><span style="color:#D4D4D4;">])</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">hist_norm = hist.ravel() / hist.max()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">Q = hist_norm.cumsum()</span></span>
<span class="line"><span style="color:#D4D4D4;">bins = np.arange(</span><span style="color:#B5CEA8;">256</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">fn_min = np.inf</span></span>
<span class="line"><span style="color:#D4D4D4;">thresh = -</span><span style="color:#B5CEA8;">1</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C586C0;">for</span><span style="color:#D4D4D4;"> i </span><span style="color:#C586C0;">in</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">range</span><span style="color:#D4D4D4;">(</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">256</span><span style="color:#D4D4D4;">):</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#6A9955;"># probabilities</span></span>
<span class="line"><span style="color:#D4D4D4;">    p1, p2 = np.hsplit(hist_norm, [i])</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#6A9955;"># cum sum of classes</span></span>
<span class="line"><span style="color:#D4D4D4;">    q1, q2 = Q[i], Q[</span><span style="color:#B5CEA8;">255</span><span style="color:#D4D4D4;">]-Q[i]</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#6A9955;"># weights</span></span>
<span class="line"><span style="color:#D4D4D4;">    b1, b2 = np.hsplit(bins, [i])</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#6A9955;"># finding means and variances</span></span>
<span class="line"><span style="color:#D4D4D4;">    m1, m2 = np.sum(p1 * b1) / q1, np.sum(p2 * b2) / q2</span></span>
<span class="line"><span style="color:#D4D4D4;">    v1 = np.sum(((b1 - m1) ** </span><span style="color:#B5CEA8;">2</span><span style="color:#D4D4D4;">) * p1) / q1</span></span>
<span class="line"><span style="color:#D4D4D4;">    v2 = np.sum(((b2 - m2) ** </span><span style="color:#B5CEA8;">2</span><span style="color:#D4D4D4;">) * p2) / q2</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#6A9955;"># calculates the minimization function</span></span>
<span class="line"><span style="color:#D4D4D4;">    fn = v1 * q1 + v2 * q2</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">if</span><span style="color:#D4D4D4;"> fn &lt; fn_min:</span></span>
<span class="line"><span style="color:#D4D4D4;">        fn_min = fn</span></span>
<span class="line"><span style="color:#D4D4D4;">        thresh = i</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">##  find otsu&#39;s threshold value with OpenCV function</span></span>
<span class="line"><span style="color:#D4D4D4;">ret, otsu = cv2.threshold(blur, </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">255</span><span style="color:#D4D4D4;">, cv2.THRESH_BINARY +</span></span>
<span class="line"><span style="color:#D4D4D4;">                          cv2.THRESH_OTSU)</span></span>
<span class="line"><span style="color:#DCDCAA;">print</span><span style="color:#D4D4D4;">(thresh, ret)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="44-图像平滑" tabindex="-1"><a class="header-anchor" href="#44-图像平滑" aria-hidden="true">#</a> 4.4 图像平滑</h2><details class="hint-container details"><summary>学习目标</summary><ul><li>使用不同的低通滤波器对图像进行模糊</li><li>自定义的滤波器对图像进行卷积（2D 卷积）</li></ul></details><h3 id="2d-卷积" tabindex="-1"><a class="header-anchor" href="#2d-卷积" aria-hidden="true">#</a> 2D 卷积</h3><p>与以为信号一样，我们也可以对 2D 图像实施低通滤波（LPF），高通滤波（HPF）等。LPF 帮助我们去除噪音，模糊图像。HPF 帮助我们找到图像的边缘。</p><p>OpenCV 提供的函数 <code>cv.filter2D()</code> 可以让我们对一幅图像进行卷积操作。下面我们将对一幅图像使用平均滤波器。</p>`,6),ka=s("p",null,[a("下面是一个 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mn",null,"5"),s("mo",null,"×"),s("mn",null,"5")]),s("annotation",{encoding:"application/x-tex"},"5 \\times 5")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.7278em","vertical-align":"-0.0833em"}}),s("span",{class:"mord"},"5"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"×"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6444em"}}),s("span",{class:"mord"},"5")])])]),a(" 的平均滤波器核：")],-1),Ba=s("p",{class:"katex-block"},[s("span",{class:"katex-display"},[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[s("semantics",null,[s("mrow",null,[s("mi",null,"K"),s("mo",null,"="),s("mfrac",null,[s("mn",null,"1"),s("mn",null,"25")]),s("mrow",null,[s("mo",{fence:"true"},"["),s("mtable",{rowspacing:"0.16em",columnalign:"center center center center center",columnspacing:"1em"},[s("mtr",null,[s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mn",null,"1")])]),s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mn",null,"1")])]),s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mn",null,"1")])]),s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mn",null,"1")])]),s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mn",null,"1")])])]),s("mtr",null,[s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mn",null,"1")])]),s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mn",null,"1")])]),s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mn",null,"1")])]),s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mn",null,"1")])]),s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mn",null,"1")])])]),s("mtr",null,[s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mn",null,"1")])]),s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mn",null,"1")])]),s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mn",null,"1")])]),s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mn",null,"1")])]),s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mn",null,"1")])])]),s("mtr",null,[s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mn",null,"1")])]),s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mn",null,"1")])]),s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mn",null,"1")])]),s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mn",null,"1")])]),s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mn",null,"1")])])]),s("mtr",null,[s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mn",null,"1")])]),s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mn",null,"1")])]),s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mn",null,"1")])]),s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mn",null,"1")])]),s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mn",null,"1")])])])]),s("mo",{fence:"true"},"]")])]),s("annotation",{encoding:"application/x-tex"}," K = \\frac{1}{25} \\begin{bmatrix} 1 & 1 & 1 & 1 & 1 \\\\ 1 & 1 & 1 & 1 & 1 \\\\ 1 & 1 & 1 & 1 & 1 \\\\ 1 & 1 & 1 & 1 & 1 \\\\ 1 & 1 & 1 & 1 & 1 \\end{bmatrix} ")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6833em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.07153em"}},"K"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"6em","vertical-align":"-2.75em"}}),s("span",{class:"mord"},[s("span",{class:"mopen nulldelimiter"}),s("span",{class:"mfrac"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.3214em"}},[s("span",{style:{top:"-2.314em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"25")])]),s("span",{style:{top:"-3.23em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"frac-line",style:{"border-bottom-width":"0.04em"}})]),s("span",{style:{top:"-3.677em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"1")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.686em"}},[s("span")])])])]),s("span",{class:"mclose nulldelimiter"})]),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"minner"},[s("span",{class:"mopen"},[s("span",{class:"delimsizing mult"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"3.25em"}},[s("span",{style:{top:"-5.25em"}},[s("span",{class:"pstrut",style:{height:"8em"}}),s("span",{style:{width:"0.667em",height:"6.000em"}},[s("svg",{xmlns:"http://www.w3.org/2000/svg",width:"0.667em",height:"6.000em",viewBox:"0 0 667 6000"},[s("path",{d:`M403 1759 V84 H666 V0 H319 V1759 v2400 v1759 h347 v-84
H403z M403 1759 V0 H319 V1759 v2400 v1759 h84z`})])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"2.75em"}},[s("span")])])])])]),s("span",{class:"mord"},[s("span",{class:"mtable"},[s("span",{class:"col-align-c"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"3.25em"}},[s("span",{style:{top:"-5.41em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"1")])]),s("span",{style:{top:"-4.21em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"1")])]),s("span",{style:{top:"-3.01em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"1")])]),s("span",{style:{top:"-1.81em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"1")])]),s("span",{style:{top:"-0.61em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"1")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"2.75em"}},[s("span")])])])]),s("span",{class:"arraycolsep",style:{width:"0.5em"}}),s("span",{class:"arraycolsep",style:{width:"0.5em"}}),s("span",{class:"col-align-c"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"3.25em"}},[s("span",{style:{top:"-5.41em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"1")])]),s("span",{style:{top:"-4.21em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"1")])]),s("span",{style:{top:"-3.01em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"1")])]),s("span",{style:{top:"-1.81em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"1")])]),s("span",{style:{top:"-0.61em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"1")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"2.75em"}},[s("span")])])])]),s("span",{class:"arraycolsep",style:{width:"0.5em"}}),s("span",{class:"arraycolsep",style:{width:"0.5em"}}),s("span",{class:"col-align-c"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"3.25em"}},[s("span",{style:{top:"-5.41em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"1")])]),s("span",{style:{top:"-4.21em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"1")])]),s("span",{style:{top:"-3.01em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"1")])]),s("span",{style:{top:"-1.81em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"1")])]),s("span",{style:{top:"-0.61em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"1")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"2.75em"}},[s("span")])])])]),s("span",{class:"arraycolsep",style:{width:"0.5em"}}),s("span",{class:"arraycolsep",style:{width:"0.5em"}}),s("span",{class:"col-align-c"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"3.25em"}},[s("span",{style:{top:"-5.41em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"1")])]),s("span",{style:{top:"-4.21em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"1")])]),s("span",{style:{top:"-3.01em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"1")])]),s("span",{style:{top:"-1.81em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"1")])]),s("span",{style:{top:"-0.61em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"1")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"2.75em"}},[s("span")])])])]),s("span",{class:"arraycolsep",style:{width:"0.5em"}}),s("span",{class:"arraycolsep",style:{width:"0.5em"}}),s("span",{class:"col-align-c"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"3.25em"}},[s("span",{style:{top:"-5.41em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"1")])]),s("span",{style:{top:"-4.21em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"1")])]),s("span",{style:{top:"-3.01em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"1")])]),s("span",{style:{top:"-1.81em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"1")])]),s("span",{style:{top:"-0.61em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"1")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"2.75em"}},[s("span")])])])])])]),s("span",{class:"mclose"},[s("span",{class:"delimsizing mult"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"3.25em"}},[s("span",{style:{top:"-5.25em"}},[s("span",{class:"pstrut",style:{height:"8em"}}),s("span",{style:{width:"0.667em",height:"6.000em"}},[s("svg",{xmlns:"http://www.w3.org/2000/svg",width:"0.667em",height:"6.000em",viewBox:"0 0 667 6000"},[s("path",{d:`M347 1759 V0 H0 V84 H263 V1759 v2400 v1759 H0 v84 H347z
M347 1759 V0 H263 V1759 v2400 v1759 h84z`})])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"2.75em"}},[s("span")])])])])])])])])])])],-1),za=s("p",null,"操作：",-1),Ma=s("ol",null,[s("li",null,[a("将核放在图像的一个像素 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"A")]),s("annotation",{encoding:"application/x-tex"},"A")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6833em"}}),s("span",{class:"mord mathnormal"},"A")])])]),a(" 上")]),s("li",null,[a("求与核对应的图像上 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mn",null,"25")]),s("annotation",{encoding:"application/x-tex"},"25")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6444em"}}),s("span",{class:"mord"},"25")])])]),a("（"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mn",null,"5"),s("mo",null,"×"),s("mn",null,"5")]),s("annotation",{encoding:"application/x-tex"},"5 \\times 5")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.7278em","vertical-align":"-0.0833em"}}),s("span",{class:"mord"},"5"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"×"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6444em"}}),s("span",{class:"mord"},"5")])])]),a("）个像素的和，取平均数，用这个平均数替代像素 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"A")]),s("annotation",{encoding:"application/x-tex"},"A")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6833em"}}),s("span",{class:"mord mathnormal"},"A")])])]),a(" 的值")]),s("li",null,"重复以上操作直到图像的每一个像素值都更新一遍")],-1),Ha=l(`<div class="language-python line-numbers-mode" data-ext="py"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> cv2</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> numpy </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> np</span></span>
<span class="line"><span style="color:#C586C0;">from</span><span style="color:#D4D4D4;"> matplotlib </span><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> pyplot </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> plt</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">img = cv2.imread(</span><span style="color:#CE9178;">&#39;t1.jpg&#39;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">kernel = np.ones((</span><span style="color:#B5CEA8;">5</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">5</span><span style="color:#D4D4D4;">), </span><span style="color:#9CDCFE;">dtype</span><span style="color:#D4D4D4;">=np.float32) / </span><span style="color:#B5CEA8;">25</span></span>
<span class="line"><span style="color:#D4D4D4;">dst = cv2.filter2D(img, -</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">, kernel)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">plt.subplot(</span><span style="color:#B5CEA8;">121</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">plt.imshow(img[:, :, ::-</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">])</span></span>
<span class="line"><span style="color:#D4D4D4;">plt.title(</span><span style="color:#CE9178;">&#39;Original&#39;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">plt.subplot(</span><span style="color:#B5CEA8;">122</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">plt.imshow(dst[:, :, ::-</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">])</span></span>
<span class="line"><span style="color:#D4D4D4;">plt.title(</span><span style="color:#CE9178;">&#39;Averaging&#39;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">plt.show()</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="图像模糊图像平滑" tabindex="-1"><a class="header-anchor" href="#图像模糊图像平滑" aria-hidden="true">#</a> 图像模糊（图像平滑）</h3><p>使用低通滤波器可以达到图像模糊的目的。这对与去除噪音很有帮助。其实就是去除图像中的高频成分（比如：噪音，边界）。所以边界也会被模糊一点。（当然，也有一些模糊技术不会模糊掉边界）。OpenCV 提供了四种模糊技术。</p><p><strong>滤波器</strong>（Filter）和 <strong>卷积核</strong>（Convolution Kernel）可能会指代同一个对象，也可以称之为过滤器。</p><h3 id="441-平均" tabindex="-1"><a class="header-anchor" href="#441-平均" aria-hidden="true">#</a> 4.4.1 平均</h3>`,5),Va=s("p",null,[a("这是由一个归一化卷积核完成的。它只是用卷积核覆盖区域所有像素的平均值来代替中心元素。可以使用函数 "),s("code",null,"cv2.blur()"),a(" 和 "),s("code",null,"cv2.boxFilter()"),a(" 来完这个任务。可以同看查看文档了解更多卷积核的细节。我们需要设定卷积核的宽和高。下面是一个 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mn",null,"3"),s("mo",null,"×"),s("mn",null,"3")]),s("annotation",{encoding:"application/x-tex"},"3 \\times 3")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.7278em","vertical-align":"-0.0833em"}}),s("span",{class:"mord"},"3"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"×"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6444em"}}),s("span",{class:"mord"},"3")])])]),a(" 的归一化卷积核：")],-1),Ra=s("p",{class:"katex-block"},[s("span",{class:"katex-display"},[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[s("semantics",null,[s("mrow",null,[s("mi",null,"K"),s("mo",null,"="),s("mfrac",null,[s("mn",null,"1"),s("mn",null,"9")]),s("mrow",null,[s("mo",{fence:"true"},"["),s("mtable",{rowspacing:"0.16em",columnalign:"center center center",columnspacing:"1em"},[s("mtr",null,[s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mn",null,"1")])]),s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mn",null,"1")])]),s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mn",null,"1")])])]),s("mtr",null,[s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mn",null,"1")])]),s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mn",null,"1")])]),s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mn",null,"1")])])]),s("mtr",null,[s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mn",null,"1")])]),s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mn",null,"1")])]),s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mn",null,"1")])])])]),s("mo",{fence:"true"},"]")])]),s("annotation",{encoding:"application/x-tex"}," K = \\frac{1}{9} \\begin{bmatrix} 1 & 1 & 1 \\\\ 1 & 1 & 1 \\\\ 1 & 1 & 1 \\end{bmatrix} ")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6833em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.07153em"}},"K"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"3.6em","vertical-align":"-1.55em"}}),s("span",{class:"mord"},[s("span",{class:"mopen nulldelimiter"}),s("span",{class:"mfrac"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.3214em"}},[s("span",{style:{top:"-2.314em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"9")])]),s("span",{style:{top:"-3.23em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"frac-line",style:{"border-bottom-width":"0.04em"}})]),s("span",{style:{top:"-3.677em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"1")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.686em"}},[s("span")])])])]),s("span",{class:"mclose nulldelimiter"})]),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"minner"},[s("span",{class:"mopen"},[s("span",{class:"delimsizing mult"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"2.05em"}},[s("span",{style:{top:"-4.05em"}},[s("span",{class:"pstrut",style:{height:"5.6em"}}),s("span",{style:{width:"0.667em",height:"3.600em"}},[s("svg",{xmlns:"http://www.w3.org/2000/svg",width:"0.667em",height:"3.600em",viewBox:"0 0 667 3600"},[s("path",{d:`M403 1759 V84 H666 V0 H319 V1759 v0 v1759 h347 v-84
H403z M403 1759 V0 H319 V1759 v0 v1759 h84z`})])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.55em"}},[s("span")])])])])]),s("span",{class:"mord"},[s("span",{class:"mtable"},[s("span",{class:"col-align-c"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"2.05em"}},[s("span",{style:{top:"-4.21em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"1")])]),s("span",{style:{top:"-3.01em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"1")])]),s("span",{style:{top:"-1.81em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"1")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.55em"}},[s("span")])])])]),s("span",{class:"arraycolsep",style:{width:"0.5em"}}),s("span",{class:"arraycolsep",style:{width:"0.5em"}}),s("span",{class:"col-align-c"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"2.05em"}},[s("span",{style:{top:"-4.21em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"1")])]),s("span",{style:{top:"-3.01em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"1")])]),s("span",{style:{top:"-1.81em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"1")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.55em"}},[s("span")])])])]),s("span",{class:"arraycolsep",style:{width:"0.5em"}}),s("span",{class:"arraycolsep",style:{width:"0.5em"}}),s("span",{class:"col-align-c"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"2.05em"}},[s("span",{style:{top:"-4.21em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"1")])]),s("span",{style:{top:"-3.01em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"1")])]),s("span",{style:{top:"-1.81em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"1")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.55em"}},[s("span")])])])])])]),s("span",{class:"mclose"},[s("span",{class:"delimsizing mult"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"2.05em"}},[s("span",{style:{top:"-4.05em"}},[s("span",{class:"pstrut",style:{height:"5.6em"}}),s("span",{style:{width:"0.667em",height:"3.600em"}},[s("svg",{xmlns:"http://www.w3.org/2000/svg",width:"0.667em",height:"3.600em",viewBox:"0 0 667 3600"},[s("path",{d:`M347 1759 V0 H0 V84 H263 V1759 v0 v1759 H0 v84 H347z
M347 1759 V0 H263 V1759 v0 v1759 h84z`})])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.55em"}},[s("span")])])])])])])])])])])],-1),Sa=l(`<div class="hint-container info"><p class="hint-container-title">不进行归一化</p><p>如果你不想使用归一化卷积核，你应该使用 <code>cv2.boxFilter()</code>，这时要传入参数 <code>normalize=False</code>。</p></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> cv2</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> matplotlib.pyplot </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> plt</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">img = cv2.imread(</span><span style="color:#CE9178;">&#39;t1.jpg&#39;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">blur = cv2.blur(img, (</span><span style="color:#B5CEA8;">5</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">5</span><span style="color:#D4D4D4;">))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">plt.subplot(</span><span style="color:#B5CEA8;">121</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">plt.imshow(img[:, :, ::-</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">])</span></span>
<span class="line"><span style="color:#D4D4D4;">plt.title(</span><span style="color:#CE9178;">&#39;Original&#39;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">plt.subplot(</span><span style="color:#B5CEA8;">122</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">plt.imshow(blur[:, :, ::-</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">])</span></span>
<span class="line"><span style="color:#D4D4D4;">plt.title(</span><span style="color:#CE9178;">&#39;Blurred&#39;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">plt.show()</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="442-高斯模糊" tabindex="-1"><a class="header-anchor" href="#442-高斯模糊" aria-hidden="true">#</a> 4.4.2 高斯模糊</h3><p>现在把卷积核换成高斯核（卷积核内的值是符合高斯分布的，核中心的值最大，其余根据距离核中心元素的距离递减，构成一个高斯小山包。原来的求平均数现在变成求加权平均数，全就是卷积核里的值）。</p><p>实现的函数是 <code>cv2.GaussianBlur()</code>。我们需要：</p><ul><li>指定高斯核的宽和高（必须是奇数）</li><li>以及高斯函数沿 X，Y 方向的标准差</li></ul>`,6),Oa=s("p",null,[a("如果我们只指定了 X 方向的的标准差，Y 方向也会取相同值。如果两个标准差都是 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mn",null,"0")]),s("annotation",{encoding:"application/x-tex"},"0")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6444em"}}),s("span",{class:"mord"},"0")])])]),a("，那么函数会根据核函数的大小自己计算。高斯滤波可以有效的从图像中去除高斯噪音。")],-1),Ta=l(`<p>如果你愿意的话，你也可以使用函数 <code>cv2.getGaussianKernel()</code> 自己构建一个高斯核。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> cv2</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> matplotlib.pyplot </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> plt</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">img = cv2.imread(</span><span style="color:#CE9178;">&#39;t1.jpg&#39;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">blur = cv2.GaussianBlur(img, (</span><span style="color:#B5CEA8;">5</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">5</span><span style="color:#D4D4D4;">), </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">plt.subplot(</span><span style="color:#B5CEA8;">121</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">plt.imshow(img[:, :, ::-</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">])</span></span>
<span class="line"><span style="color:#D4D4D4;">plt.title(</span><span style="color:#CE9178;">&#39;Original&#39;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">plt.subplot(</span><span style="color:#B5CEA8;">122</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">plt.imshow(blur[:, :, ::-</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">])</span></span>
<span class="line"><span style="color:#D4D4D4;">plt.title(</span><span style="color:#CE9178;">&#39;Gaussian Blur&#39;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">plt.show()</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="443-中值模糊" tabindex="-1"><a class="header-anchor" href="#443-中值模糊" aria-hidden="true">#</a> 4.4.3 中值模糊</h3><p>顾名思义就是用与卷积核对应像素的中值来替代中心像素的值。这个滤波器经常用来去除 <strong>椒盐噪声</strong>（又称 <strong>脉冲噪声</strong>）。</p><p>前面的滤波器都是用计算得到的一个新值来取代中心像素的值，而中值滤波是用中心像素周围（也可以使它本身）的值来取代它。</p>`,5),La=s("p",null,[a("中值滤波能有效的去除噪声。卷积核的大小也应该是一个奇数。在这个例子中，我们给原始图像加上 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mn",null,"50"),s("mi",{mathvariant:"normal"},"%")]),s("annotation",{encoding:"application/x-tex"},"50 \\%")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8056em","vertical-align":"-0.0556em"}}),s("span",{class:"mord"},"50%")])])]),a(" 的噪声然后再使用中值模糊。")],-1),Fa=l(`<div class="language-python line-numbers-mode" data-ext="py"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> cv2</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> matplotlib.pyplot </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> plt</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">img = cv2.imread(</span><span style="color:#CE9178;">&#39;t1.jpg&#39;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">median = cv2.medianBlur(img, </span><span style="color:#B5CEA8;">5</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">plt.subplot(</span><span style="color:#B5CEA8;">121</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">plt.imshow(img[:, :, ::-</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">])</span></span>
<span class="line"><span style="color:#D4D4D4;">plt.title(</span><span style="color:#CE9178;">&#39;Original&#39;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">plt.subplot(</span><span style="color:#B5CEA8;">122</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">plt.imshow(median[:, :, ::-</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">])</span></span>
<span class="line"><span style="color:#D4D4D4;">plt.title(</span><span style="color:#CE9178;">&#39;Median&#39;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">plt.show()</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="444-双边滤波" tabindex="-1"><a class="header-anchor" href="#444-双边滤波" aria-hidden="true">#</a> 4.4.4 双边滤波</h3><p>函数 <code>cv2.bilateralFilter()</code> 能在保持边界清晰的情况下有效的去除噪音。但是这种操作与其它滤波器相比会比较慢。</p><p>我们已经知道高斯滤波器是求中心点邻近区域像素的高斯加权平均值。这种高斯滤波器只考虑像素之间的空间关系，而不会考虑像素值之间的关系（像素的相似度）。所以这种方法不会考虑一个像素是否位于边界。因此边界也会别模糊掉，而这正不是我们想要。</p><p>双边滤波在同时使用空间高斯权重和灰度值相似性高斯权重。空间高斯函数确保只有邻近区域的像素对中心点有影响，灰度值相似性高斯函数确保只有与中心像素灰度值相近的才会被用来做模糊运算。所以这种方法会确保边界不会被模糊掉，因为边界处的灰度值变化比较大。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> cv2</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> matplotlib.pyplot </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> plt</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">img = cv2.imread(</span><span style="color:#CE9178;">&#39;t1.jpg&#39;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">blur = cv2.bilateralFilter(img, </span><span style="color:#B5CEA8;">9</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">75</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">75</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">plt.subplot(</span><span style="color:#B5CEA8;">121</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">plt.imshow(img[:, :, ::-</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">])</span></span>
<span class="line"><span style="color:#D4D4D4;">plt.title(</span><span style="color:#CE9178;">&#39;Original&#39;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">plt.subplot(</span><span style="color:#B5CEA8;">122</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">plt.imshow(blur[:, :, ::-</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">])</span></span>
<span class="line"><span style="color:#D4D4D4;">plt.title(</span><span style="color:#CE9178;">&#39;Blurred&#39;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">plt.show()</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6),Ga={class:"hint-container info"},Na=s("p",{class:"hint-container-title"},"双边滤波",-1),Ia={href:"http://people.csail.mit.edu/sparis/bf_course/",target:"_blank",rel:"noopener noreferrer"},Pa=l('<h2 id="45-形态学转换" tabindex="-1"><a class="header-anchor" href="#45-形态学转换" aria-hidden="true">#</a> 4.5 形态学转换</h2><details class="hint-container details"><summary>学习目标</summary><ul><li>学习不同的形态学操作 <ul><li>腐蚀</li><li>膨胀</li><li>开运算闭运算</li></ul></li><li>函数 <ul><li><code>cv2.erode()</code></li><li><code>cv2.dilate()</code></li><li><code>cv2.morphologyEx()</code></li></ul></li></ul></details><p>形态学操作是根据图像形状进行的简单操作。一般情况下对二值化图像进行的操作。需要输入两个参数，一个是原始图像，第二个被称为结构化元素或核，它是用来决定操作的性质的。</p><p>两个基本的形态学操作是腐蚀和膨胀。它们的变体构成了开运算，闭运算，梯度等。</p><h3 id="451-腐蚀" tabindex="-1"><a class="header-anchor" href="#451-腐蚀" aria-hidden="true">#</a> 4.5.1 腐蚀</h3><p>就像土壤侵蚀一样，这个操作会把前景物体的边界腐蚀掉（但是前景仍然是白色）。</p><p>这是怎么做到的呢？卷积核沿着图像滑动，如果与卷积核对应的原图像的所有像素值都是 <code>1</code>，那么中心元素就保持原来的像素值，否则就变为 <code>0</code>。</p><p>这会产生什么影响呢？根据卷积核的大小靠近前景的所有像素都会被腐蚀掉（变为 <code>0</code>），所以前景物体会变小，整幅图像的白色区域会减少。</p>',8),qa=s("p",null,[a("这对于去除白噪声很有用，也可以用来断开两个连在一块的物体等。这里我们有一个例子，使用一个 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mn",null,"5"),s("mo",null,"×"),s("mn",null,"5")]),s("annotation",{encoding:"application/x-tex"},"5 \\times 5")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.7278em","vertical-align":"-0.0833em"}}),s("span",{class:"mord"},"5"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"×"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6444em"}}),s("span",{class:"mord"},"5")])])]),a(" 的卷积核，其中所有的值都是 "),s("code",null,"1"),a("。")],-1),Ya=l(`<div class="language-python line-numbers-mode" data-ext="py"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> cv2</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> numpy </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> np</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> matplotlib.pyplot </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> plt</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">img = cv2.imread(</span><span style="color:#CE9178;">&#39;t1.jpg&#39;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">kernel = np.ones((</span><span style="color:#B5CEA8;">5</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">5</span><span style="color:#D4D4D4;">), </span><span style="color:#9CDCFE;">dtype</span><span style="color:#D4D4D4;">=np.uint8)</span></span>
<span class="line"><span style="color:#D4D4D4;">erosion = cv2.erode(img, </span><span style="color:#9CDCFE;">kernel</span><span style="color:#D4D4D4;">=kernel, </span><span style="color:#9CDCFE;">iterations</span><span style="color:#D4D4D4;">=</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">plt.subplot(</span><span style="color:#B5CEA8;">121</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">plt.imshow(img[:, :, ::-</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">])</span></span>
<span class="line"><span style="color:#D4D4D4;">plt.title(</span><span style="color:#CE9178;">&#39;Original&#39;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">plt.subplot(</span><span style="color:#B5CEA8;">122</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">plt.imshow(erosion[:, :, ::-</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">])</span></span>
<span class="line"><span style="color:#D4D4D4;">plt.title(</span><span style="color:#CE9178;">&#39;Erosion&#39;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">plt.show()</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="452-膨胀" tabindex="-1"><a class="header-anchor" href="#452-膨胀" aria-hidden="true">#</a> 4.5.2 膨胀</h3><p>与腐蚀相反，与卷积核对应的原图像的像素值中只要有一个是 <code>1</code>，中心元素的像素值就是 <code>1</code>。所以这个操作会增加图像中的白色区域（前景）。</p><p>一般在去噪声时先用腐蚀再用膨胀。因为腐蚀在去掉白噪声的同时，也会使前景对象变小。所以我们再对它进行膨胀。这时噪声已经被去除了，不会再回来了，但是前景还在并会增加。膨胀也可以用来连接两个分开的物体。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> cv2</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> numpy </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> np</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> matplotlib.pyplot </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> plt</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">img = cv2.imread(</span><span style="color:#CE9178;">&#39;t1.jpg&#39;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">kernel = np.ones((</span><span style="color:#B5CEA8;">5</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">5</span><span style="color:#D4D4D4;">), </span><span style="color:#9CDCFE;">dtype</span><span style="color:#D4D4D4;">=np.uint8)</span></span>
<span class="line"><span style="color:#D4D4D4;">dilation = cv2.dilate(img, </span><span style="color:#9CDCFE;">kernel</span><span style="color:#D4D4D4;">=kernel, </span><span style="color:#9CDCFE;">iterations</span><span style="color:#D4D4D4;">=</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">plt.subplot(</span><span style="color:#B5CEA8;">121</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">plt.imshow(img[:, :, ::-</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">])</span></span>
<span class="line"><span style="color:#D4D4D4;">plt.title(</span><span style="color:#CE9178;">&#39;Original&#39;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">plt.subplot(</span><span style="color:#B5CEA8;">122</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">plt.imshow(dilation[:, :, ::-</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">])</span></span>
<span class="line"><span style="color:#D4D4D4;">plt.title(</span><span style="color:#CE9178;">&#39;Dilation&#39;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">plt.show()</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="453-开运算" tabindex="-1"><a class="header-anchor" href="#453-开运算" aria-hidden="true">#</a> 4.5.3 开运算</h3><p>先进行腐蚀再进行膨胀就叫做开运算。它被用来去除噪声。这里我们用到的函数是 <code>cv2.morphologyEx()</code>。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> cv2</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> numpy </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> np</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> matplotlib.pyplot </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> plt</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">img = cv2.imread(</span><span style="color:#CE9178;">&#39;t1.jpg&#39;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">kernel = np.ones((</span><span style="color:#B5CEA8;">5</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">5</span><span style="color:#D4D4D4;">), </span><span style="color:#9CDCFE;">dtype</span><span style="color:#D4D4D4;">=np.uint8)</span></span>
<span class="line"><span style="color:#D4D4D4;">opening = cv2.morphologyEx(img, cv2.MORPH_OPEN, </span><span style="color:#9CDCFE;">kernel</span><span style="color:#D4D4D4;">=kernel)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">plt.subplot(</span><span style="color:#B5CEA8;">121</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">plt.imshow(img[:, :, ::-</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">])</span></span>
<span class="line"><span style="color:#D4D4D4;">plt.title(</span><span style="color:#CE9178;">&#39;Original&#39;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">plt.subplot(</span><span style="color:#B5CEA8;">122</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">plt.imshow(opening[:, :, ::-</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">])</span></span>
<span class="line"><span style="color:#D4D4D4;">plt.title(</span><span style="color:#CE9178;">&#39;Opening&#39;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">plt.show()</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="454-闭运算" tabindex="-1"><a class="header-anchor" href="#454-闭运算" aria-hidden="true">#</a> 4.5.4 闭运算</h3><p>先膨胀再腐蚀。它经常被用来填充前景物体中的小洞，或者前景物体上的小黑点。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> cv2</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> numpy </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> np</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> matplotlib.pyplot </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> plt</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">img = cv2.imread(</span><span style="color:#CE9178;">&#39;t1.jpg&#39;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">kernel = np.ones((</span><span style="color:#B5CEA8;">5</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">5</span><span style="color:#D4D4D4;">), </span><span style="color:#9CDCFE;">dtype</span><span style="color:#D4D4D4;">=np.uint8)</span></span>
<span class="line"><span style="color:#D4D4D4;">closing = cv2.morphologyEx(img, cv2.MORPH_CLOSE, </span><span style="color:#9CDCFE;">kernel</span><span style="color:#D4D4D4;">=kernel)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">plt.subplot(</span><span style="color:#B5CEA8;">121</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">plt.imshow(img[:, :, ::-</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">])</span></span>
<span class="line"><span style="color:#D4D4D4;">plt.title(</span><span style="color:#CE9178;">&#39;Original&#39;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">plt.subplot(</span><span style="color:#B5CEA8;">122</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">plt.imshow(closing[:, :, ::-</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">])</span></span>
<span class="line"><span style="color:#D4D4D4;">plt.title(</span><span style="color:#CE9178;">&#39;Closing&#39;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">plt.show()</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="455-形态学梯度" tabindex="-1"><a class="header-anchor" href="#455-形态学梯度" aria-hidden="true">#</a> 4.5.5 形态学梯度</h3><p>其实就是一幅图像膨胀与腐蚀的差别。</p><p>结果看上去就像前景物体的轮廓。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> cv2</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> numpy </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> np</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> matplotlib.pyplot </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> plt</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">img = cv2.imread(</span><span style="color:#CE9178;">&#39;t1.jpg&#39;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">kernel = np.ones((</span><span style="color:#B5CEA8;">5</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">5</span><span style="color:#D4D4D4;">), </span><span style="color:#9CDCFE;">dtype</span><span style="color:#D4D4D4;">=np.uint8)</span></span>
<span class="line"><span style="color:#D4D4D4;">gradient = cv2.morphologyEx(img, cv2.MORPH_GRADIENT, </span><span style="color:#9CDCFE;">kernel</span><span style="color:#D4D4D4;">=kernel)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">plt.subplot(</span><span style="color:#B5CEA8;">121</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">plt.imshow(img[:, :, ::-</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">])</span></span>
<span class="line"><span style="color:#D4D4D4;">plt.title(</span><span style="color:#CE9178;">&#39;Original&#39;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">plt.subplot(</span><span style="color:#B5CEA8;">122</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">plt.imshow(gradient[:, :, ::-</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">])</span></span>
<span class="line"><span style="color:#D4D4D4;">plt.title(</span><span style="color:#CE9178;">&#39;Gradient&#39;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">plt.show()</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="456-礼帽" tabindex="-1"><a class="header-anchor" href="#456-礼帽" aria-hidden="true">#</a> 4.5.6 礼帽</h3>`,16),Ka=s("p",null,[a("原始图像与进行开运算之后得到的图像的差。下面的例子是用一个 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mn",null,"9"),s("mo",null,"×"),s("mn",null,"9")]),s("annotation",{encoding:"application/x-tex"},"9 \\times 9")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.7278em","vertical-align":"-0.0833em"}}),s("span",{class:"mord"},"9"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"×"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6444em"}}),s("span",{class:"mord"},"9")])])]),a(" 的核进行礼帽操作的结果。")],-1),ja=l(`<div class="language-python line-numbers-mode" data-ext="py"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> cv2</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> numpy </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> np</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> matplotlib.pyplot </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> plt</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">img = cv2.imread(</span><span style="color:#CE9178;">&#39;t1.jpg&#39;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">kernel = np.ones((</span><span style="color:#B5CEA8;">9</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">9</span><span style="color:#D4D4D4;">), </span><span style="color:#9CDCFE;">dtype</span><span style="color:#D4D4D4;">=np.uint8)</span></span>
<span class="line"><span style="color:#D4D4D4;">tophat = cv2.morphologyEx(img, cv2.MORPH_TOPHAT, </span><span style="color:#9CDCFE;">kernel</span><span style="color:#D4D4D4;">=kernel)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">plt.subplot(</span><span style="color:#B5CEA8;">121</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">plt.imshow(img[:, :, ::-</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">])</span></span>
<span class="line"><span style="color:#D4D4D4;">plt.title(</span><span style="color:#CE9178;">&#39;Original&#39;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">plt.subplot(</span><span style="color:#B5CEA8;">122</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">plt.imshow(tophat[:, :, ::-</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">])</span></span>
<span class="line"><span style="color:#D4D4D4;">plt.title(</span><span style="color:#CE9178;">&#39;Tophat&#39;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">plt.show()</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="457-黑帽" tabindex="-1"><a class="header-anchor" href="#457-黑帽" aria-hidden="true">#</a> 4.5.7 黑帽</h3><p>进行闭运算之后得到的图像与原始图像的差。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> cv2</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> numpy </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> np</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> matplotlib.pyplot </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> plt</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">img = cv2.imread(</span><span style="color:#CE9178;">&#39;t1.jpg&#39;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">kernel = np.ones((</span><span style="color:#B5CEA8;">9</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">9</span><span style="color:#D4D4D4;">), </span><span style="color:#9CDCFE;">dtype</span><span style="color:#D4D4D4;">=np.uint8)</span></span>
<span class="line"><span style="color:#D4D4D4;">blackhat = cv2.morphologyEx(img, cv2.MORPH_BLACKHAT, </span><span style="color:#9CDCFE;">kernel</span><span style="color:#D4D4D4;">=kernel)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">plt.subplot(</span><span style="color:#B5CEA8;">121</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">plt.imshow(img[:, :, ::-</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">])</span></span>
<span class="line"><span style="color:#D4D4D4;">plt.title(</span><span style="color:#CE9178;">&#39;Original&#39;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">plt.subplot(</span><span style="color:#B5CEA8;">122</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">plt.imshow(blackhat[:, :, ::-</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">])</span></span>
<span class="line"><span style="color:#D4D4D4;">plt.title(</span><span style="color:#CE9178;">&#39;Blackhat&#39;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">plt.show()</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="458-形态学操作之间的关系" tabindex="-1"><a class="header-anchor" href="#458-形态学操作之间的关系" aria-hidden="true">#</a> 4.5.8 形态学操作之间的关系</h3><p>形态学操作之间的关系：</p><ul><li><p>腐蚀（Erode）：全 <code>1</code> 则 <code>1</code></p></li><li><p>膨胀（Dilate）：有 <code>1</code> 则 <code>1</code></p></li><li><p>开运算（Opening）</p><div class="language-python" data-ext="py"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#D4D4D4;">dst = </span><span style="color:#DCDCAA;">open</span><span style="color:#D4D4D4;">(src, element) = dilate(erode(src, element), element)</span></span>
<span class="line"></span></code></pre></div></li><li><p>闭运算（Closing）</p><div class="language-python" data-ext="py"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#D4D4D4;">dst = close(src, element) = erode(dilate(src, element), element)</span></span>
<span class="line"></span></code></pre></div></li><li><p>形态学梯度（Morphological gradient）</p><div class="language-python" data-ext="py"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#D4D4D4;">dst = morph_grad(src, element) = dilate(src, element) - erode(src, element)</span></span>
<span class="line"></span></code></pre></div></li><li><p>礼帽（Top hat）</p><div class="language-python" data-ext="py"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#D4D4D4;">dst = tophat(src, element) = src - </span><span style="color:#DCDCAA;">open</span><span style="color:#D4D4D4;">(src, element)</span></span>
<span class="line"></span></code></pre></div></li><li><p>黑帽（Black hat）</p><div class="language-python" data-ext="py"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#D4D4D4;">dst = blackhat(src, element) = close(src, element) - src</span></span>
<span class="line"></span></code></pre></div></li></ul><h3 id="459-结构化元素" tabindex="-1"><a class="header-anchor" href="#459-结构化元素" aria-hidden="true">#</a> 4.5.9 结构化元素</h3><p>在前面的例子中我们使用 NumPy 构建了结构化元素，它是正方形的。但有时我们需要构建一个椭圆形/圆形的核。</p><p>为了实现这种要求，提供了 OpenCV 函数 <code>cv2.getStructuringElement()</code>。你只需要告诉他你需要的核的形状和大小。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> cv2</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">## Rectangular Kernel</span></span>
<span class="line"><span style="color:#D4D4D4;">cv2.getStructuringElement(cv2.MORPH_RECT, (</span><span style="color:#B5CEA8;">5</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">5</span><span style="color:#D4D4D4;">))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">## Elliptical Kernel</span></span>
<span class="line"><span style="color:#D4D4D4;">cv2.getStructuringElement(cv2.MORPH_ELLIPSE, (</span><span style="color:#B5CEA8;">5</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">5</span><span style="color:#D4D4D4;">))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">## Cross-shaped Kernel</span></span>
<span class="line"><span style="color:#D4D4D4;">cv2.getStructuringElement(cv2.MORPH_CROSS, (</span><span style="color:#B5CEA8;">5</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">5</span><span style="color:#D4D4D4;">))</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#D4D4D4;">array([[</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">],</span></span>
<span class="line"><span style="color:#D4D4D4;">       [</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">],</span></span>
<span class="line"><span style="color:#D4D4D4;">       [</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">],</span></span>
<span class="line"><span style="color:#D4D4D4;">       [</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">],</span></span>
<span class="line"><span style="color:#D4D4D4;">       [</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">]], </span><span style="color:#9CDCFE;">dtype</span><span style="color:#D4D4D4;">=uint8)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">array([[</span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">],</span></span>
<span class="line"><span style="color:#D4D4D4;">       [</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">],</span></span>
<span class="line"><span style="color:#D4D4D4;">       [</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">],</span></span>
<span class="line"><span style="color:#D4D4D4;">       [</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">],</span></span>
<span class="line"><span style="color:#D4D4D4;">       [</span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">]], </span><span style="color:#9CDCFE;">dtype</span><span style="color:#D4D4D4;">=uint8)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">array([[</span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">],</span></span>
<span class="line"><span style="color:#D4D4D4;">       [</span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">],</span></span>
<span class="line"><span style="color:#D4D4D4;">       [</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">],</span></span>
<span class="line"><span style="color:#D4D4D4;">       [</span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">],</span></span>
<span class="line"><span style="color:#D4D4D4;">       [</span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">]], </span><span style="color:#9CDCFE;">dtype</span><span style="color:#D4D4D4;">=uint8)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,12),Ua={class:"hint-container info"},Za=s("p",{class:"hint-container-title"},"形态学转换",-1),Wa={href:"https://homepages.inf.ed.ac.uk/rbf/HIPR2/morops.htm",target:"_blank",rel:"noopener noreferrer"},Qa=l('<h2 id="46-图像梯度" tabindex="-1"><a class="header-anchor" href="#46-图像梯度" aria-hidden="true">#</a> 4.6 图像梯度</h2><details class="hint-container details"><summary>学习目标</summary><ul><li>图像梯度，图像边界等</li><li>函数 <ul><li><code>cv2.Sobel()</code></li><li><code>cv2.Schar()</code></li><li><code>cv2.Laplacian()</code></li></ul></li></ul></details><p>梯度简单来说就是求导。</p><p>OpenCV 提供了三种不同的梯度滤波器，或者说高通滤波器：Sobel，Scharr 和 Laplacian。</p><p>Sobel，Scharr 其实就是求一阶或二阶导数。Scharr 是对 Sobel（使用小的卷积核求解求解梯度角度时）的优化。Laplacian 是求二阶导数。</p><h3 id="461-sobel-算子和-scharr-算子" tabindex="-1"><a class="header-anchor" href="#461-sobel-算子和-scharr-算子" aria-hidden="true">#</a> 4.6.1 Sobel 算子和 Scharr 算子</h3><p>Sobel 算子是高斯平滑与微分操作的结合体，所以它的抗噪声能力很好。</p>',7),Xa=s("p",null,[a("你可以设定求导的方向（"),s("code",null,"xorder"),a(" 或 "),s("code",null,"yorder"),a("）。还可以设定使用的卷积核的大小（"),s("code",null,"ksize"),a("）。如果 "),s("code",null,"ksize=-1"),a("，会使用 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mn",null,"3"),s("mo",null,"×"),s("mn",null,"3")]),s("annotation",{encoding:"application/x-tex"},"3 \\times 3")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.7278em","vertical-align":"-0.0833em"}}),s("span",{class:"mord"},"3"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"×"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6444em"}}),s("span",{class:"mord"},"3")])])]),a(" 的 Scharr 滤波器，它的的效果要比 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mn",null,"3"),s("mo",null,"×"),s("mn",null,"3")]),s("annotation",{encoding:"application/x-tex"},"3 \\times 3")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.7278em","vertical-align":"-0.0833em"}}),s("span",{class:"mord"},"3"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"×"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6444em"}}),s("span",{class:"mord"},"3")])])]),a(" 的 Sobel 滤波器好（而且速度相同，所以在使用 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mn",null,"3"),s("mo",null,"×"),s("mn",null,"3")]),s("annotation",{encoding:"application/x-tex"},"3 \\times 3")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.7278em","vertical-align":"-0.0833em"}}),s("span",{class:"mord"},"3"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"×"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6444em"}}),s("span",{class:"mord"},"3")])])]),a(" 滤波器时应该尽量使用 Scharr 滤波器）。"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mn",null,"3"),s("mo",null,"×"),s("mn",null,"3")]),s("annotation",{encoding:"application/x-tex"},"3 \\times 3")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.7278em","vertical-align":"-0.0833em"}}),s("span",{class:"mord"},"3"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"×"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6444em"}}),s("span",{class:"mord"},"3")])])]),a(" 的 Scharr 滤波器卷积核如下：")],-1),Ja=s("p",{class:"katex-block"},[s("span",{class:"katex-display"},[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mi",null,"K"),s("mi",null,"x")]),s("mo",null,"="),s("mrow",null,[s("mo",{fence:"true"},"["),s("mtable",{rowspacing:"0.16em",columnalign:"center center center",columnspacing:"1em"},[s("mtr",null,[s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mrow",null,[s("mo",null,"−"),s("mn",null,"3")])])]),s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mn",null,"0")])]),s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mrow",null,[s("mo",null,"−"),s("mn",null,"3")])])])]),s("mtr",null,[s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mrow",null,[s("mo",null,"−"),s("mn",null,"10")])])]),s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mn",null,"0")])]),s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mn",null,"10")])])]),s("mtr",null,[s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mrow",null,[s("mo",null,"−"),s("mn",null,"3")])])]),s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mn",null,"0")])]),s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mn",null,"3")])])])]),s("mo",{fence:"true"},"]")])]),s("annotation",{encoding:"application/x-tex"}," K_x = \\begin{bmatrix} -3 & 0 & -3 \\\\ -10 & 0 & 10 \\\\ -3 & 0 & 3 \\end{bmatrix} ")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8333em","vertical-align":"-0.15em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.07153em"}},"K"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.1514em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.0715em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight"},"x")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"3.6em","vertical-align":"-1.55em"}}),s("span",{class:"minner"},[s("span",{class:"mopen"},[s("span",{class:"delimsizing mult"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"2.05em"}},[s("span",{style:{top:"-4.05em"}},[s("span",{class:"pstrut",style:{height:"5.6em"}}),s("span",{style:{width:"0.667em",height:"3.600em"}},[s("svg",{xmlns:"http://www.w3.org/2000/svg",width:"0.667em",height:"3.600em",viewBox:"0 0 667 3600"},[s("path",{d:`M403 1759 V84 H666 V0 H319 V1759 v0 v1759 h347 v-84
H403z M403 1759 V0 H319 V1759 v0 v1759 h84z`})])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.55em"}},[s("span")])])])])]),s("span",{class:"mord"},[s("span",{class:"mtable"},[s("span",{class:"col-align-c"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"2.05em"}},[s("span",{style:{top:"-4.21em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"−"),s("span",{class:"mord"},"3")])]),s("span",{style:{top:"-3.01em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"−"),s("span",{class:"mord"},"10")])]),s("span",{style:{top:"-1.81em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"−"),s("span",{class:"mord"},"3")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.55em"}},[s("span")])])])]),s("span",{class:"arraycolsep",style:{width:"0.5em"}}),s("span",{class:"arraycolsep",style:{width:"0.5em"}}),s("span",{class:"col-align-c"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"2.05em"}},[s("span",{style:{top:"-4.21em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"0")])]),s("span",{style:{top:"-3.01em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"0")])]),s("span",{style:{top:"-1.81em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"0")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.55em"}},[s("span")])])])]),s("span",{class:"arraycolsep",style:{width:"0.5em"}}),s("span",{class:"arraycolsep",style:{width:"0.5em"}}),s("span",{class:"col-align-c"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"2.05em"}},[s("span",{style:{top:"-4.21em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"−"),s("span",{class:"mord"},"3")])]),s("span",{style:{top:"-3.01em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"10")])]),s("span",{style:{top:"-1.81em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"3")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.55em"}},[s("span")])])])])])]),s("span",{class:"mclose"},[s("span",{class:"delimsizing mult"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"2.05em"}},[s("span",{style:{top:"-4.05em"}},[s("span",{class:"pstrut",style:{height:"5.6em"}}),s("span",{style:{width:"0.667em",height:"3.600em"}},[s("svg",{xmlns:"http://www.w3.org/2000/svg",width:"0.667em",height:"3.600em",viewBox:"0 0 667 3600"},[s("path",{d:`M347 1759 V0 H0 V84 H263 V1759 v0 v1759 H0 v84 H347z
M347 1759 V0 H263 V1759 v0 v1759 h84z`})])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.55em"}},[s("span")])])])])])])])])])])],-1),$a=s("p",{class:"katex-block"},[s("span",{class:"katex-display"},[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mi",null,"K"),s("mi",null,"y")]),s("mo",null,"="),s("mrow",null,[s("mo",{fence:"true"},"["),s("mtable",{rowspacing:"0.16em",columnalign:"center center center",columnspacing:"1em"},[s("mtr",null,[s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mrow",null,[s("mo",null,"−"),s("mn",null,"3")])])]),s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mrow",null,[s("mo",null,"−"),s("mn",null,"10")])])]),s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mrow",null,[s("mo",null,"−"),s("mn",null,"3")])])])]),s("mtr",null,[s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mn",null,"0")])]),s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mn",null,"0")])]),s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mn",null,"0")])])]),s("mtr",null,[s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mn",null,"3")])]),s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mn",null,"10")])]),s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mn",null,"3")])])])]),s("mo",{fence:"true"},"]")])]),s("annotation",{encoding:"application/x-tex"}," K_y = \\begin{bmatrix} -3 & -10 & -3 \\\\ 0 & 0 & 0 \\\\ 3 & 10 & 3 \\end{bmatrix} ")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.9694em","vertical-align":"-0.2861em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.07153em"}},"K"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.1514em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.0715em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.03588em"}},"y")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.2861em"}},[s("span")])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"3.6em","vertical-align":"-1.55em"}}),s("span",{class:"minner"},[s("span",{class:"mopen"},[s("span",{class:"delimsizing mult"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"2.05em"}},[s("span",{style:{top:"-4.05em"}},[s("span",{class:"pstrut",style:{height:"5.6em"}}),s("span",{style:{width:"0.667em",height:"3.600em"}},[s("svg",{xmlns:"http://www.w3.org/2000/svg",width:"0.667em",height:"3.600em",viewBox:"0 0 667 3600"},[s("path",{d:`M403 1759 V84 H666 V0 H319 V1759 v0 v1759 h347 v-84
H403z M403 1759 V0 H319 V1759 v0 v1759 h84z`})])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.55em"}},[s("span")])])])])]),s("span",{class:"mord"},[s("span",{class:"mtable"},[s("span",{class:"col-align-c"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"2.05em"}},[s("span",{style:{top:"-4.21em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"−"),s("span",{class:"mord"},"3")])]),s("span",{style:{top:"-3.01em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"0")])]),s("span",{style:{top:"-1.81em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"3")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.55em"}},[s("span")])])])]),s("span",{class:"arraycolsep",style:{width:"0.5em"}}),s("span",{class:"arraycolsep",style:{width:"0.5em"}}),s("span",{class:"col-align-c"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"2.05em"}},[s("span",{style:{top:"-4.21em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"−"),s("span",{class:"mord"},"10")])]),s("span",{style:{top:"-3.01em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"0")])]),s("span",{style:{top:"-1.81em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"10")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.55em"}},[s("span")])])])]),s("span",{class:"arraycolsep",style:{width:"0.5em"}}),s("span",{class:"arraycolsep",style:{width:"0.5em"}}),s("span",{class:"col-align-c"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"2.05em"}},[s("span",{style:{top:"-4.21em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"−"),s("span",{class:"mord"},"3")])]),s("span",{style:{top:"-3.01em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"0")])]),s("span",{style:{top:"-1.81em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"3")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.55em"}},[s("span")])])])])])]),s("span",{class:"mclose"},[s("span",{class:"delimsizing mult"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"2.05em"}},[s("span",{style:{top:"-4.05em"}},[s("span",{class:"pstrut",style:{height:"5.6em"}}),s("span",{style:{width:"0.667em",height:"3.600em"}},[s("svg",{xmlns:"http://www.w3.org/2000/svg",width:"0.667em",height:"3.600em",viewBox:"0 0 667 3600"},[s("path",{d:`M347 1759 V0 H0 V84 H263 V1759 v0 v1759 H0 v84 H347z
M347 1759 V0 H263 V1759 v0 v1759 h84z`})])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.55em"}},[s("span")])])])])])])])])])])],-1),sl=s("h3",{id:"462-laplacian-算子",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#462-laplacian-算子","aria-hidden":"true"},"#"),a(" 4.6.2 Laplacian 算子")],-1),al=s("p",null,"拉普拉斯算子可以使用二阶导数的形式定义，可假设其离散实现类似于二阶 Sobel 导数，事实上，OpenCV 在计算拉普拉斯算子时直接调用 Sobel 算子。计算公式如下：",-1),ll=s("p",{class:"katex-block"},[s("span",{class:"katex-display"},[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[s("semantics",null,[s("mrow",null,[s("mi",{mathvariant:"normal"},"Δ"),s("mrow",null,[s("mi",{mathvariant:"normal"},"s"),s("mi",{mathvariant:"normal"},"r"),s("mi",{mathvariant:"normal"},"c")]),s("mo",null,"="),s("mfrac",null,[s("mrow",null,[s("msup",null,[s("mi",{mathvariant:"normal"},"∂"),s("mn",null,"2")]),s("mrow",null,[s("mi",{mathvariant:"normal"},"s"),s("mi",{mathvariant:"normal"},"r"),s("mi",{mathvariant:"normal"},"c")])]),s("mrow",null,[s("mi",{mathvariant:"normal"},"∂"),s("msup",null,[s("mi",null,"x"),s("mn",null,"2")])])]),s("mo",null,"+"),s("mfrac",null,[s("mrow",null,[s("msup",null,[s("mi",{mathvariant:"normal"},"∂"),s("mn",null,"2")]),s("mrow",null,[s("mi",{mathvariant:"normal"},"s"),s("mi",{mathvariant:"normal"},"r"),s("mi",{mathvariant:"normal"},"c")])]),s("mrow",null,[s("mi",{mathvariant:"normal"},"∂"),s("msup",null,[s("mi",null,"y"),s("mn",null,"2")])])])]),s("annotation",{encoding:"application/x-tex"}," \\Delta \\mathrm{src} = \\frac{\\partial^2\\mathrm{src} }{\\partial x^2} + \\frac{\\partial^2\\mathrm{src} }{\\partial y^2} ")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6833em"}}),s("span",{class:"mord"},"Δ"),s("span",{class:"mord"},[s("span",{class:"mord mathrm"},"src")]),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"2.1771em","vertical-align":"-0.686em"}}),s("span",{class:"mord"},[s("span",{class:"mopen nulldelimiter"}),s("span",{class:"mfrac"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.4911em"}},[s("span",{style:{top:"-2.314em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord",style:{"margin-right":"0.05556em"}},"∂"),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"x"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.7401em"}},[s("span",{style:{top:"-2.989em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"2")])])])])])])])])]),s("span",{style:{top:"-3.23em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"frac-line",style:{"border-bottom-width":"0.04em"}})]),s("span",{style:{top:"-3.677em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},[s("span",{class:"mord",style:{"margin-right":"0.05556em"}},"∂"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.8141em"}},[s("span",{style:{top:"-3.063em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"2")])])])])])])]),s("span",{class:"mord"},[s("span",{class:"mord mathrm"},"src")])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.686em"}},[s("span")])])])]),s("span",{class:"mclose nulldelimiter"})]),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"+"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"2.3715em","vertical-align":"-0.8804em"}}),s("span",{class:"mord"},[s("span",{class:"mopen nulldelimiter"}),s("span",{class:"mfrac"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.4911em"}},[s("span",{style:{top:"-2.314em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord",style:{"margin-right":"0.05556em"}},"∂"),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"y"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.7401em"}},[s("span",{style:{top:"-2.989em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"2")])])])])])])])])]),s("span",{style:{top:"-3.23em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"frac-line",style:{"border-bottom-width":"0.04em"}})]),s("span",{style:{top:"-3.677em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},[s("span",{class:"mord",style:{"margin-right":"0.05556em"}},"∂"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.8141em"}},[s("span",{style:{top:"-3.063em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"2")])])])])])])]),s("span",{class:"mord"},[s("span",{class:"mord mathrm"},"src")])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.8804em"}},[s("span")])])])]),s("span",{class:"mclose nulldelimiter"})])])])])])],-1),nl=s("p",null,"拉普拉斯滤波器使用的卷积核：",-1),el=s("p",{class:"katex-block"},[s("span",{class:"katex-display"},[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[s("semantics",null,[s("mrow",null,[s("mi",null,"K"),s("mo",null,"="),s("mrow",null,[s("mo",{fence:"true"},"["),s("mtable",{rowspacing:"0.16em",columnalign:"center center center",columnspacing:"1em"},[s("mtr",null,[s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mn",null,"0")])]),s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mn",null,"1")])]),s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mn",null,"0")])])]),s("mtr",null,[s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mn",null,"1")])]),s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mrow",null,[s("mo",null,"−"),s("mn",null,"4")])])]),s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mn",null,"1")])])]),s("mtr",null,[s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mn",null,"0")])]),s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mn",null,"1")])]),s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mn",null,"0")])])])]),s("mo",{fence:"true"},"]")])]),s("annotation",{encoding:"application/x-tex"}," K = \\begin{bmatrix} 0 & 1 & 0 \\\\ 1 & -4 & 1 \\\\ 0 & 1 & 0 \\end{bmatrix} ")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6833em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.07153em"}},"K"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"3.6em","vertical-align":"-1.55em"}}),s("span",{class:"minner"},[s("span",{class:"mopen"},[s("span",{class:"delimsizing mult"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"2.05em"}},[s("span",{style:{top:"-4.05em"}},[s("span",{class:"pstrut",style:{height:"5.6em"}}),s("span",{style:{width:"0.667em",height:"3.600em"}},[s("svg",{xmlns:"http://www.w3.org/2000/svg",width:"0.667em",height:"3.600em",viewBox:"0 0 667 3600"},[s("path",{d:`M403 1759 V84 H666 V0 H319 V1759 v0 v1759 h347 v-84
H403z M403 1759 V0 H319 V1759 v0 v1759 h84z`})])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.55em"}},[s("span")])])])])]),s("span",{class:"mord"},[s("span",{class:"mtable"},[s("span",{class:"col-align-c"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"2.05em"}},[s("span",{style:{top:"-4.21em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"0")])]),s("span",{style:{top:"-3.01em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"1")])]),s("span",{style:{top:"-1.81em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"0")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.55em"}},[s("span")])])])]),s("span",{class:"arraycolsep",style:{width:"0.5em"}}),s("span",{class:"arraycolsep",style:{width:"0.5em"}}),s("span",{class:"col-align-c"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"2.05em"}},[s("span",{style:{top:"-4.21em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"1")])]),s("span",{style:{top:"-3.01em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"−"),s("span",{class:"mord"},"4")])]),s("span",{style:{top:"-1.81em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"1")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.55em"}},[s("span")])])])]),s("span",{class:"arraycolsep",style:{width:"0.5em"}}),s("span",{class:"arraycolsep",style:{width:"0.5em"}}),s("span",{class:"col-align-c"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"2.05em"}},[s("span",{style:{top:"-4.21em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"0")])]),s("span",{style:{top:"-3.01em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"1")])]),s("span",{style:{top:"-1.81em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"0")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.55em"}},[s("span")])])])])])]),s("span",{class:"mclose"},[s("span",{class:"delimsizing mult"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"2.05em"}},[s("span",{style:{top:"-4.05em"}},[s("span",{class:"pstrut",style:{height:"5.6em"}}),s("span",{style:{width:"0.667em",height:"3.600em"}},[s("svg",{xmlns:"http://www.w3.org/2000/svg",width:"0.667em",height:"3.600em",viewBox:"0 0 667 3600"},[s("path",{d:`M347 1759 V0 H0 V84 H263 V1759 v0 v1759 H0 v84 H347z
M347 1759 V0 H263 V1759 v0 v1759 h84z`})])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.55em"}},[s("span")])])])])])])])])])])],-1),pl=l(`<h3 id="463-实践" tabindex="-1"><a class="header-anchor" href="#463-实践" aria-hidden="true">#</a> 4.6.3 实践</h3><p>以上函数的典型用法如下：</p><div class="language-python" data-ext="py"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#D4D4D4;">cv2.Scharr(img, cv2.CV_64F, </span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">ksize</span><span style="color:#D4D4D4;">=</span><span style="color:#B5CEA8;">5</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">cv2.Sobel(img, cv2.CV_64F, </span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">ksize</span><span style="color:#D4D4D4;">=</span><span style="color:#B5CEA8;">5</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">cv2.Laplacian(img, cv2.CV_64F)</span></span>
<span class="line"></span></code></pre></div><div class="hint-container info"><p class="hint-container-title">为什么使用浮点数</p><p>我们在代码中使用的是 <code>cv2.CV_64F</code>。想象一下一个从黑到白的边界的导数是整数，而一个从白到黑的边界点导数却是负数。如果原图像的深度是 <code>np.int8</code> 时，所有的负值都会被截断变成 <code>0</code>，换句话说就是把把边界丢失掉。</p></div>`,4),tl=s("p",null,[a("下面使用 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mn",null,"5"),s("mo",null,"×"),s("mn",null,"5")]),s("annotation",{encoding:"application/x-tex"},"5 \\times 5")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.7278em","vertical-align":"-0.0833em"}}),s("span",{class:"mord"},"5"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"×"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6444em"}}),s("span",{class:"mord"},"5")])])]),a(" 的滤波器进行测试：")],-1),il=l(`<div class="language-python line-numbers-mode" data-ext="py"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> cv2</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> numpy </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> np</span></span>
<span class="line"><span style="color:#C586C0;">from</span><span style="color:#D4D4D4;"> matplotlib </span><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> pyplot </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> plt</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">img = cv2.imread(</span><span style="color:#CE9178;">&#39;test.jpg&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;"># cv2.CV_64F 输出图像的深度（数据类型）</span></span>
<span class="line"><span style="color:#6A9955;"># 可以使用 -1，与原图像保持一致 np.uint8</span></span>
<span class="line"><span style="color:#D4D4D4;">laplacian = cv2.Laplacian(img, cv2.CV_64F)</span></span>
<span class="line"><span style="color:#6A9955;"># 参数 1,0 为只在 x 方向求一阶导数，最大可以求 2 阶导数</span></span>
<span class="line"><span style="color:#D4D4D4;">sobelx = cv2.Sobel(img, cv2.CV_64F, </span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">ksize</span><span style="color:#D4D4D4;">=</span><span style="color:#B5CEA8;">5</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#6A9955;"># 参数 0,1 为只在 y 方向求一阶导数，最大可以求 2 阶导数</span></span>
<span class="line"><span style="color:#D4D4D4;">sobely = cv2.Sobel(img, cv2.CV_64F, </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">ksize</span><span style="color:#D4D4D4;">=</span><span style="color:#B5CEA8;">5</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">plt.subplot(</span><span style="color:#B5CEA8;">2</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">2</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">), plt.imshow(img, </span><span style="color:#9CDCFE;">cmap</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&#39;gray&#39;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">plt.title(</span><span style="color:#CE9178;">&#39;Original&#39;</span><span style="color:#D4D4D4;">), plt.xticks([]), plt.yticks([])</span></span>
<span class="line"><span style="color:#D4D4D4;">plt.subplot(</span><span style="color:#B5CEA8;">2</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">2</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">2</span><span style="color:#D4D4D4;">), plt.imshow(laplacian, </span><span style="color:#9CDCFE;">cmap</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&#39;gray&#39;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">plt.title(</span><span style="color:#CE9178;">&#39;Laplacian&#39;</span><span style="color:#D4D4D4;">), plt.xticks([]), plt.yticks([])</span></span>
<span class="line"><span style="color:#D4D4D4;">plt.subplot(</span><span style="color:#B5CEA8;">2</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">2</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">3</span><span style="color:#D4D4D4;">), plt.imshow(sobelx, </span><span style="color:#9CDCFE;">cmap</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&#39;gray&#39;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">plt.title(</span><span style="color:#CE9178;">&#39;Sobel X&#39;</span><span style="color:#D4D4D4;">), plt.xticks([]), plt.yticks([])</span></span>
<span class="line"><span style="color:#D4D4D4;">plt.subplot(</span><span style="color:#B5CEA8;">2</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">2</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">4</span><span style="color:#D4D4D4;">), plt.imshow(sobely, </span><span style="color:#9CDCFE;">cmap</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&#39;gray&#39;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">plt.title(</span><span style="color:#CE9178;">&#39;Sobel Y&#39;</span><span style="color:#D4D4D4;">), plt.xticks([]), plt.yticks([])</span></span>
<span class="line"><span style="color:#D4D4D4;">plt.show()</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="47-canny-边缘检测" tabindex="-1"><a class="header-anchor" href="#47-canny-边缘检测" aria-hidden="true">#</a> 4.7 Canny 边缘检测</h2><details class="hint-container details"><summary>学习目标</summary><ul><li>了解 Canny 边缘检测的概念</li><li>函数 <ul><li><code>cv2.Canny()</code></li></ul></li></ul></details><h3 id="471-原理" tabindex="-1"><a class="header-anchor" href="#471-原理" aria-hidden="true">#</a> 4.7.1 原理</h3><p>Canny 边缘检测是一种非常流行的边缘检测算法，是 John F.Canny 在 1986 年提出的。它是一个有很多步构成的算法。</p>`,5),cl=s("p",null,[a("由于边缘检测很容易受到噪声影响，所以第一步是使用 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mn",null,"5"),s("mo",null,"×"),s("mn",null,"5")]),s("annotation",{encoding:"application/x-tex"},"5 \\times 5")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.7278em","vertical-align":"-0.0833em"}}),s("span",{class:"mord"},"5"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"×"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6444em"}}),s("span",{class:"mord"},"5")])])]),a(" 的高斯滤波器去除噪声。")],-1),ol=s("p",null,[a("对平滑后的图像使用 Sobel 算子计算水平方向和竖直方向的一阶导数（"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mi",null,"G"),s("mi",null,"x")])]),s("annotation",{encoding:"application/x-tex"},"G_x")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8333em","vertical-align":"-0.15em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"G"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.1514em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight"},"x")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])])])])]),a(" 和 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mi",null,"G"),s("mi",null,"y")])]),s("annotation",{encoding:"application/x-tex"},"G_y")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.9694em","vertical-align":"-0.2861em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"G"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.1514em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.03588em"}},"y")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.2861em"}},[s("span")])])])])])])])]),a("）。根据得到的这两幅梯度图（"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mi",null,"G"),s("mi",null,"x")])]),s("annotation",{encoding:"application/x-tex"},"G_x")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8333em","vertical-align":"-0.15em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"G"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.1514em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight"},"x")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])])])])]),a(" 和 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mi",null,"G"),s("mi",null,"y")])]),s("annotation",{encoding:"application/x-tex"},"G_y")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.9694em","vertical-align":"-0.2861em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"G"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.1514em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.03588em"}},"y")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.2861em"}},[s("span")])])])])])])])]),a("）找到边界的梯度和方向，公式如下：")],-1),rl=s("p",{class:"katex-block"},[s("span",{class:"katex-display"},[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[s("semantics",null,[s("mrow",null,[s("mrow",null,[s("mi",{mathvariant:"normal"},"E"),s("mi",{mathvariant:"normal"},"d"),s("mi",{mathvariant:"normal"},"g"),s("mi",{mathvariant:"normal"},"e"),s("mi",{mathvariant:"normal"},"_"),s("mi",{mathvariant:"normal"},"G"),s("mi",{mathvariant:"normal"},"r"),s("mi",{mathvariant:"normal"},"a"),s("mi",{mathvariant:"normal"},"d"),s("mi",{mathvariant:"normal"},"i"),s("mi",{mathvariant:"normal"},"e"),s("mi",{mathvariant:"normal"},"n"),s("mi",{mathvariant:"normal"},"t")]),s("mo",{stretchy:"false"},"("),s("mi",null,"G"),s("mo",{stretchy:"false"},")"),s("mo",null,"="),s("msqrt",null,[s("mrow",null,[s("msubsup",null,[s("mi",null,"G"),s("mi",null,"x"),s("mn",null,"2")]),s("mo",null,"+"),s("msubsup",null,[s("mi",null,"G"),s("mi",null,"y"),s("mn",null,"2")])])])]),s("annotation",{encoding:"application/x-tex"}," \\mathrm{Edge\\_Gradient}(G) = \\sqrt{G_x^2 + G_y^2} ")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1.06em","vertical-align":"-0.31em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathrm"},"Edge_Gradient")]),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal"},"G"),s("span",{class:"mclose"},")"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1.84em","vertical-align":"-0.6276em"}}),s("span",{class:"mord sqrt"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.2124em"}},[s("span",{class:"svg-align",style:{top:"-3.8em"}},[s("span",{class:"pstrut",style:{height:"3.8em"}}),s("span",{class:"mord",style:{"padding-left":"1em"}},[s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"G"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.7401em"}},[s("span",{style:{top:"-2.453em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight"},"x")])]),s("span",{style:{top:"-2.989em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"2")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.247em"}},[s("span")])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"+"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"G"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.7401em"}},[s("span",{style:{top:"-2.453em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.03588em"}},"y")])]),s("span",{style:{top:"-2.989em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"2")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3831em"}},[s("span")])])])])])])]),s("span",{style:{top:"-3.1724em"}},[s("span",{class:"pstrut",style:{height:"3.8em"}}),s("span",{class:"hide-tail",style:{"min-width":"1.02em",height:"1.88em"}},[s("svg",{xmlns:"http://www.w3.org/2000/svg",width:"400em",height:"1.88em",viewBox:"0 0 400000 1944",preserveAspectRatio:"xMinYMin slice"},[s("path",{d:`M983 90
l0 -0
c4,-6.7,10,-10,18,-10 H400000v40
H1013.1s-83.4,268,-264.1,840c-180.7,572,-277,876.3,-289,913c-4.7,4.7,-12.7,7,-24,7
s-12,0,-12,0c-1.3,-3.3,-3.7,-11.7,-7,-25c-35.3,-125.3,-106.7,-373.3,-214,-744
c-10,12,-21,25,-33,39s-32,39,-32,39c-6,-5.3,-15,-14,-27,-26s25,-30,25,-30
c26.7,-32.7,52,-63,76,-91s52,-60,52,-60s208,722,208,722
c56,-175.3,126.3,-397.3,211,-666c84.7,-268.7,153.8,-488.2,207.5,-658.5
c53.7,-170.3,84.5,-266.8,92.5,-289.5z
M1001 80h400000v40h-400000z`})])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.6276em"}},[s("span")])])])])])])])])],-1),ml=s("p",{class:"katex-block"},[s("span",{class:"katex-display"},[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[s("semantics",null,[s("mrow",null,[s("mrow",null,[s("mi",{mathvariant:"normal"},"A"),s("mi",{mathvariant:"normal"},"n"),s("mi",{mathvariant:"normal"},"g"),s("mi",{mathvariant:"normal"},"l"),s("mi",{mathvariant:"normal"},"e")]),s("mo",{stretchy:"false"},"("),s("mi",null,"θ"),s("mo",{stretchy:"false"},")"),s("mo",null,"="),s("msup",null,[s("mrow",null,[s("mi",null,"tan"),s("mo",null,"⁡")]),s("mrow",null,[s("mo",null,"−"),s("mn",null,"1")])]),s("mrow",null,[s("mo",{fence:"true"},"("),s("mfrac",null,[s("msub",null,[s("mi",null,"G"),s("mi",null,"x")]),s("msub",null,[s("mi",null,"G"),s("mi",null,"y")])]),s("mo",{fence:"true"},")")])]),s("annotation",{encoding:"application/x-tex"}," \\mathrm{Angle}(\\theta) = \\tan^{-1} \\left(\\frac{G_x}{G_y}\\right) ")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathrm"},"Angle")]),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"θ"),s("span",{class:"mclose"},")"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"2.4221em","vertical-align":"-0.9721em"}}),s("span",{class:"mop"},[s("span",{class:"mop"},"tan"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.8641em"}},[s("span",{style:{top:"-3.113em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mtight"},"−"),s("span",{class:"mord mtight"},"1")])])])])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"minner"},[s("span",{class:"mopen delimcenter",style:{top:"0em"}},[s("span",{class:"delimsizing size3"},"(")]),s("span",{class:"mord"},[s("span",{class:"mopen nulldelimiter"}),s("span",{class:"mfrac"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.3603em"}},[s("span",{style:{top:"-2.314em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"G"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.1514em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.03588em"}},"y")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.2861em"}},[s("span")])])])])])])]),s("span",{style:{top:"-3.23em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"frac-line",style:{"border-bottom-width":"0.04em"}})]),s("span",{style:{top:"-3.677em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"G"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.1514em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight"},"x")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.9721em"}},[s("span")])])])]),s("span",{class:"mclose nulldelimiter"})]),s("span",{class:"mclose delimcenter",style:{top:"0em"}},[s("span",{class:"delimsizing size3"},")")])])])])])])],-1),dl=s("p",null,"梯度的方向一般总是与边界垂直。梯度方向被归为四类：垂直，水平，和两个对角线。",-1),yl=s("p",null,"下面进行非极大值抑制：在获得梯度的方向和大小之后，应该对整幅图像做一个扫描，去除那些非边界上的点。对每一个像素进行检查，看这个点的梯度是不是周围具有相同梯度方向的点中最大的。",-1),hl=s("p",null,"现在你得到的是一个包含“窄边界”的二值图像。",-1),Dl=s("p",null,"滞后阈值：现在要确定那些边界才是真正的边界。这时我们需要设置两个阈值。",-1),ul=s("p",null,[a("这两个阈值为 "),s("code",null,"minVal"),a(" 和 "),s("code",null,"maxVal"),a("。当图像的灰度梯度高于 "),s("code",null,"maxVal"),a(" 时被认为是真的边界，那些低于 "),s("code",null,"minVal"),a(" 的边界会被抛弃。如果介于两者之间的话，就要看这个点是否与某个被确定为真正的边界点相连，如果是就认为它也是边界点，如果不是就抛弃。")],-1),vl=s("p",null,[a("选择合适的 "),s("code",null,"maxVal"),a(" 和 "),s("code",null,"minVal"),a(" 对于能否得到好的结果非常重要。")],-1),gl=s("p",null,"在这一步一些小的噪声点也会被除去，因为我们假设边界都是一些长的线段。",-1),bl=s("h3",{id:"472-opencv-中的-canny-边界检测",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#472-opencv-中的-canny-边界检测","aria-hidden":"true"},"#"),a(" 4.7.2 OpenCV 中的 Canny 边界检测")],-1),Cl=s("p",null,[a("在 OpenCV 中只需要一个函数："),s("code",null,"cv2.Canny()"),a("，就可以完成以上几步。")],-1),El=s("p",null,[a("让我们看如何使用这个函数。这个函数的第一个参数是输入图像。第二和第三个分别是 "),s("code",null,"minVal"),a(" 和 "),s("code",null,"maxVal"),a("。第三个参数设置用来计算图像梯度的 Sobel 卷积核的大小，默认值为 "),s("code",null,"3"),a("。最后一个参数是 "),s("code",null,"L2gradient"),a("，它可以用来设定求梯度大小的方程。如果设为 "),s("code",null,"True"),a("，就会使用我们上面提到过的方程，否则使用方程："),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mrow",null,[s("mi",{mathvariant:"normal"},"E"),s("mi",{mathvariant:"normal"},"d"),s("mi",{mathvariant:"normal"},"g"),s("mi",{mathvariant:"normal"},"e"),s("mi",{mathvariant:"normal"},"_"),s("mi",{mathvariant:"normal"},"G"),s("mi",{mathvariant:"normal"},"r"),s("mi",{mathvariant:"normal"},"a"),s("mi",{mathvariant:"normal"},"d"),s("mi",{mathvariant:"normal"},"i"),s("mi",{mathvariant:"normal"},"e"),s("mi",{mathvariant:"normal"},"n"),s("mi",{mathvariant:"normal"},"t")]),s("mo",{stretchy:"false"},"("),s("mi",null,"G"),s("mo",{stretchy:"false"},")"),s("mo",null,"="),s("mi",{mathvariant:"normal"},"∣"),s("msubsup",null,[s("mi",null,"G"),s("mi",null,"x"),s("mn",null,"2")]),s("mi",{mathvariant:"normal"},"∣"),s("mo",null,"+"),s("mi",{mathvariant:"normal"},"∣"),s("msubsup",null,[s("mi",null,"G"),s("mi",null,"y"),s("mn",null,"2")]),s("mi",{mathvariant:"normal"},"∣")]),s("annotation",{encoding:"application/x-tex"},"\\mathrm{Edge\\_Gradient}(G) = |G_x^2| + |G_y^2|")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1.06em","vertical-align":"-0.31em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathrm"},"Edge_Gradient")]),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal"},"G"),s("span",{class:"mclose"},")"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1.0641em","vertical-align":"-0.25em"}}),s("span",{class:"mord"},"∣"),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"G"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.8141em"}},[s("span",{style:{top:"-2.453em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight"},"x")])]),s("span",{style:{top:"-3.063em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"2")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.247em"}},[s("span")])])])])]),s("span",{class:"mord"},"∣"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"+"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1.1972em","vertical-align":"-0.3831em"}}),s("span",{class:"mord"},"∣"),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"G"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.8141em"}},[s("span",{style:{top:"-2.453em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.03588em"}},"y")])]),s("span",{style:{top:"-3.063em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"2")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3831em"}},[s("span")])])])])]),s("span",{class:"mord"},"∣")])])]),a("代替，默认值为 "),s("code",null,"False"),a("。")],-1),xl=l(`<div class="language-python line-numbers-mode" data-ext="py"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> cv2</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> numpy </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> np</span></span>
<span class="line"><span style="color:#C586C0;">from</span><span style="color:#D4D4D4;"> matplotlib </span><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> pyplot </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> plt</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">img = cv2.imread(</span><span style="color:#CE9178;">&#39;test.jpg&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">edges = cv2.Canny(img, </span><span style="color:#B5CEA8;">100</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">200</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">plt.subplot(</span><span style="color:#B5CEA8;">121</span><span style="color:#D4D4D4;">), plt.imshow(img, </span><span style="color:#9CDCFE;">cmap</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&#39;gray&#39;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">plt.title(</span><span style="color:#CE9178;">&#39;Original Image&#39;</span><span style="color:#D4D4D4;">), plt.xticks([]), plt.yticks([])</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">plt.subplot(</span><span style="color:#B5CEA8;">122</span><span style="color:#D4D4D4;">), plt.imshow(edges, </span><span style="color:#9CDCFE;">cmap</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&#39;gray&#39;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">plt.title(</span><span style="color:#CE9178;">&#39;Edge Image&#39;</span><span style="color:#D4D4D4;">), plt.xticks([]), plt.yticks([])</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">plt.show()</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>练习：写一个小程序，可以通过调节滑动条来设置阈值 <code>minVal</code> 和 <code>maxVal</code> 进而来进行 Canny 边界检测。</p><h2 id="48-图像金字塔" tabindex="-1"><a class="header-anchor" href="#48-图像金字塔" aria-hidden="true">#</a> 4.8 图像金字塔</h2><details class="hint-container details"><summary>学习目标</summary><ul><li>学习图像金字塔</li><li>使用图像创建一个新水果：“橘子苹果”</li><li>函数 <ul><li><code>cv2.pyrUp()</code></li><li><code>cv2.pyrDown()</code></li></ul></li></ul></details><p>在通常情况下我们使用大小恒定的图像。但在某些情况下，我们需要使用同一副图像的不同分辨率的部分。例如，在搜索图像中的某些内容时，如脸部信息，并不确定该对象在所述图像中的大小。在这种情况下，我们需要创建一组具有不同分辨率的相同图像，并在所有图像中搜索对象。这些具有不同分辨率的图像被称为图像金字塔（因为当它们保持在堆叠中，底部具有最高分辨率图像而顶部具有最低分辨率图像时，它看起来像金字塔）。</p><p>图像金字塔有两种：</p><ol><li>高斯金字塔</li><li>拉普拉斯金字塔</li></ol>`,7),wl=s("p",null,[a("通过去除较低级别（较高分辨率）图像中的连续行和列来形成高斯金字塔中的较高级别（低分辨率）。然后，较高级别的每个像素由来自基础级别中的 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mn",null,"5")]),s("annotation",{encoding:"application/x-tex"},"5")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6444em"}}),s("span",{class:"mord"},"5")])])]),a(" 个像素的贡献形成，具有高斯权重。通过这样做，"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"M"),s("mo",null,"×"),s("mi",null,"N")]),s("annotation",{encoding:"application/x-tex"},"M \\times N")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.7667em","vertical-align":"-0.0833em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.10903em"}},"M"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"×"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6833em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.10903em"}},"N")])])]),a(" 图像变为 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mfrac",null,[s("mi",null,"M"),s("mn",null,"2")]),s("mo",null,"×"),s("mfrac",null,[s("mi",null,"N"),s("mn",null,"2")])]),s("annotation",{encoding:"application/x-tex"},"\\frac{M}{2} \\times \\frac{N}{2}")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1.2173em","vertical-align":"-0.345em"}}),s("span",{class:"mord"},[s("span",{class:"mopen nulldelimiter"}),s("span",{class:"mfrac"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.8723em"}},[s("span",{style:{top:"-2.655em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mtight"},"2")])])]),s("span",{style:{top:"-3.23em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"frac-line",style:{"border-bottom-width":"0.04em"}})]),s("span",{style:{top:"-3.394em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.10903em"}},"M")])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.345em"}},[s("span")])])])]),s("span",{class:"mclose nulldelimiter"})]),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"×"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1.2173em","vertical-align":"-0.345em"}}),s("span",{class:"mord"},[s("span",{class:"mopen nulldelimiter"}),s("span",{class:"mfrac"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.8723em"}},[s("span",{style:{top:"-2.655em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mtight"},"2")])])]),s("span",{style:{top:"-3.23em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"frac-line",style:{"border-bottom-width":"0.04em"}})]),s("span",{style:{top:"-3.394em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.10903em"}},"N")])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.345em"}},[s("span")])])])]),s("span",{class:"mclose nulldelimiter"})])])])]),a(" 图像。因此面积减少到原始面积的四分之一，它被称为 Octave。当我们在金字塔中上升时（即分辨率降低），相同的模式继续。同样，在扩展时，每个级别的区域变为 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mn",null,"4")]),s("annotation",{encoding:"application/x-tex"},"4")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6444em"}}),s("span",{class:"mord"},"4")])])]),a(" 次。我们可以使用 "),s("code",null,"cv.pyrDown()"),a(" 和 "),s("code",null,"cv.pyrUp()"),a(" 函数使用高斯金字塔。")],-1),_l=l('<p>拉普拉斯金字塔由高斯金字塔形成。没有专属功能。拉普拉斯金字塔图像仅与边缘图像相似。它的大部分元素都是零。它们用于图像压缩。拉普拉斯金字塔中的一个层次由高斯金字塔中的该层次与高斯金字塔中的上层的扩展版本之间的差异形成。</p><h2 id="49-opencv-中的轮廓" tabindex="-1"><a class="header-anchor" href="#49-opencv-中的轮廓" aria-hidden="true">#</a> 4.9 OpenCV 中的轮廓</h2><p>21.1 初识轮廓<br> 目标<br> • 理解什么是轮廓<br> • 学习找轮廓，绘制轮廓等<br> • 函数：cv2.findContours()，cv2.drawContours()</p><p>我们要学习<br> • 凸缺陷，以及如何找凸缺陷<br> • 找某一点到一个多边形的最短距离<br> • 不同形状的匹</p><p>21.5 轮廓的层次结构<br> 目标<br> 现在我们要学习轮廓的层次结构了，比如轮廓之间的父子关系。</p><h2 id="410-直方图" tabindex="-1"><a class="header-anchor" href="#410-直方图" aria-hidden="true">#</a> 4.10 直方图</h2><p>22.1 直方图的计算，绘制与分析<br> 目标<br> • 使用 OpenCV 或 NumPy 函数计算直方图<br> • 使用 Opencv 或者 Matplotlib 函数绘制直方图<br> • 将要学习的函数有：cv2.calcHist()，np.histogram()<br> 22.2 直方图均衡化<br> 目标<br> • 本小节我们要学习直方图均衡化的概念，以及如何使用它来改善图片的对<br> 比。<br> 22.3 2D 直方图<br> 目标<br> 本节我们会学习如何绘制 2D 直方图，我们会在下一节中使用到它。<br> 22.4 直方图反向投影<br> 目标<br> 本节我们将要学习直方图反向投影</p><h2 id="411-傅里叶变换" tabindex="-1"><a class="header-anchor" href="#411-傅里叶变换" aria-hidden="true">#</a> 4.11 傅里叶变换</h2><details class="hint-container details"><summary>学习目标</summary><ul><li>使用 OpenCV 对图像进行傅里叶变换</li><li>使用 NumPy 中 FFT（快速傅里叶变换）函数</li><li>傅里叶变换的一些用处</li><li>函数 <ul><li><code>cv2.dft()</code></li><li><code>cv2.idft()</code></li></ul></li></ul></details><h3 id="4111-傅里叶变换的原理" tabindex="-1"><a class="header-anchor" href="#4111-傅里叶变换的原理" aria-hidden="true">#</a> 4.11.1 傅里叶变换的原理</h3><p>傅里叶变换经常被用来分析不同滤波器的频率特性。</p><p>我们可以使用 2D 离散傅里叶变换（DFT）分析图像的频域特性。实现 DFT 的一个快速算法被称为快速傅里叶变换（FFT）。关于傅里叶变换的细节知识可以在任意一本图像处理或信号处理的书中找到。</p>',12),fl=s("p",null,[a("对于一个正弦信号："),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"x"),s("mo",{stretchy:"false"},"("),s("mi",null,"t"),s("mo",{stretchy:"false"},")"),s("mo",null,"="),s("mi",null,"A"),s("mi",null,"sin"),s("mo",null,"⁡"),s("mo",{stretchy:"false"},"("),s("mn",null,"2"),s("mi",null,"π"),s("mi",null,"f"),s("mi",null,"t"),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"},"x(t) = A\\sin(2\\pi ft)")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal"},"x"),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal"},"t"),s("span",{class:"mclose"},")"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal"},"A"),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mop"},"sin"),s("span",{class:"mopen"},"("),s("span",{class:"mord"},"2"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"π"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.10764em"}},"f"),s("span",{class:"mord mathnormal"},"t"),s("span",{class:"mclose"},")")])])]),a(", 它的频率为 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"f")]),s("annotation",{encoding:"application/x-tex"},"f")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8889em","vertical-align":"-0.1944em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.10764em"}},"f")])])]),a("，如果把这个信号转到它的频域表示，我们会在频率 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"f")]),s("annotation",{encoding:"application/x-tex"},"f")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8889em","vertical-align":"-0.1944em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.10764em"}},"f")])])]),a(" 中看到一个峰值。如果我们的信号是由采样产生的离散信号组成，我们会得到类似的频谱图，只不过前面是连续的，现在是离散。")],-1),Al=s("p",null,"你可以把图像想象成沿着两个方向采集的信号。所以对图像同时进行 X 方向和 Y 方向的傅里叶变换，我们就会得到这幅图像的频域表示（频谱图）。",-1),kl=s("p",null,"更直观一点，对于一个正弦信号，如果它的幅度变化非常快，我们可以说它是高频信号，如果变化非常慢，我们称之为低频信号。你可以把这种想法应用到图像中，图像那里的幅度变化非常大呢？边界点或者噪声。所以我们说边界和噪声是图像中的高频分量（注意这里的高频是指变化非常快，而非出现的次数多）。如果没有如此大的幅度变化我们称之为低频分量。",-1),Bl=s("h3",{id:"4112-numpy-中的傅里叶变换",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#4112-numpy-中的傅里叶变换","aria-hidden":"true"},"#"),a(" 4.11.2 NumPy 中的傅里叶变换")],-1),zl=s("p",null,[a("首先我们看看如何使用 NumPy 进行傅里叶变换。NumPy 中的 FFT 包可以帮助我们实现快速傅里叶变换。函数 "),s("code",null,"np.fft.fft2()"),a(" 可以对信号进行频率转换，输出结果是一个复杂的数组。本函数的第一个参数是输入图像，要求是灰度格式。第二个参数是可选的，决定输出数组的大小。输出数组的大小和输入图像大小一样。如果输出结果比输入图像大，输入图像就需要在进行 FFT 前补 "),s("code",null,"0"),a("。如果输出结果比输入图像小的话，输入图像就会被切割。")],-1),Ml=s("p",null,[a("现在我们得到了结果，频率为 "),s("code",null,"0"),a(" 的部分（直流分量）在输出图像的左上角。如果想让它（直流分量）在输出图像的中心，我们还需要将结果沿两个方向平移 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"N"),s("mi",{mathvariant:"normal"},"/"),s("mn",null,"2")]),s("annotation",{encoding:"application/x-tex"},"N/2")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.10903em"}},"N"),s("span",{class:"mord"},"/2")])])]),a("。函数 "),s("code",null,"np.fft.fftshift()"),a(" 可以帮助我们实现这一步。（这样更容易分析）。")],-1),Hl=l('<p>进行完频率变换之后，我们就可以构建振幅谱了。</p><h2 id="412-模板匹配" tabindex="-1"><a class="header-anchor" href="#412-模板匹配" aria-hidden="true">#</a> 4.12 模板匹配</h2><p>学习目标</p><ul><li>使用模板匹配在一幅图像中查找目标</li></ul><p>函数</p><ul><li><code>cv2.matchTemplate()</code></li><li><code>cv2.minMaxLoc()</code></li></ul><p>模板匹配是用来在一副大图中搜寻查找模版图像位置的方法。OpenCV 为我们提供了函数：cv2.matchTemplate()。和 2D 卷积一样，它也是用模板图像在输入图像（大图）上滑动，并在每一个位置对模板图像和与其对应的输入图像的子区域进行比较。OpenCV 提供了几种不同的比较方法（细节请看文档）。返回的结果是一个灰度图像，每一个像素值表示了此区域与模板的匹配程度。</p><p>如果输入图像的大小是（WxH），模板的大小是（wxh），输出的结果的大小就是（W-w+1，H-h+1）。当你得到这幅图之后，就可以使用函数cv2.minMaxLoc() 来找到其中的最小值和最大值的位置了。第一个值为矩形左上角的点（位置），（w，h）为 moban 模板矩形的宽和高。这个矩形就是找到的模板区域了。</p><blockquote><p>注意：如果你使用的比较方法是 <code>cv2.TM_SQDIFF</code>，最小值对应的位置才是匹配的区域。</p></blockquote><h2 id="413-hough-直线变换" tabindex="-1"><a class="header-anchor" href="#413-hough-直线变换" aria-hidden="true">#</a> 4.13 Hough 直线变换</h2><p>学习目标<br> • 理解霍夫变换的概念<br> • 学习如何在一张图片中检测直线<br> • 学习函数：cv2.HoughLines()，cv2.HoughLinesP()</p><h2 id="26-hough-圆环变换" tabindex="-1"><a class="header-anchor" href="#26-hough-圆环变换" aria-hidden="true">#</a> 26 Hough 圆环变换</h2><p>目标<br> • 学习使用霍夫变换在图像中找圆形（环）。<br> • 学习函数：cv2.HoughCircles()。</p><h2 id="27-分水岭算法图像分割" tabindex="-1"><a class="header-anchor" href="#27-分水岭算法图像分割" aria-hidden="true">#</a> 27 分水岭算法图像分割</h2><p>学习目标<br> 本节我们将要学习<br> • 使用分水岭算法基于掩模的图像分割<br> • 函数：cv2.watershed()</p><h2 id="28-使用-grabcut-算法进行交互式前景提取" tabindex="-1"><a class="header-anchor" href="#28-使用-grabcut-算法进行交互式前景提取" aria-hidden="true">#</a> 28. 使用 GrabCut 算法进行交互式前景提取</h2><details class="hint-container details"><summary>学习目标</summary><ul><li>GrabCut 算法原理，使用 GrabCut 算法提取图像的前景</li><li>创建一个交互是程序完成前景提取</li></ul></details><h3 id="281-grabcut-算法原理" tabindex="-1"><a class="header-anchor" href="#281-grabcut-算法原理" aria-hidden="true">#</a> 28.1 GrabCut 算法原理</h3><p>GrabCut 算法是由微软剑桥研究院的 Carsten Rother，Vladimir Kolmogorov 和 Andrew Blake 在文章 <em>&quot;GrabCut&quot; - Interactive Foreground Extraction using Iterated Graph Cuts</em> 中共同提出的。此算法在提取前景的操作过程中需要很少的人机交互，结果非常好。</p><p>从用户的角度来看它到底是如何工作的呢？开始时用户需要用一个矩形将前景区域框住（前景区域应该完全被包括在矩形框内部）。然后算法进行迭代式分割直达达到最好结果。但是有时分割的结果不够理想，比如把前景当成了背景，或者把背景当成了前景。在这种情况下，就需要用户来进行修改了。用户只需要在不理想的部位画一笔（点一下鼠标）就可以了。画一笔就等于在告诉计算机：“嗨，老兄，你把这里弄反了，下次迭代的时候记得改过来呀！”。然后，在下一轮迭代的时候你就会得到一个更好的结果了。</p><p>算法步骤：</p><ol><li>用户输入一个矩形。矩形外的所有区域肯定都是背景，所有的对象都要包含在矩形框内。矩形框内的东西是未知的。同样用户确定前景和背景的任何操作都不会被程序改变。</li><li>计算机会对我们的输入图像做一个初始化标记。它会标记前景和背景像素。</li><li>使用一个高斯混合模型（GMM）对前景和背景建模。</li><li>根据我们的输入，GMM 会学习并创建新的像素分布。对那些分类未知的像素（可能是前景也可能是背景），可以根据它们与已知分类（如背景）的像素的关系来进行分类（就像是在做聚类操作）。</li><li>这样就会根据像素的分布创建一副图。图中的节点就是像素点。除了像素点做节点之外还有两个节点：<strong>SourceNode</strong> 和 <strong>SinkNode</strong>。所有的前景像素都和 SourceNode 相连。所有的背景像素都和 SinkNode 相连。</li><li>将像素连接到 SourceNode/EndNode 的边权重由它们属于同一类（同是前景或同是背景）的概率来决定。两个像素之间的权重由边的信息或者两个像素的相似性来决定。如果两个像素的颜色有很大的不同，那么它们之间的边的权重就会很小。</li><li>使用 mincut 算法对上面得到的图进行分割。它会根据最低成本方程将图分为 SourceNode 和 SinkNode。成本方程就是被剪掉的所有边的权重之和。在裁剪之后，所有连接到 SourceNode 的像素被认为是前景，所有连接到 SinkNode 的像素被认为是背景。</li><li>继续这个过程直到分类收敛。</li></ol>',22),Vl={class:"hint-container info"},Rl=s("p",{class:"hint-container-title"},"参考阅读",-1),Sl={href:"https://www.cs.ru.ac.za/research/g02m1682/",target:"_blank",rel:"noopener noreferrer"},Ol=s("h3",{id:"282-opencv-中的-grabcut-算法",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#282-opencv-中的-grabcut-算法","aria-hidden":"true"},"#"),a(" 28.2 OpenCV 中的 GrabCut 算法")],-1),Tl=s("p",null,[a("OpenCV 包含了 "),s("code",null,"cv2.grabCut()"),a(" 函数。参数：")],-1),Ll=s("ul",null,[s("li",null,[s("code",null,"img"),a("：输入图像")]),s("li",null,[s("code",null,"mask"),a("：掩模图像，用来确定那些区域是背景，前景等，可以设置为： "),s("ul",null,[s("li",null,[s("code",null,"cv2.GC_BGD")]),s("li",null,[s("code",null,"cv2.GC_FGD")]),s("li",null,[s("code",null,"cv2.GC_PR_BGD")]),s("li",null,[s("code",null,"cv2.GC_PR_FGD")])])]),s("li",null,[s("code",null,"rect"),a("：包含前景的矩形，格式为 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mo",{stretchy:"false"},"("),s("mi",null,"x"),s("mo",{separator:"true"},","),s("mtext",null," "),s("mi",null,"y"),s("mo",{separator:"true"},","),s("mtext",null," "),s("mi",null,"w"),s("mo",{separator:"true"},","),s("mtext",null," "),s("mi",null,"h"),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"},"(x,\\,y,\\,w,\\,h)")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal"},"x"),s("span",{class:"mpunct"},","),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"y"),s("span",{class:"mpunct"},","),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02691em"}},"w"),s("span",{class:"mpunct"},","),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord mathnormal"},"h"),s("span",{class:"mclose"},")")])])])]),s("li",null,[s("code",null,"bdgModel"),a(", "),s("code",null,"fgdModel"),a("：算法内部使用的数组. 你只需要创建两个大小为 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mo",{stretchy:"false"},"("),s("mn",null,"1"),s("mo",{separator:"true"},","),s("mtext",null," "),s("mn",null,"65"),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"},"(1,\\,65)")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mopen"},"("),s("span",{class:"mord"},"1"),s("span",{class:"mpunct"},","),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord"},"65"),s("span",{class:"mclose"},")")])])]),a("，数据类型为 "),s("code",null,"np.float64"),a(" 的数组")]),s("li",null,[s("code",null,"iterCount"),a("：算法的迭代次数")]),s("li",null,[s("code",null,"mode"),a("：可以设置为 "),s("code",null,"cv2.GC_INIT_WITH_RECT"),a(" 或 "),s("code",null,"cv2.GC_INIT_WITH_MASK"),a("，也可以联合使用。这是用来确定我们进行修改的方式，矩形模式或者掩模模式")])],-1);function Fl(Gl,Nl){const p=o("ExternalLinkIcon");return n(),e("div",null,[u,v,g,b,C,E,x,w,_,f,A,k,B,z,M,H,V,R,S,O,T,L,F,G,N,s("p",I,[s("span",P,[s("span",q,[Y,s("span",K,[s("span",j,[U,s("span",Z,[s("span",W,[s("span",Q,[s("span",X,[s("span",J,[s("span",$,[ss,s("span",as,[ls,s("span",ns,[(n(),e("svg",es,ts))])]),is,s("span",cs,[os,s("span",rs,[(n(),e("svg",ms,ys))])]),hs]),Ds]),us])])]),vs])])])])])]),s("p",gs,[s("span",bs,[s("span",Cs,[Es,s("span",xs,[s("span",ws,[_s,s("span",fs,[s("span",As,[s("span",ks,[s("span",Bs,[s("span",zs,[s("span",Ms,[Hs,s("span",Vs,[Rs,s("span",Ss,[(n(),e("svg",Os,Ls))])]),Fs,s("span",Gs,[Ns,s("span",Is,[(n(),e("svg",Ps,Ys))])]),Ks]),js]),Us])])]),Zs])])])])])]),s("p",Ws,[s("span",Qs,[s("span",Xs,[Js,s("span",$s,[s("span",sa,[aa,s("span",la,[s("span",na,[s("span",ea,[s("span",pa,[s("span",ta,[s("span",ia,[ca,s("span",oa,[ra,s("span",ma,[(n(),e("svg",da,ha))])]),Da,s("span",ua,[va,s("span",ga,[(n(),e("svg",ba,Ea))])]),xa]),wa]),_a])])]),fa])])])])])]),Aa,ka,Ba,za,Ma,Ha,Va,Ra,Sa,Oa,Ta,La,Fa,s("div",Ga,[Na,s("p",null,[a("请阅读 "),s("a",Ia,[a("MIT: Details about the bilateral filtering"),t(p)]),a(" 获得更多关于双边滤波的信息。")])]),Pa,qa,Ya,Ka,ja,s("div",Ua,[Za,s("p",null,[a("请阅读 "),s("a",Wa,[a("HIPR2: Morphology"),t(p)]),a("。")])]),Qa,Xa,Ja,$a,sl,al,ll,nl,el,pl,tl,il,cl,ol,rl,ml,dl,yl,hl,i(" [[img]] "),Dl,ul,i(" [[img]] "),vl,gl,bl,Cl,El,xl,wl,_l,fl,Al,kl,Bl,zl,Ml,Hl,s("div",Vl,[Rl,s("p",null,[a("其详细原理，可通过 "),s("a",Sl,[a("此项目网站"),t(p)]),a(" 来了解更多。")])]),Ol,Tl,Ll,i(" TODO ")])}const Pl=c(D,[["render",Fl],["__file","index.html.vue"]]);export{Pl as default};
