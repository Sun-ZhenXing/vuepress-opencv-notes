import{_ as p,r as o,o as r,c,b as s,a as e,w as t,d as n,e as i}from"./app-e9203006.js";const D={},d=s("h1",{id:"opencv-部署快速风格迁移",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#opencv-部署快速风格迁移","aria-hidden":"true"},"#"),n(" OpenCV 部署快速风格迁移")],-1),u={class:"table-of-contents"},y={class:"hint-container tip"},_=s("p",{class:"hint-container-title"},"仓库",-1),h=s("p",null,"现在我给出了一份全新实现，支持 CUDA 加速，包含了 C++ 和 Python 版本的 OpenCV 推理代码。",-1),m={href:"https://github.com/Sun-ZhenXing/fast-neural-style",target:"_blank",rel:"noopener noreferrer"},v={href:"https://gitee.com/sun-zhenxing/fast-neural-style",target:"_blank",rel:"noopener noreferrer"},b=s("h2",{id:"1-快速风格迁移简介",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#1-快速风格迁移简介","aria-hidden":"true"},"#"),n(" 1. 快速风格迁移简介")],-1),C={href:"https://arxiv.org/abs/1603.08155",target:"_blank",rel:"noopener noreferrer"},f=s("em",null,"Perceptual Losses for Real-Time Style Transfer and Super-Resolution",-1),E={href:"https://cs.stanford.edu/people/jcjohns/eccv16/",target:"_blank",rel:"noopener noreferrer"},g={href:"https://github.com/jcjohnson/fast-neural-style",target:"_blank",rel:"noopener noreferrer"},k=s("h2",{id:"2-opencv-部署-torch-模型",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#2-opencv-部署-torch-模型","aria-hidden":"true"},"#"),n(" 2. OpenCV 部署 Torch 模型")],-1),j=s("p",null,[n("然后我们新建 "),s("code",null,"main.py"),n("，然后再任意找一张图片 "),s("code",null,"test.jpg"),n("，将文件保存如下：")],-1),B=s("li",null,[s("code",null,"main.py")],-1),A=s("code",null,"models/",-1),q=s("code",null,"eccv16/",-1),x={href:"http://cs.stanford.edu/people/jcjohns/fast-neural-style/models/eccv16/composition_vii.t7",target:"_blank",rel:"noopener noreferrer"},w=s("code",null,"composition_vii.t7",-1),F={href:"http://cs.stanford.edu/people/jcjohns/fast-neural-style/models/eccv16/la_muse.t7",target:"_blank",rel:"noopener noreferrer"},N=s("code",null,"la_muse.t7",-1),V={href:"http://cs.stanford.edu/people/jcjohns/fast-neural-style/models/eccv16/starry_night.t7",target:"_blank",rel:"noopener noreferrer"},T=s("code",null,"starry_night.t7",-1),O={href:"http://cs.stanford.edu/people/jcjohns/fast-neural-style/models/eccv16/the_wave.t7",target:"_blank",rel:"noopener noreferrer"},I=s("code",null,"the_wave.t7",-1),P=s("code",null,"instance_norm/",-1),S={href:"http://cs.stanford.edu/people/jcjohns/fast-neural-style/models/instance_norm/candy.t7",target:"_blank",rel:"noopener noreferrer"},G=s("code",null,"candy.t7",-1),L={href:"http://cs.stanford.edu/people/jcjohns/fast-neural-style/models/instance_norm/feathers.t7",target:"_blank",rel:"noopener noreferrer"},R=s("code",null,"feathers.t7",-1),H={href:"http://cs.stanford.edu/people/jcjohns/fast-neural-style/models/instance_norm/la_muse.t7",target:"_blank",rel:"noopener noreferrer"},K=s("code",null,"la_muse.t7",-1),z={href:"http://cs.stanford.edu/people/jcjohns/fast-neural-style/models/instance_norm/mosaic.t7",target:"_blank",rel:"noopener noreferrer"},U=s("code",null,"mosaic.t7",-1),X={href:"http://cs.stanford.edu/people/jcjohns/fast-neural-style/models/instance_norm/the_scream.t7",target:"_blank",rel:"noopener noreferrer"},Z=s("code",null,"the_scream.t7",-1),J={href:"http://cs.stanford.edu/people/jcjohns/fast-neural-style/models/instance_norm/udnie.t7",target:"_blank",rel:"noopener noreferrer"},M=s("code",null,"udnie.t7",-1),Q=s("li",null,[s("code",null,"test.jpg")],-1),W=i(`<p>然后我们对每一个模型都进行推理测试：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> cv2</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> numpy </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> np</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">def</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">process</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">image_path</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">str</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">model_path</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">str</span><span style="color:#D4D4D4;">):</span></span>
<span class="line"><span style="color:#D4D4D4;">    net = cv2.dnn.readNetFromTorch(model_path)</span></span>
<span class="line"><span style="color:#D4D4D4;">    net.setPreferableBackend(cv2.dnn.DNN_BACKEND_OPENCV)</span></span>
<span class="line"><span style="color:#D4D4D4;">    image = cv2.imread(image_path)</span></span>
<span class="line"><span style="color:#D4D4D4;">    h, w = image.shape[:</span><span style="color:#B5CEA8;">2</span><span style="color:#D4D4D4;">]</span></span>
<span class="line"><span style="color:#D4D4D4;">    blob = cv2.dnn.blobFromImage(</span></span>
<span class="line"><span style="color:#D4D4D4;">        image, </span><span style="color:#B5CEA8;">1.0</span><span style="color:#D4D4D4;">, (w, h), (</span><span style="color:#B5CEA8;">103.939</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">116.779</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">123.680</span><span style="color:#D4D4D4;">), </span><span style="color:#9CDCFE;">swapRB</span><span style="color:#D4D4D4;">=</span><span style="color:#569CD6;">False</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">crop</span><span style="color:#D4D4D4;">=</span><span style="color:#569CD6;">False</span></span>
<span class="line"><span style="color:#D4D4D4;">    )</span></span>
<span class="line"><span style="color:#D4D4D4;">    net.setInput(blob)</span></span>
<span class="line"><span style="color:#D4D4D4;">    out: np.ndarray = net.forward()</span></span>
<span class="line"><span style="color:#D4D4D4;">    out = out.reshape(</span><span style="color:#B5CEA8;">3</span><span style="color:#D4D4D4;">, out.shape[</span><span style="color:#B5CEA8;">2</span><span style="color:#D4D4D4;">], out.shape[</span><span style="color:#B5CEA8;">3</span><span style="color:#D4D4D4;">])</span></span>
<span class="line"><span style="color:#D4D4D4;">    out[</span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">] += </span><span style="color:#B5CEA8;">103.939</span></span>
<span class="line"><span style="color:#D4D4D4;">    out[</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">] += </span><span style="color:#B5CEA8;">116.779</span></span>
<span class="line"><span style="color:#D4D4D4;">    out[</span><span style="color:#B5CEA8;">2</span><span style="color:#D4D4D4;">] += </span><span style="color:#B5CEA8;">123.68</span></span>
<span class="line"><span style="color:#D4D4D4;">    out /= </span><span style="color:#B5CEA8;">255</span></span>
<span class="line"><span style="color:#D4D4D4;">    out = out.transpose(</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">2</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> out</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">model_list = [</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#CE9178;">&quot;./models/eccv16/composition_vii.t7&quot;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#CE9178;">&quot;./models/eccv16/la_muse.t7&quot;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#CE9178;">&quot;./models/eccv16/starry_night.t7&quot;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#CE9178;">&quot;./models/eccv16/the_wave.t7&quot;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#CE9178;">&quot;./models/instance_norm/candy.t7&quot;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#CE9178;">&quot;./models/instance_norm/feathers.t7&quot;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#CE9178;">&quot;./models/instance_norm/la_muse.t7&quot;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#CE9178;">&quot;./models/instance_norm/mosaic.t7&quot;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#CE9178;">&quot;./models/instance_norm/the_scream.t7&quot;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#CE9178;">&quot;./models/instance_norm/udnie.t7&quot;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C586C0;">if</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">__name__</span><span style="color:#D4D4D4;"> == </span><span style="color:#CE9178;">&quot;__main__&quot;</span><span style="color:#D4D4D4;">:</span></span>
<span class="line"><span style="color:#D4D4D4;">    image_path = </span><span style="color:#CE9178;">&quot;test.jpg&quot;</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">for</span><span style="color:#D4D4D4;"> model_path </span><span style="color:#C586C0;">in</span><span style="color:#D4D4D4;"> model_list:</span></span>
<span class="line"><span style="color:#D4D4D4;">        out = process(image_path, model_path)</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#DCDCAA;">print</span><span style="color:#D4D4D4;">(model_path)</span></span>
<span class="line"><span style="color:#D4D4D4;">        cv2.imshow(</span><span style="color:#CE9178;">&quot;out&quot;</span><span style="color:#D4D4D4;">, out)</span></span>
<span class="line"><span style="color:#D4D4D4;">        key = cv2.waitKey()</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#C586C0;">if</span><span style="color:#D4D4D4;"> key == </span><span style="color:#B5CEA8;">27</span><span style="color:#D4D4D4;">:</span></span>
<span class="line"><span style="color:#D4D4D4;">            </span><span style="color:#C586C0;">break</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果需要保存，可以使用下面的代码：</p><div class="language-python" data-ext="py"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#D4D4D4;">out = (out * </span><span style="color:#B5CEA8;">255</span><span style="color:#D4D4D4;">).clip(</span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">255</span><span style="color:#D4D4D4;">).astype(np.uint8)</span></span>
<span class="line"><span style="color:#D4D4D4;">cv2.imwrite(</span><span style="color:#CE9178;">&#39;out.jpg&#39;</span><span style="color:#D4D4D4;">, out)</span></span>
<span class="line"></span></code></pre></div>`,4);function Y($,ss){const a=o("router-link"),l=o("ExternalLinkIcon");return r(),c("div",null,[d,s("nav",u,[s("ul",null,[s("li",null,[e(a,{to:"#1-快速风格迁移简介"},{default:t(()=>[n("1. 快速风格迁移简介")]),_:1})]),s("li",null,[e(a,{to:"#2-opencv-部署-torch-模型"},{default:t(()=>[n("2. OpenCV 部署 Torch 模型")]),_:1})])])]),s("div",y,[_,h,s("ul",null,[s("li",null,[s("a",m,[n("GitHub"),e(l)])]),s("li",null,[s("a",v,[n("Gitee"),e(l)])])])]),b,s("p",null,[n("将一张图片的风格迁移到另一张图片上是耗时任务，但是在 2016 年 "),s("a",C,[f,e(l)]),n(" 论文的提出，实现了实时完成这项任务。")]),s("p",null,[n("在 "),s("a",E,[n("此项目的官方网站"),e(l)]),n(" 上，可以查看论文和其效果，推荐阅读。")]),s("p",null,[n("此项目的原始代码托管在 GitHub 上："),s("a",g,[n("jcjohnson/fast-neural-style"),e(l)]),n("，可以下载其预训练权重直接部署。")]),k,j,s("ul",null,[B,s("li",null,[A,s("ul",null,[s("li",null,[q,s("ul",null,[s("li",null,[s("a",x,[w,e(l)])]),s("li",null,[s("a",F,[N,e(l)])]),s("li",null,[s("a",V,[T,e(l)])]),s("li",null,[s("a",O,[I,e(l)])])])]),s("li",null,[P,s("ul",null,[s("li",null,[s("a",S,[G,e(l)])]),s("li",null,[s("a",L,[R,e(l)])]),s("li",null,[s("a",H,[K,e(l)])]),s("li",null,[s("a",z,[U,e(l)])]),s("li",null,[s("a",X,[Z,e(l)])]),s("li",null,[s("a",J,[M,e(l)])])])])])]),Q]),W])}const es=p(D,[["render",Y],["__file","index.html.vue"]]);export{es as default};
