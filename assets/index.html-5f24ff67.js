import{_ as l,r as o,o as c,c as u,b as n,a,w as p,d as s,e as i}from"./app-b3e40293.js";const r={},d=n("h1",{id:"opencv-部署快速风格迁移",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#opencv-部署快速风格迁移","aria-hidden":"true"},"#"),s(" OpenCV 部署快速风格迁移")],-1),k={class:"table-of-contents"},_={class:"hint-container tip"},m=n("p",{class:"hint-container-title"},"仓库",-1),h=n("p",null,"现在我给出了一份全新实现，支持 CUDA 加速，包含了 C++ 和 Python 版本的 OpenCV 推理代码。",-1),v={href:"https://github.com/Sun-ZhenXing/fast-neural-style",target:"_blank",rel:"noopener noreferrer"},b={href:"https://gitee.com/sun-zhenxing/fast-neural-style",target:"_blank",rel:"noopener noreferrer"},f=n("h2",{id:"_1-快速风格迁移简介",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_1-快速风格迁移简介","aria-hidden":"true"},"#"),s(" 1. 快速风格迁移简介")],-1),g={href:"https://arxiv.org/abs/1603.08155",target:"_blank",rel:"noopener noreferrer"},y=n("em",null,"Perceptual Losses for Real-Time Style Transfer and Super-Resolution",-1),j={href:"https://cs.stanford.edu/people/jcjohns/eccv16/",target:"_blank",rel:"noopener noreferrer"},q={href:"https://github.com/jcjohnson/fast-neural-style",target:"_blank",rel:"noopener noreferrer"},w=n("h2",{id:"_2-opencv-部署-torch-模型",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_2-opencv-部署-torch-模型","aria-hidden":"true"},"#"),s(" 2. OpenCV 部署 Torch 模型")],-1),x=n("p",null,[s("然后我们新建 "),n("code",null,"main.py"),s("，然后再任意找一张图片 "),n("code",null,"test.jpg"),s("，将文件保存如下：")],-1),C=n("li",null,[n("code",null,"main.py")],-1),N=n("code",null,"models/",-1),V=n("code",null,"eccv16/",-1),B={href:"http://cs.stanford.edu/people/jcjohns/fast-neural-style/models/eccv16/composition_vii.t7",target:"_blank",rel:"noopener noreferrer"},T=n("code",null,"composition_vii.t7",-1),E={href:"http://cs.stanford.edu/people/jcjohns/fast-neural-style/models/eccv16/la_muse.t7",target:"_blank",rel:"noopener noreferrer"},O=n("code",null,"la_muse.t7",-1),F={href:"http://cs.stanford.edu/people/jcjohns/fast-neural-style/models/eccv16/starry_night.t7",target:"_blank",rel:"noopener noreferrer"},I=n("code",null,"starry_night.t7",-1),P={href:"http://cs.stanford.edu/people/jcjohns/fast-neural-style/models/eccv16/the_wave.t7",target:"_blank",rel:"noopener noreferrer"},S=n("code",null,"the_wave.t7",-1),D=n("code",null,"instance_norm/",-1),G={href:"http://cs.stanford.edu/people/jcjohns/fast-neural-style/models/instance_norm/candy.t7",target:"_blank",rel:"noopener noreferrer"},L=n("code",null,"candy.t7",-1),R={href:"http://cs.stanford.edu/people/jcjohns/fast-neural-style/models/instance_norm/feathers.t7",target:"_blank",rel:"noopener noreferrer"},A=n("code",null,"feathers.t7",-1),H={href:"http://cs.stanford.edu/people/jcjohns/fast-neural-style/models/instance_norm/la_muse.t7",target:"_blank",rel:"noopener noreferrer"},K=n("code",null,"la_muse.t7",-1),z={href:"http://cs.stanford.edu/people/jcjohns/fast-neural-style/models/instance_norm/mosaic.t7",target:"_blank",rel:"noopener noreferrer"},U=n("code",null,"mosaic.t7",-1),X={href:"http://cs.stanford.edu/people/jcjohns/fast-neural-style/models/instance_norm/the_scream.t7",target:"_blank",rel:"noopener noreferrer"},Z=n("code",null,"the_scream.t7",-1),J={href:"http://cs.stanford.edu/people/jcjohns/fast-neural-style/models/instance_norm/udnie.t7",target:"_blank",rel:"noopener noreferrer"},M=n("code",null,"udnie.t7",-1),Q=n("li",null,[n("code",null,"test.jpg")],-1),W=i(`<p>然后我们对每一个模型都进行推理测试：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> cv2
<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np


<span class="token keyword">def</span> <span class="token function">process</span><span class="token punctuation">(</span>image_path<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">,</span> model_path<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    net <span class="token operator">=</span> cv2<span class="token punctuation">.</span>dnn<span class="token punctuation">.</span>readNetFromTorch<span class="token punctuation">(</span>model_path<span class="token punctuation">)</span>
    net<span class="token punctuation">.</span>setPreferableBackend<span class="token punctuation">(</span>cv2<span class="token punctuation">.</span>dnn<span class="token punctuation">.</span>DNN_BACKEND_OPENCV<span class="token punctuation">)</span>
    image <span class="token operator">=</span> cv2<span class="token punctuation">.</span>imread<span class="token punctuation">(</span>image_path<span class="token punctuation">)</span>
    h<span class="token punctuation">,</span> w <span class="token operator">=</span> image<span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span>
    blob <span class="token operator">=</span> cv2<span class="token punctuation">.</span>dnn<span class="token punctuation">.</span>blobFromImage<span class="token punctuation">(</span>
        image<span class="token punctuation">,</span> <span class="token number">1.0</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>w<span class="token punctuation">,</span> h<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">103.939</span><span class="token punctuation">,</span> <span class="token number">116.779</span><span class="token punctuation">,</span> <span class="token number">123.680</span><span class="token punctuation">)</span><span class="token punctuation">,</span> swapRB<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> crop<span class="token operator">=</span><span class="token boolean">False</span>
    <span class="token punctuation">)</span>
    net<span class="token punctuation">.</span>setInput<span class="token punctuation">(</span>blob<span class="token punctuation">)</span>
    out<span class="token punctuation">:</span> np<span class="token punctuation">.</span>ndarray <span class="token operator">=</span> net<span class="token punctuation">.</span>forward<span class="token punctuation">(</span><span class="token punctuation">)</span>
    out <span class="token operator">=</span> out<span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> out<span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> out<span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
    out<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">+=</span> <span class="token number">103.939</span>
    out<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+=</span> <span class="token number">116.779</span>
    out<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">+=</span> <span class="token number">123.68</span>
    out <span class="token operator">/=</span> <span class="token number">255</span>
    out <span class="token operator">=</span> out<span class="token punctuation">.</span>transpose<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> out


model_list <span class="token operator">=</span> <span class="token punctuation">[</span>
    <span class="token string">&quot;./models/eccv16/composition_vii.t7&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;./models/eccv16/la_muse.t7&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;./models/eccv16/starry_night.t7&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;./models/eccv16/the_wave.t7&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;./models/instance_norm/candy.t7&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;./models/instance_norm/feathers.t7&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;./models/instance_norm/la_muse.t7&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;./models/instance_norm/mosaic.t7&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;./models/instance_norm/the_scream.t7&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;./models/instance_norm/udnie.t7&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span>

<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&quot;__main__&quot;</span><span class="token punctuation">:</span>
    image_path <span class="token operator">=</span> <span class="token string">&quot;test.jpg&quot;</span>
    <span class="token keyword">for</span> model_path <span class="token keyword">in</span> model_list<span class="token punctuation">:</span>
        out <span class="token operator">=</span> process<span class="token punctuation">(</span>image_path<span class="token punctuation">,</span> model_path<span class="token punctuation">)</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span>model_path<span class="token punctuation">)</span>
        cv2<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">&quot;out&quot;</span><span class="token punctuation">,</span> out<span class="token punctuation">)</span>
        key <span class="token operator">=</span> cv2<span class="token punctuation">.</span>waitKey<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> key <span class="token operator">==</span> <span class="token number">27</span><span class="token punctuation">:</span>
            <span class="token keyword">break</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果需要保存，可以使用下面的代码：</p><div class="language-python" data-ext="py"><pre class="language-python"><code>out <span class="token operator">=</span> <span class="token punctuation">(</span>out <span class="token operator">*</span> <span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">.</span>clip<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">.</span>astype<span class="token punctuation">(</span>np<span class="token punctuation">.</span>uint8<span class="token punctuation">)</span>
cv2<span class="token punctuation">.</span>imwrite<span class="token punctuation">(</span><span class="token string">&#39;out.jpg&#39;</span><span class="token punctuation">,</span> out<span class="token punctuation">)</span>
</code></pre></div>`,4);function Y($,nn){const e=o("router-link"),t=o("ExternalLinkIcon");return c(),u("div",null,[d,n("nav",k,[n("ul",null,[n("li",null,[a(e,{to:"#_1-快速风格迁移简介"},{default:p(()=>[s("1. 快速风格迁移简介")]),_:1})]),n("li",null,[a(e,{to:"#_2-opencv-部署-torch-模型"},{default:p(()=>[s("2. OpenCV 部署 Torch 模型")]),_:1})])])]),n("div",_,[m,h,n("ul",null,[n("li",null,[n("a",v,[s("GitHub"),a(t)])]),n("li",null,[n("a",b,[s("Gitee"),a(t)])])])]),f,n("p",null,[s("将一张图片的风格迁移到另一张图片上是耗时任务，但是在 2016 年 "),n("a",g,[y,a(t)]),s(" 论文的提出，实现了实时完成这项任务。")]),n("p",null,[s("在 "),n("a",j,[s("此项目的官方网站"),a(t)]),s(" 上，可以查看论文和其效果，推荐阅读。")]),n("p",null,[s("此项目的原始代码托管在 GitHub 上："),n("a",q,[s("jcjohnson/fast-neural-style"),a(t)]),s("，可以下载其预训练权重直接部署。")]),w,x,n("ul",null,[C,n("li",null,[N,n("ul",null,[n("li",null,[V,n("ul",null,[n("li",null,[n("a",B,[T,a(t)])]),n("li",null,[n("a",E,[O,a(t)])]),n("li",null,[n("a",F,[I,a(t)])]),n("li",null,[n("a",P,[S,a(t)])])])]),n("li",null,[D,n("ul",null,[n("li",null,[n("a",G,[L,a(t)])]),n("li",null,[n("a",R,[A,a(t)])]),n("li",null,[n("a",H,[K,a(t)])]),n("li",null,[n("a",z,[U,a(t)])]),n("li",null,[n("a",X,[Z,a(t)])]),n("li",null,[n("a",J,[M,a(t)])])])])])]),Q]),W])}const an=l(r,[["render",Y],["__file","index.html.vue"]]);export{an as default};
